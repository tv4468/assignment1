{
  "version": 3,
  "sources": ["../../three.js/build/three.js"],
  "sourcesContent": ["// File:src/Three.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar THREE = { REVISION: '77' };\n\n//\n\nif ( typeof define === 'function' && define.amd ) {\n\n\tdefine( 'three', THREE );\n\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\n\n\tmodule.exports = THREE;\n\n}\n\n// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( Function.prototype.name === undefined ) {\n\n\t// Missing in IE9-11.\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE.\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\t'use strict';\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n//\n\nObject.assign( THREE, {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n\n\tMOUSE: { LEFT: 0, MIDDLE: 1, RIGHT: 2 },\n\n\t// GL STATE CONSTANTS\n\n\tCullFaceNone: 0,\n\tCullFaceBack: 1,\n\tCullFaceFront: 2,\n\tCullFaceFrontBack: 3,\n\n\tFrontFaceDirectionCW: 0,\n\tFrontFaceDirectionCCW: 1,\n\n\t// SHADOWING TYPES\n\n\tBasicShadowMap: 0,\n\tPCFShadowMap: 1,\n\tPCFSoftShadowMap: 2,\n\n\t// MATERIAL CONSTANTS\n\n\t// side\n\n\tFrontSide: 0,\n\tBackSide: 1,\n\tDoubleSide: 2,\n\n\t// shading\n\n\tFlatShading: 1,\n\tSmoothShading: 2,\n\n\t// colors\n\n\tNoColors: 0,\n\tFaceColors: 1,\n\tVertexColors: 2,\n\n\t// blending modes\n\n\tNoBlending: 0,\n\tNormalBlending: 1,\n\tAdditiveBlending: 2,\n\tSubtractiveBlending: 3,\n\tMultiplyBlending: 4,\n\tCustomBlending: 5,\n\n\t// custom blending equations\n\t// (numbers start from 100 not to clash with other\n\t// mappings to OpenGL constants defined in Texture.js)\n\n\tAddEquation: 100,\n\tSubtractEquation: 101,\n\tReverseSubtractEquation: 102,\n\tMinEquation: 103,\n\tMaxEquation: 104,\n\n\t// custom blending destination factors\n\n\tZeroFactor: 200,\n\tOneFactor: 201,\n\tSrcColorFactor: 202,\n\tOneMinusSrcColorFactor: 203,\n\tSrcAlphaFactor: 204,\n\tOneMinusSrcAlphaFactor: 205,\n\tDstAlphaFactor: 206,\n\tOneMinusDstAlphaFactor: 207,\n\n\t// custom blending source factors\n\n\t//ZeroFactor: 200,\n\t//OneFactor: 201,\n\t//SrcAlphaFactor: 204,\n\t//OneMinusSrcAlphaFactor: 205,\n\t//DstAlphaFactor: 206,\n\t//OneMinusDstAlphaFactor: 207,\n\tDstColorFactor: 208,\n\tOneMinusDstColorFactor: 209,\n\tSrcAlphaSaturateFactor: 210,\n\n\t// depth modes\n\n\tNeverDepth: 0,\n\tAlwaysDepth: 1,\n\tLessDepth: 2,\n\tLessEqualDepth: 3,\n\tEqualDepth: 4,\n\tGreaterEqualDepth: 5,\n\tGreaterDepth: 6,\n\tNotEqualDepth: 7,\n\n\n\t// TEXTURE CONSTANTS\n\n\tMultiplyOperation: 0,\n\tMixOperation: 1,\n\tAddOperation: 2,\n\n\t// Tone Mapping modes\n\n\tNoToneMapping: 0, // do not do any tone mapping, not even exposure (required for special purpose passes.)\n\tLinearToneMapping: 1, // only apply exposure.\n\tReinhardToneMapping: 2,\n\tUncharted2ToneMapping: 3, // John Hable\n\tCineonToneMapping: 4, // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\n\t// Mapping modes\n\n\tUVMapping: 300,\n\n\tCubeReflectionMapping: 301,\n\tCubeRefractionMapping: 302,\n\n\tEquirectangularReflectionMapping: 303,\n\tEquirectangularRefractionMapping: 304,\n\n\tSphericalReflectionMapping: 305,\n\tCubeUVReflectionMapping: 306,\n\tCubeUVRefractionMapping: 307,\n\n\t// Wrapping modes\n\n\tRepeatWrapping: 1000,\n\tClampToEdgeWrapping: 1001,\n\tMirroredRepeatWrapping: 1002,\n\n\t// Filters\n\n\tNearestFilter: 1003,\n\tNearestMipMapNearestFilter: 1004,\n\tNearestMipMapLinearFilter: 1005,\n\tLinearFilter: 1006,\n\tLinearMipMapNearestFilter: 1007,\n\tLinearMipMapLinearFilter: 1008,\n\n\t// Data types\n\n\tUnsignedByteType: 1009,\n\tByteType: 1010,\n\tShortType: 1011,\n\tUnsignedShortType: 1012,\n\tIntType: 1013,\n\tUnsignedIntType: 1014,\n\tFloatType: 1015,\n\tHalfFloatType: 1025,\n\n\t// Pixel types\n\n\t//UnsignedByteType: 1009,\n\tUnsignedShort4444Type: 1016,\n\tUnsignedShort5551Type: 1017,\n\tUnsignedShort565Type: 1018,\n\n\t// Pixel formats\n\n\tAlphaFormat: 1019,\n\tRGBFormat: 1020,\n\tRGBAFormat: 1021,\n\tLuminanceFormat: 1022,\n\tLuminanceAlphaFormat: 1023,\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\n\tRGBEFormat: THREE.RGBAFormat, //1024;\n\tDepthFormat: 1026,\n\n\t// DDS / ST3C Compressed texture formats\n\n\tRGB_S3TC_DXT1_Format: 2001,\n\tRGBA_S3TC_DXT1_Format: 2002,\n\tRGBA_S3TC_DXT3_Format: 2003,\n\tRGBA_S3TC_DXT5_Format: 2004,\n\n\t// PVRTC compressed texture formats\n\n\tRGB_PVRTC_4BPPV1_Format: 2100,\n\tRGB_PVRTC_2BPPV1_Format: 2101,\n\tRGBA_PVRTC_4BPPV1_Format: 2102,\n\tRGBA_PVRTC_2BPPV1_Format: 2103,\n\n\t// ETC compressed texture formats\n\n\tRGB_ETC1_Format: 2151,\n\n\t// Loop styles for AnimationAction\n\n\tLoopOnce: 2200,\n\tLoopRepeat: 2201,\n\tLoopPingPong: 2202,\n\n\t// Interpolation\n\n\tInterpolateDiscrete: 2300,\n\tInterpolateLinear: 2301,\n\tInterpolateSmooth: 2302,\n\n\t// Interpolant ending modes\n\n\tZeroCurvatureEnding: 2400,\n\tZeroSlopeEnding: 2401,\n\tWrapAroundEnding: 2402,\n\n\t// Triangle Draw modes\n\n\tTrianglesDrawMode: 0,\n\tTriangleStripDrawMode: 1,\n\tTriangleFanDrawMode: 2,\n\n\t// Texture Encodings\n\n\tLinearEncoding: 3000, // No encoding at all.\n\tsRGBEncoding: 3001,\n\tGammaEncoding: 3007, // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\n\n\t// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\n\t// These encodings should not specified as output encodings except in rare situations.\n\tRGBEEncoding: 3002, // AKA Radiance.\n\tLogLuvEncoding: 3003,\n\tRGBM7Encoding: 3004,\n\tRGBM16Encoding: 3005,\n\tRGBDEncoding: 3006, // MaxRange is 256.\n\n\t// Depth packing strategies\n\n\tBasicDepthPacking: 3200, // for writing to float textures for high precision or for visualizing results in RGB buffers\n\tRGBADepthPacking: 3201 // for packing into RGBA buffers.\n\n} );\n\n// File:src/math/Color.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Color = function ( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n};\n\nTHREE.Color.prototype = {\n\n\tconstructor: THREE.Color,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value instanceof THREE.Color ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function () {\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tthis.r = r * r;\n\t\tthis.g = g * g;\n\t\tthis.b = b * b;\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function () {\n\n\t\tthis.r = Math.sqrt( this.r );\n\t\tthis.g = Math.sqrt( this.g );\n\t\tthis.b = Math.sqrt( this.b );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( optionalTarget ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\thsl.h = hue;\n\t\thsl.s = saturation;\n\t\thsl.l = lightness;\n\n\t\treturn hsl;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function ( h, s, l ) {\n\n\t\tvar hsl = this.getHSL();\n\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n};\n\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n// File:src/math/Quaternion.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nTHREE.Quaternion = function ( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n};\n\nTHREE.Quaternion.prototype = {\n\n\tconstructor: THREE.Quaternion,\n\n\tget x () {\n\n\t\treturn this._x;\n\n\t},\n\n\tset x ( value ) {\n\n\t\tthis._x = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget y () {\n\n\t\treturn this._y;\n\n\t},\n\n\tset y ( value ) {\n\n\t\tthis._y = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget z () {\n\n\t\treturn this._z;\n\n\t},\n\n\tset z ( value ) {\n\n\t\tthis._z = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget w () {\n\n\t\treturn this._w;\n\n\t},\n\n\tset w ( value ) {\n\n\t\tthis._w = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar c1 = Math.cos( euler._x / 2 );\n\t\tvar c2 = Math.cos( euler._y / 2 );\n\t\tvar c3 = Math.cos( euler._z / 2 );\n\t\tvar s1 = Math.sin( euler._x / 2 );\n\t\tvar s2 = Math.sin( euler._y / 2 );\n\t\tvar s3 = Math.sin( euler._z / 2 );\n\n\t\tvar order = euler.order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1, r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function ( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\treturn this.conjugate().normalize();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n};\n\nObject.assign( THREE.Quaternion, {\n\n\tslerp: function( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function(\n\t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\n// File:src/math/Vector2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nTHREE.Vector2 = function ( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n};\n\nTHREE.Vector2.prototype = {\n\n\tconstructor: THREE.Vector2,\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t},\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t},\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t},\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t},\n\n\t//\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tif ( isFinite( scalar ) ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t} else {\n\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new THREE.Vector2();\n\t\t\t\tmax = new THREE.Vector2();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tlengthManhattan: function() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.multiplyScalar( length / this.length() );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tindex = index * attribute.itemSize + offset;\n\n\t\tthis.x = attribute.array[ index ];\n\t\tthis.y = attribute.array[ index + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n};\n\n// File:src/math/Vector3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author *kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector3 = function ( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n};\n\nTHREE.Vector3.prototype = {\n\n\tconstructor: THREE.Vector3,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tif ( isFinite( scalar ) ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t} else {\n\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion;\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion;\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tapplyProjection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 projection matrix\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix;\n\n\t\treturn function project( camera ) {\n\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyProjection( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix;\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyProjection( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new THREE.Vector3();\n\t\t\t\tmax = new THREE.Vector3();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tlengthManhattan: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.multiplyScalar( length / this.length() );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\tthis.x = y * v.z - z * v.y;\n\t\tthis.y = z * v.x - x * v.z;\n\t\tthis.z = x * v.y - y * v.x;\n\n\t\treturn this;\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function () {\n\n\t\tvar v1, dot;\n\n\t\treturn function projectOnVector( vector ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\tv1.copy( vector ).normalize();\n\n\t\t\tdot = this.dot( v1 );\n\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\n\n\t\t};\n\n\t}(),\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1;\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1;\n\n\t\treturn function reflect( normal ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tsetFromSpherical: function( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\treturn this.setFromMatrixColumn( m, 3 );\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\tif ( typeof m === 'number' ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\n\t\t\tvar temp = m\n\t\t\tm = index;\n\t\t\tindex = temp;\n\n\t\t}\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tindex = index * attribute.itemSize + offset;\n\n\t\tthis.x = attribute.array[ index ];\n\t\tthis.y = attribute.array[ index + 1 ];\n\t\tthis.z = attribute.array[ index + 2 ];\n\n\t\treturn this;\n\n\t}\n\n};\n\n// File:src/math/Vector4.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector4 = function ( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n};\n\nTHREE.Vector4.prototype = {\n\n\tconstructor: THREE.Vector4,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tif ( isFinite( scalar ) ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t} else {\n\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\t\t\tthis.w = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\t this.x = 1;\n\t\t\t this.y = 0;\n\t\t\t this.z = 0;\n\n\t\t} else {\n\n\t\t\t this.x = q.x / s;\n\t\t\t this.y = q.y / s;\n\t\t\t this.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new THREE.Vector4();\n\t\t\t\tmax = new THREE.Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tlengthManhattan: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.multiplyScalar( length / this.length() );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tindex = index * attribute.itemSize + offset;\n\n\t\tthis.x = attribute.array[ index ];\n\t\tthis.y = attribute.array[ index + 1 ];\n\t\tthis.z = attribute.array[ index + 2 ];\n\t\tthis.w = attribute.array[ index + 3 ];\n\n\t\treturn this;\n\n\t}\n\n};\n\n// File:src/math/Euler.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nTHREE.Euler = function ( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || THREE.Euler.DefaultOrder;\n\n};\n\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nTHREE.Euler.DefaultOrder = 'XYZ';\n\nTHREE.Euler.prototype = {\n\n\tconstructor: THREE.Euler,\n\n\tget x () {\n\n\t\treturn this._x;\n\n\t},\n\n\tset x ( value ) {\n\n\t\tthis._x = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget y () {\n\n\t\treturn this._y;\n\n\t},\n\n\tset y ( value ) {\n\n\t\tthis._y = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget z () {\n\n\t\treturn this._z;\n\n\t},\n\n\tset z ( value ) {\n\n\t\tthis._z = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget order () {\n\n\t\treturn this._order;\n\n\t},\n\n\tset order ( value ) {\n\n\t\tthis._order = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = THREE.Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix;\n\n\t\treturn function ( q, order, update ) {\n\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new THREE.Quaternion();\n\n\t\treturn function ( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\t\t\t\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n};\n\n// File:src/math/Line3.js\n\n/**\n * @author bhouston / http://clara.io\n */\n\nTHREE.Line3 = function ( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\n\n};\n\nTHREE.Line3.prototype = {\n\n\tconstructor: THREE.Line3,\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new THREE.Vector3();\n\t\tvar startEnd = new THREE.Vector3();\n\n\t\treturn function ( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n};\n\n// File:src/math/Box2.js\n\n/**\n * @author bhouston / http://clara.io\n */\n\nTHREE.Box2 = function ( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\n\n};\n\nTHREE.Box2.prototype = {\n\n\tconstructor: THREE.Box2,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new THREE.Vector2();\n\n\t\treturn function ( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tsize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\treturn result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new THREE.Vector2();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new THREE.Vector2();\n\n\t\treturn function ( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n};\n\n// File:src/math/Box3.js\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Box3 = function ( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\n\n};\n\nTHREE.Box3.prototype = {\n\n\tconstructor: THREE.Box3,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( object ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\n\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tv1.fromArray( positions, i );\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tsize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\t point.y < this.min.y || point.y > this.max.y ||\n\t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint;\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\tif ( closestPoint === undefined ) closestPoint = new THREE.Vector3();\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\n\n\t\t\tresult.center = this.center();\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3()\n\t\t];\n\n\t\treturn function ( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n};\n\n// File:src/math/Matrix3.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nTHREE.Matrix3 = function () {\n\n\tthis.elements = new Float32Array( [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t] );\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n};\n\nTHREE.Matrix3.prototype = {\n\n\tconstructor: THREE.Matrix3,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToVector3Array: function () {\n\n\t\tvar v1;\n\n\t\treturn function ( array, offset, length ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\tv1.fromArray( array, j );\n\t\t\t\tv1.applyMatrix3( this );\n\t\t\t\tv1.toArray( array, j );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t};\n\n\t}(),\n\n\tapplyToBuffer: function () {\n\n\t\tvar v1;\n\n\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn buffer;\n\n\t\t};\n\n\t}(),\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix instanceof THREE.Matrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate || false ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\t\t}\n\t\t\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\treturn this.toArray( array, offset );\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis.elements.set( array );\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ]  = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n};\n\n// File:src/math/Matrix4.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Matrix4 = function () {\n\n\tthis.elements = new Float32Array( [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t] );\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n};\n\nTHREE.Matrix4.prototype = {\n\n\tconstructor: THREE.Matrix4,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tthis.elements.set( m.elements );\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0,       0,       0,       1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1;\n\n\t\treturn function ( m ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\tte[ 4 ] = xy - wz;\n\t\tte[ 8 ] = xz + wy;\n\n\t\tte[ 1 ] = xy + wz;\n\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\tte[ 9 ] = yz - wx;\n\n\t\tte[ 2 ] = xz - wy;\n\t\tte[ 6 ] = yz + wx;\n\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function () {\n\n\t\tvar x, y, z;\n\n\t\treturn function ( eye, target, up ) {\n\n\t\t\tif ( x === undefined ) {\n\n\t\t\t\tx = new THREE.Vector3();\n\t\t\t\ty = new THREE.Vector3();\n\t\t\t\tz = new THREE.Vector3();\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target ).normalize();\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\tz.z += 0.0001;\n\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t}\n\n\t\t\ty.crossVectors( z, x );\n\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyToArray: function ( a, b, r ) {\n\n\t\tvar te = this.elements;\n\n\t\tthis.multiplyMatrices( a, b );\n\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToVector3Array: function () {\n\n\t\tvar v1;\n\n\t\treturn function ( array, offset, length ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\tv1.fromArray( array, j );\n\t\t\t\tv1.applyMatrix4( this );\n\t\t\t\tv1.toArray( array, j );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t};\n\n\t}(),\n\n\tapplyToBuffer: function () {\n\n\t\tvar v1;\n\n\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn buffer;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\treturn this.toArray( array, offset );\n\n\t},\n\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function () {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate || false ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\t\t\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0,  0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s,  c, 0,\n\t\t\t0, 0,  0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts,  c, 0, 0,\n\t\t\t0,  0, 1, 0,\n\t\t\t0,  0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\tthis.scale( scale );\n\t\tthis.setPosition( position );\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector, matrix;\n\n\t\treturn function ( position, quaternion, scale ) {\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tvector = new THREE.Vector3();\n\t\t\t\tmatrix = new THREE.Matrix4();\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) {\n\n\t\t\t\tsx = - sx;\n\n\t\t\t}\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakePerspective: function ( fov, aspect, near, far ) {\n\n\t\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\n\t\tvar ymin = - ymax;\n\t\tvar xmin = ymin * aspect;\n\t\tvar xmax = ymax * aspect;\n\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis.elements.set( array );\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ]  = te[ 8 ];\n\t\tarray[ offset + 9 ]  = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n};\n\n// File:src/math/Ray.js\n\n/**\n * @author bhouston / http://clara.io\n */\n\nTHREE.Ray = function ( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\n\n};\n\nTHREE.Ray.prototype = {\n\n\tconstructor: THREE.Ray,\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\tresult.subVectors( point, this.origin );\n\t\tvar directionDistance = result.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn result.copy( this.origin );\n\n\t\t}\n\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new THREE.Vector3();\n\t\tvar segDir = new THREE.Vector3();\n\t\tvar diff = new THREE.Vector3();\n\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( sphere, optionalTarget ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t :  null;\n\n\t},\n\n\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, optionalTarget );\n\n\t},\n\n\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, optionalTarget ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function ( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new THREE.Vector3();\n\t\tvar edge1 = new THREE.Vector3();\n\t\tvar edge2 = new THREE.Vector3();\n\t\tvar normal = new THREE.Vector3();\n\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.sub( this.origin );\n\t\tthis.direction.normalize();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n};\n\n// File:src/math/Sphere.js\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Sphere = function ( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n};\n\nTHREE.Sphere.prototype = {\n\n\tconstructor: THREE.Sphere,\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new THREE.Box3();\n\n\t\treturn function ( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).center( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We use the following equation to compute the signed distance from\n\t\t// the center of the sphere to the plane.\n\t\t//\n\t\t// distance = q * n - d\n\t\t//\n\t\t// If this distance is greater than the radius of the sphere,\n\t\t// then there is no intersection.\n\n\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\tresult.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tresult.sub( this.center ).normalize();\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\tvar box = optionalTarget || new THREE.Box3();\n\n\t\tbox.set( this.center, this.center );\n\t\tbox.expandByScalar( this.radius );\n\n\t\treturn box;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n};\n\n// File:src/math/Frustum.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\n\n\t];\n\n};\n\nTHREE.Frustum.prototype = {\n\n\tconstructor: THREE.Frustum,\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new THREE.Sphere();\n\n\t\treturn function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new THREE.Sphere();\n\n\t\treturn function ( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new THREE.Vector3(),\n\t\t\tp2 = new THREE.Vector3();\n\n\t\treturn function ( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n};\n\n// File:src/math/Plane.js\n\n/**\n * @author bhouston / http://clara.io\n */\n\nTHREE.Plane = function ( normal, constant ) {\n\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n};\n\nTHREE.Plane.prototype = {\n\n\tconstructor: THREE.Plane,\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\n\t\treturn function ( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n\t},\n\n\torthoPoint: function ( point, optionalTarget ) {\n\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( line, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar m1 = new THREE.Matrix3();\n\n\t\treturn function ( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t// transform normal based on theory here:\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant = this.constant - offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n};\n\n// File:src/math/Spherical.js\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nTHREE.Spherical = function ( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n};\n\nTHREE.Spherical.prototype = {\n\n\tconstructor: THREE.Spherical,\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius.copy( other.radius );\n\t\tthis.phi.copy( other.phi );\n\t\tthis.theta.copy( other.theta );\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function() {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( THREE.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n};\n\n// File:src/math/Math.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\tvar uuid = new Array( 36 );\n\t\tvar rnd = 0, r;\n\n\t\treturn function () {\n\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uuid.join( '' );\n\n\t\t};\n\n\t}(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * THREE.Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * THREE.Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tvalue --;\n\t\tvalue |= value >> 1;\n\t\tvalue |= value >> 2;\n\t\tvalue |= value >> 4;\n\t\tvalue |= value >> 8;\n\t\tvalue |= value >> 16;\n\t\tvalue ++;\n\n\t\treturn value;\n\n\t}\n\n};\n\n// File:src/math/Spline.js\n\n/**\n * Spline from Tween.js, slightly optimized (and trashed)\n * http://sole.github.com/tween.js/examples/05_spline.html\n *\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Spline = function ( points ) {\n\n\tthis.points = points;\n\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\n\tpoint, intPoint, weight, w2, w3,\n\tpa, pb, pc, pd;\n\n\tthis.initFromArray = function ( a ) {\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\n\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\n\n\t\t}\n\n\t};\n\n\tthis.getPoint = function ( k ) {\n\n\t\tpoint = ( this.points.length - 1 ) * k;\n\t\tintPoint = Math.floor( point );\n\t\tweight = point - intPoint;\n\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n\t\tc[ 1 ] = intPoint;\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n\n\t\tpa = this.points[ c[ 0 ] ];\n\t\tpb = this.points[ c[ 1 ] ];\n\t\tpc = this.points[ c[ 2 ] ];\n\t\tpd = this.points[ c[ 3 ] ];\n\n\t\tw2 = weight * weight;\n\t\tw3 = weight * w2;\n\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\n\n\t\treturn v3;\n\n\t};\n\n\tthis.getControlPointsArray = function () {\n\n\t\tvar i, p, l = this.points.length,\n\t\t\tcoords = [];\n\n\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\tp = this.points[ i ];\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\n\n\t\t}\n\n\t\treturn coords;\n\n\t};\n\n\t// approximate length by summing linear segments\n\n\tthis.getLength = function ( nSubDivisions ) {\n\n\t\tvar i, index, nSamples, position,\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\n\t\t\toldPosition = new THREE.Vector3(),\n\t\t\ttmpVec = new THREE.Vector3(),\n\t\t\tchunkLengths = [],\n\t\t\ttotalLength = 0;\n\n\t\t// first point has 0 length\n\n\t\tchunkLengths[ 0 ] = 0;\n\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\n\n\t\tnSamples = this.points.length * nSubDivisions;\n\n\t\toldPosition.copy( this.points[ 0 ] );\n\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\n\n\t\t\tindex = i / nSamples;\n\n\t\t\tposition = this.getPoint( index );\n\t\t\ttmpVec.copy( position );\n\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\n\n\t\t\toldPosition.copy( position );\n\n\t\t\tpoint = ( this.points.length - 1 ) * index;\n\t\t\tintPoint = Math.floor( point );\n\n\t\t\tif ( intPoint !== oldIntPoint ) {\n\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\n\t\t\t\toldIntPoint = intPoint;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// last point ends with total length\n\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\n\n\t\treturn { chunks: chunkLengths, total: totalLength };\n\n\t};\n\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\n\n\t\tvar i, j,\n\t\t\tindex, indexCurrent, indexNext,\n\t\t\trealDistance,\n\t\t\tsampling, position,\n\t\t\tnewpoints = [],\n\t\t\ttmpVec = new THREE.Vector3(),\n\t\t\tsl = this.getLength();\n\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\n\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\n\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\n\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\n\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\n\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\n\t\t\tindexNext = i / ( this.points.length - 1 );\n\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\n\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\n\n\t\t\t\tposition = this.getPoint( index );\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\n\n\t\t\t}\n\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\n\n\t\t}\n\n\t\tthis.points = newpoints;\n\n\t};\n\n\t// Catmull-Rom\n\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n};\n\n// File:src/math/Triangle.js\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Triangle = function ( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\n\n};\n\nTHREE.Triangle.normal = function () {\n\n\tvar v0 = new THREE.Vector3();\n\n\treturn function ( a, b, c, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\tresult.subVectors( c, b );\n\t\tv0.subVectors( a, b );\n\t\tresult.cross( v0 );\n\n\t\tvar resultLengthSq = result.lengthSq();\n\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t}\n\n\t\treturn result.set( 0, 0, 0 );\n\n\t};\n\n}();\n\n// static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\nTHREE.Triangle.barycoordFromPoint = function () {\n\n\tvar v0 = new THREE.Vector3();\n\tvar v1 = new THREE.Vector3();\n\tvar v2 = new THREE.Vector3();\n\n\treturn function ( point, a, b, c, optionalTarget ) {\n\n\t\tv0.subVectors( c, a );\n\t\tv1.subVectors( b, a );\n\t\tv2.subVectors( point, a );\n\n\t\tvar dot00 = v0.dot( v0 );\n\t\tvar dot01 = v0.dot( v1 );\n\t\tvar dot02 = v0.dot( v2 );\n\t\tvar dot11 = v1.dot( v1 );\n\t\tvar dot12 = v1.dot( v2 );\n\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tvar invDenom = 1 / denom;\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn result.set( 1 - u - v, v, u );\n\n\t};\n\n}();\n\nTHREE.Triangle.containsPoint = function () {\n\n\tvar v1 = new THREE.Vector3();\n\n\treturn function ( point, a, b, c ) {\n\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t};\n\n}();\n\nTHREE.Triangle.prototype = {\n\n\tconstructor: THREE.Triangle,\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tarea: function () {\n\n\t\tvar v0 = new THREE.Vector3();\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function () {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tmidpoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tnormal: function ( optionalTarget ) {\n\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tplane: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Plane();\n\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane, edgeList, projectedPoint, closestPoint;\n\n\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\tif ( plane === undefined ) {\n\n\t\t\t\tplane = new THREE.Plane();\n\t\t\t\tedgeList = [ new THREE.Line3(), new THREE.Line3(), new THREE.Line3() ];\n\t\t\t\tprojectedPoint = new THREE.Vector3();\n\t\t\t\tclosestPoint = new THREE.Vector3();\n\n\t\t\t}\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n};\n\n// File:src/math/Interpolant.js\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nTHREE.Interpolant = function(\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n};\n\nTHREE.Interpolant.prototype = {\n\n\tconstructor: THREE.Interpolant,\n\n\tevaluate: function( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[   i1   ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n//- See http://jsperf.com/comparison-to-undefined/3\n//- slower code:\n//-\n//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n//- slower code:\n//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tthrow new Error( \"call to abstract method\" );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t// empty\n\n\t}\n\n};\n\nObject.assign( THREE.Interpolant.prototype, {\n\n\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\n\t\tTHREE.Interpolant.prototype.copySampleValue_,\n\n\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\n\t\tTHREE.Interpolant.prototype.copySampleValue_\n\n} );\n\n// File:src/math/interpolants/CubicInterpolant.js\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nTHREE.CubicInterpolant = function(\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tTHREE.Interpolant.call(\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = -0;\n\tthis._offsetPrev = -0;\n\tthis._weightNext = -0;\n\tthis._offsetNext = -0;\n\n};\n\nTHREE.CubicInterpolant.prototype =\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\tconstructor: THREE.CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\n\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase THREE.ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase THREE.ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n// File:src/math/interpolants/DiscreteInterpolant.js\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nTHREE.DiscreteInterpolant = function(\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tTHREE.Interpolant.call(\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n};\n\nTHREE.DiscreteInterpolant.prototype =\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\tconstructor: THREE.DiscreteInterpolant,\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n// File:src/math/interpolants/LinearInterpolant.js\n\n/**\n * @author tschw\n */\n\nTHREE.LinearInterpolant = function(\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tTHREE.Interpolant.call(\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n};\n\nTHREE.LinearInterpolant.prototype =\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\tconstructor: THREE.LinearInterpolant,\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n// File:src/math/interpolants/QuaternionLinearInterpolant.js\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nTHREE.QuaternionLinearInterpolant = function(\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tTHREE.Interpolant.call(\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n};\n\nTHREE.QuaternionLinearInterpolant.prototype =\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\tconstructor: THREE.QuaternionLinearInterpolant,\n\n\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tTHREE.Quaternion.slerpFlat( result, 0,\n\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n// File:src/core/Clock.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Clock = function ( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n};\n\nTHREE.Clock.prototype = {\n\n\tconstructor: THREE.Clock,\n\n\tstart: function () {\n\n\t\tthis.startTime = ( performance || Date ).now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( performance || Date ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n};\n\n// File:src/core/EventDispatcher.js\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nTHREE.EventDispatcher = function () {};\n\nObject.assign( THREE.EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = [], i = 0;\n\t\t\tvar length = listenerArray.length;\n\n\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\tarray[ i ] = listenerArray[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\n// File:src/core/Layers.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Layers = function () {\n\n\tthis.mask = 1;\n\n};\n\nTHREE.Layers.prototype = {\n\n\tconstructor: THREE.Layers,\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n};\n\n// File:src/core/Raycaster.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\n( function ( THREE ) {\n\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\n\n\t\tthis.ray = new THREE.Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t};\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tTHREE.Raycaster.prototype = {\n\n\t\tconstructor: THREE.Raycaster,\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t};\n\n}( THREE ) );\n\n// File:src/core/Object3D.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nTHREE.Object3D = function () {\n\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = THREE.Object3D.DefaultUp.clone();\n\n\tvar position = new THREE.Vector3();\n\tvar rotation = new THREE.Euler();\n\tvar quaternion = new THREE.Quaternion();\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new THREE.Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new THREE.Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new THREE.Matrix4();\n\tthis.matrixWorld = new THREE.Matrix4();\n\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new THREE.Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n};\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\n\nObject.assign( THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new THREE.Quaternion();\n\n\t\treturn function ( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\n\n\t\treturn function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\n\n\t\treturn function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\n\n\t\treturn function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\n\n\t\treturn function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\n\n\t\treturn function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\n\n\t\treturn function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new THREE.Matrix4();\n\n\t\treturn function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new THREE.Matrix4();\n\n\t\treturn function ( vector ) {\n\n\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object instanceof THREE.Object3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new THREE.Vector3();\n\t\tvar scale = new THREE.Vector3();\n\n\t\treturn function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldRotation: function () {\n\n\t\tvar quaternion = new THREE.Quaternion();\n\n\t\treturn function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Euler();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new THREE.Vector3();\n\t\tvar quaternion = new THREE.Quaternion();\n\n\t\treturn function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new THREE.Quaternion();\n\n\t\treturn function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is '' when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.4,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\t//\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\n\n\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\n\n\t\t\t}\n\n\t\t\tobject.geometry = this.geometry.uuid;\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\n\n\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\n\n\t\t\t}\n\n\t\t\tobject.material = this.material.uuid;\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache ( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\nTHREE.Object3DIdCount = 0;\n\n// File:src/core/Face3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n};\n\nTHREE.Face3.prototype = {\n\n\tconstructor: THREE.Face3,\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n};\n\n// File:src/core/BufferAttribute.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferAttribute = function ( array, itemSize, normalized ) {\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\tthis.normalized = normalized === true;\n\n};\n\nTHREE.BufferAttribute.prototype = {\n\n\tconstructor: THREE.BufferAttribute,\n\n\tget count() {\n\n\t\treturn this.array.length / this.itemSize;\n\n\t},\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new THREE.Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyIndicesArray: function ( indices ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\tvar index = indices[ i ];\n\n\t\t\tarray[ offset ++ ] = index.a;\n\t\t\tarray[ offset ++ ] = index.b;\n\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new THREE.Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new THREE.Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new THREE.Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n};\n\n//\n\nTHREE.Int8Attribute = function ( array, itemSize ) {\n\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\n\n};\n\nTHREE.Uint8Attribute = function ( array, itemSize ) {\n\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\n\n};\n\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\n\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\n\n};\n\nTHREE.Int16Attribute = function ( array, itemSize ) {\n\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\n\n};\n\nTHREE.Uint16Attribute = function ( array, itemSize ) {\n\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\n\n};\n\nTHREE.Int32Attribute = function ( array, itemSize ) {\n\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\n\n};\n\nTHREE.Uint32Attribute = function ( array, itemSize ) {\n\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\n\n};\n\nTHREE.Float32Attribute = function ( array, itemSize ) {\n\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\n\n};\n\nTHREE.Float64Attribute = function ( array, itemSize ) {\n\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\n\n};\n\n\n// Deprecated\n\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\n\n};\n\n// File:src/core/InstancedBufferAttribute.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\n\n\tTHREE.BufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n};\n\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\n\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\n\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\n\n\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\treturn this;\n\n};\n\n// File:src/core/InterleavedBuffer.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nTHREE.InterleavedBuffer = function ( array, stride ) {\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.array = array;\n\tthis.stride = stride;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n};\n\nTHREE.InterleavedBuffer.prototype = {\n\n\tconstructor: THREE.InterleavedBuffer,\n\n\tget length () {\n\n\t\treturn this.array.length;\n\n\t},\n\n\tget count () {\n\n\t\treturn this.array.length / this.stride;\n\n\t},\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n};\n\n// File:src/core/InstancedInterleavedBuffer.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\n\n\tTHREE.InterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n};\n\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\n\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\n\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\n\n\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\treturn this;\n\n};\n\n// File:src/core/InterleavedBufferAttribute.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n};\n\n\nTHREE.InterleavedBufferAttribute.prototype = {\n\n\tconstructor: THREE.InterleavedBufferAttribute,\n\n\tget length() {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\n\t\treturn this.array.length;\n\n\t},\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n};\n\n// File:src/core/Geometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nTHREE.Geometry = function () {\n\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [ [] ];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.elementsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n};\n\nObject.assign( THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1;\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1;\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1;\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1;\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1;\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj;\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new THREE.Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( indices !== undefined ) {\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = this.boundingBox.center().negate();\n\n\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\treturn offset;\n\n\t},\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new THREE.Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new THREE.Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new THREE.Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\n\tcomputeLineDistances: function () {\n\n\t\tvar d = 0;\n\t\tvar vertices = this.vertices;\n\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\tvertexOffset = this.vertices.length,\n\t\tvertices1 = this.vertices,\n\t\tvertices2 = geometry.vertices,\n\t\tfaces1 = this.faces,\n\t\tfaces2 = geometry.faces,\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\tvar dupIndex = - 1;\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tdupIndex = n;\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.4,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t// Handle primitives\n\n\t\tvar parameters = this.parameters;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t}\n\n\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\tthis.constructor.apply( geometry, values );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\treturn new this.constructor().copy( this );\n\t\t*/\n\n\t\treturn new THREE.Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.vertices = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [ [] ];\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nTHREE.GeometryIdCount = 0;\n\n// File:src/core/DirectGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.DirectGeometry = function () {\n\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'DirectGeometry';\n\n\tthis.indices = [];\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n};\n\nObject.assign( THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {\n\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\n\n\tcomputeFaceNormals: function () {\n\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\n\n\t},\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n// File:src/core/BufferGeometry.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferGeometry = function () {\n\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n};\n\nObject.assign( THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tthis.index = index;\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToVector3Array( position.array );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1;\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1;\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1;\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1;\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1;\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj;\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = this.boundingBox.center().negate();\n\n\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\treturn offset;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\n\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object instanceof THREE.Mesh ) {\n\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tvar attribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tvar attribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tvar attribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tvar attribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tvar attribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t}\n\n\t\tvar positions = this.attributes.position.array;\n\n\t\tif ( positions !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromArray( positions );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new THREE.Box3();\n\t\tvar vector = new THREE.Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t\t}\n\n\t\t\tvar positions = this.attributes.position.array;\n\n\t\t\tif ( positions ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromArray( positions );\n\t\t\t\tbox.center( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\n\n\t\t\t\t\tvector.fromArray( positions, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC,\n\n\t\t\tpA = new THREE.Vector3(),\n\t\t\tpB = new THREE.Vector3(),\n\t\t\tpC = new THREE.Vector3(),\n\n\t\t\tcb = new THREE.Vector3(),\n\t\t\tab = new THREE.Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar normals = this.attributes.normal.array;\n\n\t\tvar x, y, z, n;\n\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\n\n\t\t\tx = normals[ i ];\n\t\t\ty = normals[ i + 1 ];\n\t\t\tz = normals[ i + 2 ];\n\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n\t\t\tnormals[ i ] *= n;\n\t\t\tnormals[ i + 1 ] *= n;\n\t\t\tnormals[ i + 2 ] *= n;\n\n\t\t}\n\n\t},\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new THREE.BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new THREE.BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.4,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t// Handle primitives\n\n\t\tvar parameters = this.parameters;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t}\n\n\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\tthis.constructor.apply( geometry, values );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\treturn new this.constructor().copy( this );\n\t\t*/\n\n\t\treturn new THREE.BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nTHREE.BufferGeometry.MaxIndex = 65535;\n\n// File:src/core/InstancedBufferGeometry.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nTHREE.InstancedBufferGeometry = function () {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n};\n\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\n\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\n\n\tthis.groups.push( {\n\n\t\tstart: start,\n\t\tcount: count,\n\t\tinstances: instances\n\n\t} );\n\n};\n\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\n\n\tvar index = source.index;\n\n\tif ( index !== null ) {\n\n\t\tthis.setIndex( index.clone() );\n\n\t}\n\n\tvar attributes = source.attributes;\n\n\tfor ( var name in attributes ) {\n\n\t\tvar attribute = attributes[ name ];\n\t\tthis.addAttribute( name, attribute.clone() );\n\n\t}\n\n\tvar groups = source.groups;\n\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\tvar group = groups[ i ];\n\t\tthis.addGroup( group.start, group.count, group.instances );\n\n\t}\n\n\treturn this;\n\n};\n\n// File:src/core/Uniform.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Uniform = function ( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n\tthis.dynamic = false;\n\n};\n\nTHREE.Uniform.prototype = {\n\n\tconstructor: THREE.Uniform,\n\n\tonUpdate: function ( callback ) {\n\n\t\tthis.dynamic = true;\n\t\tthis.onUpdateCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n};\n\n// File:src/animation/AnimationAction.js\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nTHREE.AnimationAction = function() {\n\n\tthrow new Error( \"THREE.AnimationAction: \" +\n\t\t\t\"Use mixer.clipAction for construction.\" );\n\n};\n\nTHREE.AnimationAction._new =\n\t\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = THREE.LoopRepeat;\n\tthis._loopCount = -1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// false -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// true -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n};\n\nTHREE.AnimationAction._new.prototype = {\n\n\tconstructor: THREE.AnimationAction._new,\n\n\t// State & Scheduling\n\n\tplay: function() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = -1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function() {\n\n\t\tvar start = this._startTime;\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function() {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\tvar mixer = this._mixer;\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function() {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the weight stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function() {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function() {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function() {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\t\t// called by the mixer\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === THREE.LoopOnce ) {\n\n\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t// just started\n\n\t\t\t\tthis.loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === THREE.LoopPingPong );\n\n\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= THREE.ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= THREE.ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = THREE.WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = THREE.WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n};\n\n\n// File:src/animation/AnimationClip.js\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nTHREE.AnimationClip = function ( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : -1;\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\t// maybe only do these on demand, as doing them here could potentially slow down loading\n\t// but leaving these here during development as this ensures a lot of testing of these functions\n\tthis.trim();\n\tthis.optimize();\n\n};\n\nTHREE.AnimationClip.prototype = {\n\n\tconstructor: THREE.AnimationClip,\n\n\tresetDuration: function() {\n\n\t\tvar tracks = this.tracks,\n\t\t\tduration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max(\n\t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function() {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function() {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n};\n\n// Static methods:\n\nObject.assign( THREE.AnimationClip, {\n\n\tparse: function( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( THREE.KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\n\ttoJSON: function( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( THREE.KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\n\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\ti,\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = THREE.AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = THREE.AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = THREE.AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\t\tnew THREE.NumberKeyframeTrack(\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\ttimes, values\n\t\t\t\t\t).scale( 1.0 / fps ) );\n\t\t}\n\n\t\treturn new THREE.AnimationClip( name, -1, tracks );\n\n\t},\n\n\tfindByName: function( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function( animation, bones, nodeName ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function(\n\t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tTHREE.AnimationUtils.flattenJSON(\n\t\t\t\t\t\tanimationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || -1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets in a way exactly compatible\n\t\t\t// with AnimationHandler.init( animation )\n\t\t\tif ( animationKeys[0].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0;\n\t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[k];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new THREE.NumberKeyframeTrack(\n\t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tTHREE.QuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\n// File:src/animation/AnimationMixer.js\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nTHREE.AnimationMixer = function( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n};\n\nObject.assign( THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tTHREE.AnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new THREE.\n\t\t\t\tAnimationMixer._Action( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tTHREE.AnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function() {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\tif ( action.enabled ) {\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function() {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\nTHREE.AnimationMixer._Action = THREE.AnimationAction._new;\n\n// Implementation details:\n\nObject.assign( THREE.AnimationMixer.prototype, {\n\n\t_bindAction: function( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new THREE.PropertyMixer(\n\t\t\t\t\t\tTHREE.PropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< _Action >\t- used as prototypes\n\t\t// \t\tactionByRoot: _Action\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for _Action objects\n\n\t_isActiveAction: function( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function() {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new THREE.LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\n\n} );\n\n// File:src/animation/AnimationObjectGroup.js\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nTHREE.AnimationObjectGroup = function( var_args ) {\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() { return scope._objects.length; },\n\t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\n\t\t},\n\n\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t};\n\n};\n\nTHREE.AnimationObjectGroup.prototype = {\n\n\tconstructor: THREE.AnimationObjectGroup,\n\n\tadd: function( var_args ) {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\tnew THREE.PropertyBinding(\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tvar knownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new THREE.PropertyBinding(\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject) {\n\n\t\t\t\tconsole.error( \"Different objects with the same UUID \" +\n\t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\n\t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function( var_args ) {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function( var_args ) {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function( path, parsedPath ) {\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects,\n\t\t\t\tn = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\n\t\t\tbindingsForPath[ i ] =\n\t\t\t\t\tnew THREE.PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function( path ) {\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n};\n\n\n// File:src/animation/AnimationUtils.js\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nTHREE.AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function( array, from, to ) {\n\n\t\tif ( THREE.AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\treturn new array.constructor( array.subarray( from, to ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n// File:src/animation/KeyframeTrack.js\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nTHREE.KeyframeTrack = function ( name, times, values, interpolation ) {\n\n\tif( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\tif( times === undefined || times.length === 0 ) {\n\n\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t}\n\n\tthis.name = name;\n\n\tthis.times = THREE.AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = THREE.AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n};\n\nTHREE.KeyframeTrack.prototype = {\n\n\tconstructor: THREE.KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: THREE.InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function( result ) {\n\n\t\treturn new THREE.DiscreteInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\treturn new THREE.LinearInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function( result ) {\n\n\t\treturn new THREE.CubicInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase THREE.InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase THREE.InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase THREE.InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn THREE.InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn THREE.InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn THREE.InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function( timeOffset ) {\n\n\t\tif( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function( timeScale ) {\n\n\t\tif( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = THREE.AnimationUtils.\n\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function() {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( \"invalid value size in track\", this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif( nKeys === 0 ) {\n\n\t\t\tconsole.error( \"track is empty\", this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( THREE.AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function() {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\twriteIndex = 1;\n\n\t\tfor( var i = 1, n = times.length - 1; i <= n; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\t\t\tvar offset = i * stride,\n\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = THREE.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n};\n\n// Static methods:\n\nObject.assign( THREE.KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function( json ) {\n\n\t\tif( json.type === undefined ) {\n\n\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t}\n\n\t\tvar trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tTHREE.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we asssume a constructor compatible with the base\n\t\t\treturn new trackType(\n\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': THREE.AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': THREE.AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\tcase \"scalar\":\n\t\t\tcase \"double\":\n\t\t\tcase \"float\":\n\t\t\tcase \"number\":\n\t\t\tcase \"integer\":\n\n\t\t\t\treturn THREE.NumberKeyframeTrack;\n\n\t\t\tcase \"vector\":\n\t\t\tcase \"vector2\":\n\t\t\tcase \"vector3\":\n\t\t\tcase \"vector4\":\n\n\t\t\t\treturn THREE.VectorKeyframeTrack;\n\n\t\t\tcase \"color\":\n\n\t\t\t\treturn THREE.ColorKeyframeTrack;\n\n\t\t\tcase \"quaternion\":\n\n\t\t\t\treturn THREE.QuaternionKeyframeTrack;\n\n\t\t\tcase \"bool\":\n\t\t\tcase \"boolean\":\n\n\t\t\t\treturn THREE.BooleanKeyframeTrack;\n\n\t\t\tcase \"string\":\n\n\t\t\t\treturn THREE.StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t}\n\n} );\n\n// File:src/animation/PropertyBinding.js\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nTHREE.PropertyBinding = function ( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath ||\n\t\t\tTHREE.PropertyBinding.parseTrackName( path );\n\n\tthis.node = THREE.PropertyBinding.findNode(\n\t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n};\n\nTHREE.PropertyBinding.prototype = {\n\n\tconstructor: THREE.PropertyBinding,\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function() {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = THREE.PropertyBinding.findNode(\n\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n \t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[i].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( ! nodeProperty ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\n\t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\tif ( targetObject.geometry.morphTargets[i].name === propertyIndex ) {\n\n\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( nodeProperty.length !== undefined ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n};\n\nObject.assign( THREE.PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function() {},\n\t_setValue_unavailable: function() {},\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: THREE.PropertyBinding.prototype.getValue,\n\t_setValue_unbound: THREE.PropertyBinding.prototype.setValue,\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t]\n\n} );\n\nTHREE.PropertyBinding.Composite =\n\t\tfunction( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath ||\n\t\t\tTHREE.PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n};\n\nTHREE.PropertyBinding.Composite.prototype = {\n\n\tconstructor: THREE.PropertyBinding.Composite,\n\n\tgetValue: function( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function() {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function() {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n};\n\nTHREE.PropertyBinding.create = function( root, path, parsedPath ) {\n\n\tif ( ! ( root instanceof THREE.AnimationObjectGroup ) ) {\n\n\t\treturn new THREE.PropertyBinding( root, path, parsedPath );\n\n\t} else {\n\n\t\treturn new THREE.PropertyBinding.Composite( root, path, parsedPath );\n\n\t}\n\n};\n\nTHREE.PropertyBinding.parseTrackName = function( trackName ) {\n\n\t// matches strings in the form of:\n\t//    nodeName.property\n\t//    nodeName.property[accessor]\n\t//    nodeName.material.property[accessor]\n\t//    uuid.property[accessor]\n\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\n\t//    parentName/nodeName.property\n\t//    parentName/parentName/nodeName.property[index]\n\t//\t  .bone[Armature.DEF_cog].position\n\t// created and tested via https://regex101.com/#javascript\n\n\tvar re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\n\tvar matches = re.exec(trackName);\n\n\tif( ! matches ) {\n\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\n\t}\n\n    if (matches.index === re.lastIndex) {\n        re.lastIndex++;\n    }\n\n\tvar results = {\n\t\t// directoryName: matches[1], // (tschw) currently unused\n\t\tnodeName: matches[3], \t// allowed to be null, specified root node.\n\t\tobjectName: matches[5],\n\t\tobjectIndex: matches[7],\n\t\tpropertyName: matches[9],\n\t\tpropertyIndex: matches[11]\t// allowed to be null, specifies that the whole property is set.\n\t};\n\n\tif( results.propertyName === null || results.propertyName.length === 0 ) {\n\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\n\t}\n\n\treturn results;\n\n};\n\nTHREE.PropertyBinding.findNode = function( root, nodeName ) {\n\n\tif( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\treturn root;\n\n\t}\n\n\t// search into skeleton bones.\n\tif( root.skeleton ) {\n\n\t\tvar searchSkeleton = function( skeleton ) {\n\n\t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\tvar bone = skeleton.bones[i];\n\n\t\t\t\tif( bone.name === nodeName ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\tif( bone ) {\n\n\t\t\treturn bone;\n\n\t\t}\n\t}\n\n\t// search into node subtree.\n\tif( root.children ) {\n\n\t\tvar searchNodeSubtree = function( children ) {\n\n\t\t\tfor( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tvar childNode = children[i];\n\n\t\t\t\tif( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\treturn childNode;\n\n\t\t\t\t}\n\n\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\tif( result ) return result;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\tif( subTreeNode ) {\n\n\t\t\treturn subTreeNode;\n\n\t\t}\n\n\t}\n\n\treturn null;\n\n};\n\n// File:src/animation/PropertyMixer.js\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nTHREE.PropertyMixer = function ( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\n\t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\n\n\t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n};\n\nTHREE.PropertyMixer.prototype = {\n\n\tconstructor: THREE.PropertyMixer,\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function() {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function() {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tTHREE.Quaternion.slerpFlat( buffer, dstOffset,\n\t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n};\n\n// File:src/animation/tracks/BooleanKeyframeTrack.js\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nTHREE.BooleanKeyframeTrack = function ( name, times, values ) {\n\n\tTHREE.KeyframeTrack.call( this, name, times, values );\n\n};\n\nTHREE.BooleanKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\tconstructor: THREE.BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: THREE.InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n// File:src/animation/tracks/ColorKeyframeTrack.js\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nTHREE.ColorKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n};\n\nTHREE.ColorKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\tconstructor: THREE.ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n// File:src/animation/tracks/NumberKeyframeTrack.js\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nTHREE.NumberKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n};\n\nTHREE.NumberKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\tconstructor: THREE.NumberKeyframeTrack,\n\n\tValueTypeName: 'number',\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n// File:src/animation/tracks/QuaternionKeyframeTrack.js\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nTHREE.QuaternionKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n};\n\nTHREE.QuaternionKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\tconstructor: THREE.QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: THREE.InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\treturn new THREE.QuaternionLinearInterpolant(\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n// File:src/animation/tracks/StringKeyframeTrack.js\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nTHREE.StringKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n};\n\nTHREE.StringKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\tconstructor: THREE.StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: THREE.InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n// File:src/animation/tracks/VectorKeyframeTrack.js\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nTHREE.VectorKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n};\n\nTHREE.VectorKeyframeTrack.prototype =\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\tconstructor: THREE.VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n// File:src/audio/Audio.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nTHREE.Audio = function ( listener ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\tthis.source = this.context.createBufferSource();\n\tthis.source.onended = this.onEnded.bind( this );\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.startTime = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n};\n\nTHREE.Audio.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.source.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.source.buffer;\n\t\tsource.loop = this.source.loop;\n\t\tsource.onended = this.source.onended;\n\t\tsource.start( 0, this.startTime );\n\t\tsource.playbackRate.value = this.playbackRate;\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.startTime = this.context.currentTime;\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.startTime = 0;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.source.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.loop = value;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.value = value;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n// File:src/audio/AudioAnalyser.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.AudioAnalyser = function ( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n};\n\nObject.assign( THREE.AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n// File:src/audio/AudioContext.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nObject.defineProperty( THREE, 'AudioContext', {\n\n\tget: ( function () {\n\n\t\tvar context;\n\n\t\treturn function () {\n\n\t\t\tif ( context === undefined ) {\n\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn context;\n\n\t\t};\n\n\t} )()\n\n} );\n\n// File:src/audio/PositionalAudio.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.PositionalAudio = function ( listener ) {\n\n\tTHREE.Audio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n};\n\nTHREE.PositionalAudio.prototype = Object.assign( Object.create( THREE.Audio.prototype ), {\n\n\tconstructor: THREE.PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new THREE.Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n// File:src/audio/AudioListener.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.AudioListener = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = THREE.AudioContext;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n};\n\nTHREE.AudioListener.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.value = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new THREE.Vector3();\n\t\tvar quaternion = new THREE.Quaternion();\n\t\tvar scale = new THREE.Vector3();\n\n\t\tvar orientation = new THREE.Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t};\n\n\t} )()\n\n} );\n\n// File:src/cameras/Camera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.Camera = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new THREE.Matrix4();\n\tthis.projectionMatrix = new THREE.Matrix4();\n\n};\n\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.Camera.prototype.constructor = THREE.Camera;\n\nTHREE.Camera.prototype.getWorldDirection = function () {\n\n\tvar quaternion = new THREE.Quaternion();\n\n\treturn function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\tthis.getWorldQuaternion( quaternion );\n\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t};\n\n}();\n\nTHREE.Camera.prototype.lookAt = function () {\n\n\t// This routine does not support cameras with rotated and/or translated parent(s)\n\n\tvar m1 = new THREE.Matrix4();\n\n\treturn function ( vector ) {\n\n\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t};\n\n}();\n\nTHREE.Camera.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\nTHREE.Camera.prototype.copy = function ( source ) {\n\n\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\treturn this;\n\n};\n\n// File:src/cameras/CubeCamera.js\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter };\n\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\n\tthis.updateCubeMap = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n};\n\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\n\n// File:src/cameras/OrthographicCamera.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\n\n\tTHREE.Camera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n};\n\nTHREE.OrthographicCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\n\n\tconstructor: THREE.OrthographicCamera,\n\n\tcopy: function ( source ) {\n\n\t\tTHREE.Camera.prototype.copy.call( this, source );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\n\t\treturn this;\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n// File:src/cameras/PerspectiveCamera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nTHREE.PerspectiveCamera = function( fov, aspect, near, far ) {\n\n\tTHREE.Camera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n};\n\nTHREE.PerspectiveCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\n\n\tconstructor: THREE.PerspectiveCamera,\n\n\tcopy: function ( source ) {\n\n\t\tTHREE.Camera.prototype.copy.call( this, source );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = THREE.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( THREE.Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn THREE.Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\tMath.tan( THREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tthis.view = {\n\t\t\tfullWidth: fullWidth,\n\t\t\tfullHeight: fullHeight,\n\t\t\toffsetX: x,\n\t\t\toffsetY: y,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function() {\n\n\t\tthis.view = null;\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t\tTHREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( view !== null ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makeFrustum(\n\t\t\t\tleft, left + width, top - height, top, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n// File:src/cameras/StereoCamera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.StereoCamera = function () {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.cameraL = new THREE.PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new THREE.PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n};\n\nObject.assign( THREE.StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar focus, fov, aspect, near, far;\n\n\t\tvar eyeRight = new THREE.Matrix4();\n\t\tvar eyeLeft = new THREE.Matrix4();\n\n\t\treturn function update ( camera ) {\n\n\t\t\tvar needsUpdate = focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tvar eyeSep = 0.064 / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n// File:src/lights/Light.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Light = function ( color, intensity ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new THREE.Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n};\n\nTHREE.Light.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.Light,\n\n\tcopy: function ( source ) {\n\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n// File:src/lights/LightShadow.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.LightShadow = function ( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new THREE.Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new THREE.Matrix4();\n\n};\n\nObject.assign( THREE.LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n// File:src/lights/AmbientLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.AmbientLight = function ( color, intensity ) {\n\n\tTHREE.Light.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n};\n\nTHREE.AmbientLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\tconstructor: THREE.AmbientLight\n\n} );\n\n// File:src/lights/DirectionalLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DirectionalLight = function ( color, intensity ) {\n\n\tTHREE.Light.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.set( 0, 1, 0 );\n\tthis.updateMatrix();\n\n\tthis.target = new THREE.Object3D();\n\n\tthis.shadow = new THREE.DirectionalLightShadow();\n\n};\n\nTHREE.DirectionalLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\tconstructor: THREE.DirectionalLight,\n\n\tcopy: function ( source ) {\n\n\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n// File:src/lights/DirectionalLightShadow.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.DirectionalLightShadow = function ( light ) {\n\n\tTHREE.LightShadow.call( this, new THREE.OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n};\n\nTHREE.DirectionalLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\n\n\tconstructor: THREE.DirectionalLightShadow\n\n} );\n\n// File:src/lights/HemisphereLight.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\n\n\tTHREE.Light.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.set( 0, 1, 0 );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new THREE.Color( groundColor );\n\n};\n\nTHREE.HemisphereLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\tconstructor: THREE.HemisphereLight,\n\n\tcopy: function ( source ) {\n\n\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n// File:src/lights/PointLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\n\n\tTHREE.Light.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n};\n\nTHREE.PointLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\tconstructor: THREE.PointLight,\n\n\tcopy: function ( source ) {\n\n\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n// File:src/lights/SpotLight.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SpotLight = function ( color, intensity, distance, angle, penumbra, decay ) {\n\n\tTHREE.Light.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.set( 0, 1, 0 );\n\tthis.updateMatrix();\n\n\tthis.target = new THREE.Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\treturn this.intensity * Math.PI;\n\t\t},\n\t\tset: function ( power ) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new THREE.SpotLightShadow();\n\n};\n\nTHREE.SpotLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\tconstructor: THREE.SpotLight,\n\n\tcopy: function ( source ) {\n\n\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n// File:src/lights/SpotLightShadow.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SpotLightShadow = function () {\n\n\tTHREE.LightShadow.call( this, new THREE.PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n};\n\nTHREE.SpotLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\n\n\tconstructor: THREE.SpotLightShadow,\n\n\tupdate: function ( light ) {\n\n\t\tvar fov = THREE.Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || 500;\n\n\t\tvar camera = this.camera;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n// File:src/loaders/AudioLoader.js\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nTHREE.AudioLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.AudioLoader.prototype = {\n\n\tconstructor: THREE.AudioLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar context = THREE.AudioContext;\n\n\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n};\n\n// File:src/loaders/Cache.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n// File:src/loaders/Loader.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Loader = function () {\n\n\tthis.onLoadStart = function () {};\n\tthis.onLoadProgress = function () {};\n\tthis.onLoadComplete = function () {};\n\n};\n\nTHREE.Loader.prototype = {\n\n\tconstructor: THREE.Loader,\n\n\tcrossOrigin: undefined,\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar parts = url.split( '/' );\n\n\t\tif ( parts.length === 1 ) return './';\n\n\t\tparts.pop();\n\n\t\treturn parts.join( '/' ) + '/';\n\n\t},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar color, textureLoader, materialLoader;\n\n\t\treturn function ( m, texturePath, crossOrigin ) {\n\n\t\t\tif ( color === undefined ) color = new THREE.Color();\n\t\t\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\n\t\t\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = THREE.Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: THREE.Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = THREE[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = THREE.BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = THREE.DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = THREE.VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n};\n\nTHREE.Loader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader  = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\n// File:src/loaders/XHRLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.XHRLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.XHRLoader.prototype = {\n\n\tconstructor: THREE.XHRLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\tvar scope = this;\n\n\t\tvar cached = THREE.Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tif ( onLoad ) {\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tonLoad( cached );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar request = new XMLHttpRequest();\n\t\trequest.overrideMimeType( 'text/plain' );\n\t\trequest.open( 'GET', url, true );\n\n\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\tvar response = event.target.response;\n\n\t\t\tTHREE.Cache.add( url, response );\n\n\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\n\n\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} else {\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, false );\n\n\t\tif ( onProgress !== undefined ) {\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tonProgress( event );\n\n\t\t\t}, false );\n\n\t\t}\n\n\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}, false );\n\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\trequest.send( null );\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\n\t}\n\n};\n\n// File:src/loaders/FontLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.FontLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.FontLoader.prototype = {\n\n\tconstructor: THREE.FontLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new THREE.Font( json );\n\n\t}\n\n};\n\n// File:src/loaders/ImageLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.ImageLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.ImageLoader.prototype = {\n\n\tconstructor: THREE.ImageLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\tvar scope = this;\n\n\t\tvar cached = THREE.Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tif ( onLoad ) {\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tonLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElement( 'img' );\n\n\t\timage.addEventListener( 'load', function ( event ) {\n\n\t\t\tTHREE.Cache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}, false );\n\n\t\tif ( onProgress !== undefined ) {\n\n\t\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tonProgress( event );\n\n\t\t\t}, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}, false );\n\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\n\t}\n\n};\n\n// File:src/loaders/JSONLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.JSONLoader = function ( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n};\n\nTHREE.JSONLoader.prototype = {\n\n\tconstructor: THREE.JSONLoader,\n\n\t// Deprecated\n\n\tget statusDomElement () {\n\n\t\tif ( this._statusDomElement === undefined ) {\n\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\n\n\t\t}\n\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\n\t\treturn this._statusDomElement;\n\n\t},\n\n\tload: function( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\n\n\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tparse: function ( json, texturePath ) {\n\n\t\tvar geometry = new THREE.Geometry(),\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\n\n\t\tparseModel( scale );\n\n\t\tparseSkin();\n\t\tparseMorphing( scale );\n\t\tparseAnimations();\n\n\t\tgeometry.computeFaceNormals();\n\t\tgeometry.computeBoundingSphere();\n\n\t\tfunction parseModel( scale ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\toffset, zLength,\n\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\ttype,\n\t\t\tisQuad,\n\t\t\thasMaterial,\n\t\t\thasFaceVertexUv,\n\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\tuvLayer, uv, u, v,\n\n\t\t\tfaces = json.faces,\n\t\t\tvertices = json.vertices,\n\t\t\tnormals = json.normals,\n\t\t\tcolors = json.colors,\n\n\t\t\tnUvLayers = 0;\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new THREE.Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\n\t\t\t\tisQuad              = isBitSet( type, 0 );\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new THREE.Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new THREE.Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new THREE.Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin() {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( scale ) {\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations() {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\treturn { geometry: geometry };\n\n\t\t} else {\n\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t}\n\n\t}\n\n};\n\n// File:src/loaders/LoadingManager.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n};\n\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\n\n// File:src/loaders/BufferGeometryLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferGeometryLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.BufferGeometryLoader.prototype = {\n\n\tconstructor: THREE.BufferGeometryLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tvar TYPED_ARRAYS = {\n\t\t\t'Int8Array': Int8Array,\n\t\t\t'Uint8Array': Uint8Array,\n\t\t\t'Uint8ClampedArray': Uint8ClampedArray,\n\t\t\t'Int16Array': Int16Array,\n\t\t\t'Uint16Array': Uint16Array,\n\t\t\t'Int32Array': Int32Array,\n\t\t\t'Uint32Array': Uint32Array,\n\t\t\t'Float32Array': Float32Array,\n\t\t\t'Float64Array': Float64Array\n\t\t};\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new THREE.Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n};\n\n// File:src/loaders/MaterialLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.MaterialLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\tthis.textures = {};\n\n};\n\nTHREE.MaterialLoader.prototype = {\n\n\tconstructor: THREE.MaterialLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tgetTexture: function ( name ) {\n\n\t\tvar textures = this.textures;\n\n\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t}\n\n\t\treturn textures[ name ];\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar material = new THREE[ json.type ];\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\n\t\t// for PointsMaterial\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new THREE.Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = this.getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = this.getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = this.getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) {\n\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\n\n\t\t}\n\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t// MultiMaterial\n\n\t\tif ( json.materials !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\n\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n};\n\n// File:src/loaders/ObjectLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.ObjectLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\tthis.texturePath = '';\n\n};\n\nTHREE.ObjectLoader.prototype = {\n\n\tconstructor: THREE.ObjectLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures  = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseGeometries: function ( json ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE [ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new THREE.MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar material = loader.parse( json[ i ] );\n\t\t\t\tmaterials[ material.uuid ] = material;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = THREE.AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\n\n\t\t\tvar loader = new THREE.ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value ) {\n\n\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn THREE[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function () {\n\n\t\tvar matrix = new THREE.Matrix4();\n\n\t\treturn function ( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new THREE.Scene();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\tobject = new THREE.SkinnedMesh( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new THREE.LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new THREE.Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new THREE.Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t}\n\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tfor ( var child in data.children ) {\n\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t};\n\n\t}()\n\n};\n\n// File:src/loaders/TextureLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.TextureLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.TextureLoader.prototype = {\n\n\tconstructor: THREE.TextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new THREE.Texture();\n\n\t\tvar loader = new THREE.ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\n\t}\n\n};\n\n// File:src/loaders/CubeTextureLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CubeTextureLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.CubeTextureLoader.prototype = {\n\n\tconstructor: THREE.CubeTextureLoader,\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new THREE.CubeTexture();\n\n\t\tvar loader = new THREE.ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\n\t}\n\n};\n\n// File:src/loaders/BinaryTextureLoader.js\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n};\n\nTHREE.BinaryTextureLoader.prototype = {\n\n\tconstructor: THREE.BinaryTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new THREE.DataTexture();\n\n\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n};\n\n// File:src/loaders/CompressedTextureLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nTHREE.CompressedTextureLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n};\n\n\nTHREE.CompressedTextureLoader.prototype = {\n\n\tconstructor: THREE.CompressedTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new THREE.CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\n\t}\n\n};\n\n// File:src/materials/Material.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Material = function () {\n\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = THREE.NormalBlending;\n\tthis.side = THREE.FrontSide;\n\tthis.shading = THREE.SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\tthis.vertexColors = THREE.NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = THREE.SrcAlphaFactor;\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\n\tthis.blendEquation = THREE.AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = THREE.LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipShadows = false;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis._needsUpdate = true;\n\n};\n\nTHREE.Material.prototype = {\n\n\tconstructor: THREE.Material,\n\n\tget needsUpdate() {\n\n\t\treturn this._needsUpdate;\n\n\t},\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.update();\n\t\tthis._needsUpdate = value;\n\n\t},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue instanceof THREE.Color ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = meta === undefined;\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.4,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== 0.5 ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== 0.5 ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\t\tif ( this.roughnessMap instanceof THREE.Texture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap instanceof THREE.Texture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap instanceof THREE.Texture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap instanceof THREE.Texture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== THREE.NormalBlending ) data.blending = this.blending;\n\t\tif ( this.shading !== THREE.SmoothShading ) data.shading = this.shading;\n\t\tif ( this.side !== THREE.FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache ( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.alphaTest = source.alphaTest;\n\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\treturn this;\n\n\t},\n\n\tupdate: function () {\n\n\t\tthis.dispatchEvent( { type: 'update' } );\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n};\n\nObject.assign( THREE.Material.prototype, THREE.EventDispatcher.prototype );\n\nTHREE.MaterialIdCount = 0;\n\n// File:src/materials/LineBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nTHREE.LineBasicMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\n\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n// File:src/materials/LineDashedMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nTHREE.LineDashedMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\n\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n// File:src/materials/MeshBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nTHREE.MeshBasicMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = THREE.MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\n\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n// File:src/materials/MeshDepthMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nTHREE.MeshDepthMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = THREE.BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\n\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n// File:src/materials/MeshLambertMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nTHREE.MeshLambertMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new THREE.Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = THREE.MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\n\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n// File:src/materials/MeshNormalMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nTHREE.MeshNormalMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this, parameters );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\n\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n// File:src/materials/MeshPhongMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nTHREE.MeshPhongMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\tthis.specular = new THREE.Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new THREE.Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = THREE.MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\n\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n// File:src/materials/MeshStandardMaterial.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nTHREE.MeshStandardMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new THREE.Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshStandardMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\n\nTHREE.MeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n// File:src/materials/MeshPhysicalMaterial.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nTHREE.MeshPhysicalMaterial = function ( parameters ) {\n\n\tTHREE.MeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshPhysicalMaterial.prototype = Object.create( THREE.MeshStandardMaterial.prototype );\nTHREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial;\n\nTHREE.MeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.MeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\treturn this;\n\n};\n\n// File:src/materials/MultiMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.MultiMaterial = function ( materials ) {\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.type = 'MultiMaterial';\n\n\tthis.materials = materials instanceof Array ? materials : [];\n\n\tthis.visible = true;\n\n};\n\nTHREE.MultiMaterial.prototype = {\n\n\tconstructor: THREE.MultiMaterial,\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.2,\n\t\t\t\ttype: 'material',\n\t\t\t\tgenerator: 'MaterialExporter'\n\t\t\t},\n\t\t\tuuid: this.uuid,\n\t\t\ttype: this.type,\n\t\t\tmaterials: []\n\t\t};\n\n\t\tvar materials = this.materials;\n\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\tvar material = materials[ i ].toJSON( meta );\n\t\t\tdelete material.metadata;\n\n\t\t\toutput.materials.push( material );\n\n\t\t}\n\n\t\toutput.visible = this.visible;\n\n\t\treturn output;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar material = new this.constructor();\n\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\n\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\n\n\t\t}\n\n\t\tmaterial.visible = this.visible;\n\n\t\treturn material;\n\n\t}\n\n};\n\n// File:src/materials/PointsMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nTHREE.PointsMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\n\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n// File:src/materials/ShaderMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { type: \"1f\", value: 1.0 }, \"parameter2\": { type: \"1i\" value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nTHREE.ShaderMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n};\n\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\n\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = source.defines;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n// File:src/materials/RawShaderMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.RawShaderMaterial = function ( parameters ) {\n\n\tTHREE.ShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n};\n\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\n\n// File:src/materials/SpriteMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nTHREE.SpriteMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\n\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.Material.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n// File:src/materials/ShadowMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.ShadowMaterial = function () {\n\n\tTHREE.ShaderMaterial.call( this, {\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\t\tvertexShader: THREE.ShaderChunk[ 'shadow_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'shadow_frag' ]\n\t} );\n\n\tthis.lights = true;\n\tthis.transparent = true;\n\n\tObject.defineProperties( this, {\n\t\topacity: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn this.uniforms.opacity.value;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tthis.uniforms.opacity.value = value;\n\t\t\t}\n\t\t}\n\t} );\n\n};\n\nTHREE.ShadowMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\nTHREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial;\n\n// File:src/textures/Texture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\tthis.sourceFile = '';\n\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\n\n\tthis.offset = new THREE.Vector2( 0, 0 );\n\tthis.repeat = new THREE.Vector2( 1, 1 );\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding :  THREE.LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n};\n\nTHREE.Texture.DEFAULT_IMAGE = undefined;\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\n\nTHREE.Texture.prototype = {\n\n\tconstructor: THREE.Texture,\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image.toDataURL !== undefined ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElement( 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.4,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tmeta.textures[ this.uuid ] = output;\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\n\n\t\tuv.multiply( this.repeat );\n\t\tuv.add( this.offset );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase THREE.RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase THREE.RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n};\n\nObject.assign( THREE.Texture.prototype, THREE.EventDispatcher.prototype );\n\nTHREE.TextureIdCount = 0;\n\n// File:src/textures/DepthTexture.js\n\n/**\n * @author Matt DesLauriers / @mattdesl\n */\n\nTHREE.DepthTexture = function ( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\n\n  THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, THREE.DepthFormat, type, anisotropy );\n\n  this.image = { width: width, height: height };\n\n  this.type = type !== undefined ? type : THREE.UnsignedShortType;\n\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n\n  this.flipY = false;\n  this.generateMipmaps  = false;\n\n};\n\nTHREE.DepthTexture.prototype = Object.create( THREE.Texture.prototype );\nTHREE.DepthTexture.prototype.constructor = THREE.DepthTexture;\n\n// File:src/textures/CanvasTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n};\n\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\n\n// File:src/textures/CubeTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\n\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n};\n\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\n\nObject.defineProperty( THREE.CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n// File:src/textures/CompressedTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n};\n\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\n\n// File:src/textures/DataTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps  = false;\n\n};\n\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\n\n// File:src/textures/VideoTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n\tvar scope = this;\n\n\tfunction update() {\n\n\t\trequestAnimationFrame( update );\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tscope.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tupdate();\n\n};\n\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\n\n// File:src/objects/Group.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Group = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Group';\n\n};\n\nTHREE.Group.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.Group\n\n} );\n\n// File:src/objects/Points.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Points = function ( geometry, material ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nTHREE.Points.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.Points,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new THREE.Matrix4();\n\t\tvar ray = new THREE.Ray();\n\t\tvar sphere = new THREE.Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new THREE.Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n// File:src/objects/Line.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Line = function ( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new THREE.LineSegments( geometry, material );\n\n\t}\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nTHREE.Line.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.Line,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new THREE.Matrix4();\n\t\tvar ray = new THREE.Ray();\n\t\tvar sphere = new THREE.Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new THREE.Vector3();\n\t\t\tvar vEnd = new THREE.Vector3();\n\t\t\tvar interSegment = new THREE.Vector3();\n\t\t\tvar interRay = new THREE.Vector3();\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n// File:src/objects/LineSegments.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.LineSegments = function ( geometry, material ) {\n\n\tTHREE.Line.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n};\n\nTHREE.LineSegments.prototype = Object.assign( Object.create( THREE.Line.prototype ), {\n\n\tconstructor: THREE.LineSegments\n\n} );\n\n// File:src/objects/Mesh.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nTHREE.Mesh = function ( geometry, material ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = THREE.TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n};\n\nTHREE.Mesh.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.Mesh,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\n\n\t\t\tthis.morphTargetBase = - 1;\n\t\t\tthis.morphTargetInfluences = [];\n\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tgetMorphTargetIndexByName: function ( name ) {\n\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\n\n\t\t\treturn this.morphTargetDictionary[ name ];\n\n\t\t}\n\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\n\n\t\treturn 0;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new THREE.Matrix4();\n\t\tvar ray = new THREE.Ray();\n\t\tvar sphere = new THREE.Sphere();\n\n\t\tvar vA = new THREE.Vector3();\n\t\tvar vB = new THREE.Vector3();\n\t\tvar vC = new THREE.Vector3();\n\n\t\tvar tempA = new THREE.Vector3();\n\t\tvar tempB = new THREE.Vector3();\n\t\tvar tempC = new THREE.Vector3();\n\n\t\tvar uvA = new THREE.Vector2();\n\t\tvar uvB = new THREE.Vector2();\n\t\tvar uvC = new THREE.Vector2();\n\n\t\tvar barycoord = new THREE.Vector3();\n\n\t\tvar intersectionPoint = new THREE.Vector3();\n\t\tvar intersectionPointWorld = new THREE.Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\t\t\tvar material = object.material;\n\n\t\t\tif ( material.side === THREE.BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\n\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar uvs, intersection;\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\tuvs = attributes.uv.array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = indices[ i ];\n\t\t\t\t\t\tb = indices[ i + 1 ];\n\t\t\t\t\t\tc = indices[ i + 2 ];\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\n\n\t\t\t\t\t\ta = i / 3;\n\t\t\t\t\t\tb = a + 1;\n\t\t\t\t\t\tc = a + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n// File:src/objects/Bone.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nTHREE.Bone = function ( skin ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Bone';\n\n\tthis.skin = skin;\n\n};\n\nTHREE.Bone.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.Bone,\n\n\tcopy: function ( source ) {\n\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\tthis.skin = source.skin;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n// File:src/objects/Skeleton.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\n\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n\n\tthis.identityMatrix = new THREE.Matrix4();\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\n\t// create a bone texture or an array of floats\n\n\tif ( this.useVertexTexture ) {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\tsize = Math.max( size, 4 );\n\n\t\tthis.boneTextureWidth = size;\n\t\tthis.boneTextureHeight = size;\n\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\n\n\t} else {\n\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\n\n\t}\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n\nObject.assign( THREE.Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\tvar inverse = new THREE.Matrix4();\n\n\t\t\tif ( this.bones[ b ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\tbone = this.bones[ b ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\tbone = this.bones[ b ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new THREE.Matrix4();\n\n\t\treturn function update() {\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\n\t\t\t\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\n\n\t\t\t}\n\n\t\t\tif ( this.useVertexTexture ) {\n\n\t\t\t\tthis.boneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\n\n\t}\n\n} );\n\n// File:src/objects/SkinnedMesh.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = \"attached\";\n\tthis.bindMatrix = new THREE.Matrix4();\n\tthis.bindMatrixInverse = new THREE.Matrix4();\n\n\t// init bones\n\n\t// TODO: remove bone creation as there is no reason (other than\n\t// convenience) for THREE.SkinnedMesh to do this.\n\n\tvar bones = [];\n\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\tvar bone, gbone;\n\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\tbone = new THREE.Bone( this );\n\t\t\tbones.push( bone );\n\n\t\t\tbone.name = gbone.name;\n\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t}\n\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\n\t\t\t\t\tbones[ gbone.parent ] !== undefined ) {\n\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\n\n\t\t\t} else {\n\n\t\t\t\tthis.add( bones[ b ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.normalizeSkinWeights();\n\n\tthis.updateMatrixWorld( true );\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\n\n};\n\n\nTHREE.SkinnedMesh.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\n\n\tconstructor: THREE.SkinnedMesh,\n\n\tbind: function( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\n\n\t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tvar vec = new THREE.Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function( force ) {\n\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\n\n\t\tif ( this.bindMode === \"attached\" ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === \"detached\" ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function() {\n\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\n\n\t}\n\n} );\n\n// File:src/objects/LOD.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.LOD = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n};\n\n\nTHREE.LOD.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.LOD,\n\n\tcopy: function ( source ) {\n\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new THREE.Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n// File:src/objects/Sprite.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Sprite = function ( material ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\n\n};\n\nTHREE.Sprite.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.Sprite,\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new THREE.Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\n\n\t\t\tif ( distanceSq > guessSizeSq ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\n\t\t\t\tpoint: this.position,\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t}\n\n} );\n\n// File:src/objects/LensFlare.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.lensFlares = [];\n\n\tthis.positionScreen = new THREE.Vector3();\n\tthis.customUpdateCallback = undefined;\n\n\tif ( texture !== undefined ) {\n\n\t\tthis.add( texture, size, distance, blending, color );\n\n\t}\n\n};\n\nTHREE.LensFlare.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\tconstructor: THREE.LensFlare,\n\n\tcopy: function ( source ) {\n\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\tthis.positionScreen.copy( source.positionScreen );\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\tif ( size === undefined ) size = - 1;\n\t\tif ( distance === undefined ) distance = 0;\n\t\tif ( opacity === undefined ) opacity = 1;\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\n\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\tthis.lensFlares.push( {\n\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\tscale: 1, \t\t// scale\n\t\t\trotation: 0, \t\t// rotation\n\t\t\topacity: opacity,\t// opacity\n\t\t\tcolor: color,\t\t// color\n\t\t\tblending: blending\t// blending\n\t\t} );\n\n\t},\n\n\t/*\n\t * Update lens flares update positions on all flares based on the screen position\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t */\n\n\tupdateLensFlares: function () {\n\n\t\tvar f, fl = this.lensFlares.length;\n\t\tvar flare;\n\t\tvar vecX = - this.positionScreen.x * 2;\n\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t}\n\n\t}\n\n} );\n\n// File:src/scenes/Scene.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Scene = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n};\n\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.Scene.prototype.constructor = THREE.Scene;\n\nTHREE.Scene.prototype.copy = function ( source, recursive ) {\n\n\tTHREE.Object3D.prototype.copy.call( this, source, recursive );\n\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\tthis.autoUpdate = source.autoUpdate;\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\treturn this;\n\n};\n\n// File:src/scenes/Fog.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Fog = function ( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new THREE.Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n};\n\nTHREE.Fog.prototype.clone = function () {\n\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\n\n};\n\n// File:src/scenes/FogExp2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.FogExp2 = function ( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new THREE.Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n};\n\nTHREE.FogExp2.prototype.clone = function () {\n\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\n\n};\n\n// File:src/renderers/shaders/ShaderChunk.js\n\nTHREE.ShaderChunk = {};\n\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\nTHREE.ShaderChunk[ 'alphamap_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'alphamap_pars_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\nTHREE.ShaderChunk[ 'alphatest_fragment' ] = \"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\n\nTHREE.ShaderChunk[ 'aomap_fragment' ] = \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'aomap_pars_fragment' ] = \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\n\nTHREE.ShaderChunk[ 'begin_vertex' ] = \"\\nvec3 transformed = vec3( position );\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\n\nTHREE.ShaderChunk[ 'beginnormal_vertex' ] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\n\nTHREE.ShaderChunk[ 'bsdfs' ] = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\t\t}\\n\t\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment' ] = \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl\n\nTHREE.ShaderChunk[ 'clipping_planes_fragment' ] = \"#if NUM_CLIPPING_PLANES > 0\\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\t\tvec4 plane = clippingPlanes[ i ];\\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\t}\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'clipping_planes_pars_fragment' ] = \"#if NUM_CLIPPING_PLANES > 0\\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\t\tvarying vec3 vViewPosition;\\n\t#endif\\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'clipping_planes_pars_vertex' ] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl\n\nTHREE.ShaderChunk[ 'clipping_planes_vertex' ] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\nTHREE.ShaderChunk[ 'color_fragment' ] = \"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'color_pars_fragment' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'color_pars_vertex' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\nTHREE.ShaderChunk[ 'color_vertex' ] = \"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/common.glsl\n\nTHREE.ShaderChunk[ 'common' ] = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\n\nTHREE.ShaderChunk[ 'cube_uv_reflection_fragment' ] = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\tvec3 absDirection = abs(direction);\\n\tint face = -1;\\n\tif( absDirection.x > absDirection.z ) {\\n\t\tif(absDirection.x > absDirection.y )\\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\telse {\\n\t\tif(absDirection.z > absDirection.y )\\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\tfloat dxRoughness = dFdx(roughness);\\n\tfloat dyRoughness = dFdy(roughness);\\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\tfloat mipLevel = 0.5 * log2(d);\\n\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\tbool bRes = mipLevel == 0.0;\\n\tscale =  bRes && (scale < a) ? a : scale;\\n\tvec3 r;\\n\tvec2 offset;\\n\tint face = getFaceFromDirection(direction);\\n\tfloat rcpPowScale = 1.0 / powScale;\\n\tif( face == 0) {\\n\t\tr = vec3(direction.x, -direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 1) {\\n\t\tr = vec3(direction.y, direction.x, direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 2) {\\n\t\tr = vec3(direction.z, direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 3) {\\n\t\tr = vec3(direction.x, direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse if( face == 4) {\\n\t\tr = vec3(direction.y, direction.x, -direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse {\\n\t\tr = vec3(direction.z, -direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\tr = normalize(r);\\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\tvec2 base = offset + vec2( texelOffset );\\n\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\tfloat r1 = floor(roughnessVal);\\n\tfloat r2 = r1 + 1.0;\\n\tfloat t = fract(roughnessVal);\\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\tfloat s = mipInfo.y;\\n\tfloat level0 = mipInfo.x;\\n\tfloat level1 = level0 + 1.0;\\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\tvec4 result = mix(color10, color20, t);\\n\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\nTHREE.ShaderChunk[ 'defaultnormal_vertex' ] = \"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\n\nTHREE.ShaderChunk[ 'displacementmap_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\n\nTHREE.ShaderChunk[ 'emissivemap_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'encodings_pars_fragment' ] = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\n\nTHREE.ShaderChunk[ 'encodings_fragment' ] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'envmap_fragment' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor = envMapTexelToLinear( envColor );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'envmap_pars_fragment' ] = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\t\tvarying vec3 vWorldPosition;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'envmap_pars_vertex' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvarying vec3 vWorldPosition;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t\tuniform float refractionRatio;\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\nTHREE.ShaderChunk[ 'envmap_vertex' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvWorldPosition = worldPosition.xyz;\\n\t#else\\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\nTHREE.ShaderChunk[ 'fog_fragment' ] = \"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'fog_pars_fragment' ] = \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'lightmap_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'lightmap_pars_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\n\nTHREE.ShaderChunk[ 'lights_lambert_vertex' ] = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\n\nTHREE.ShaderChunk[ 'lights_pars' ] = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\tdirectLight.visible = true;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\t\t\tdirectLight.color = pointLight.color;\\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tirradiance *= PI;\\n\t\t#endif\\n\t\treturn irradiance;\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\t\t#else\\n\t\t\tvec4 envMapColor = vec4( 0.0 );\\n\t\t#endif\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#endif\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\n\nTHREE.ShaderChunk[ 'lights_phong_fragment' ] = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment' ] = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl\n\nTHREE.ShaderChunk[ 'lights_physical_fragment' ] = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\tmaterial.specularColor = mix( vec3( 0.16 * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'lights_physical_pars_fragment' ] = \"struct PhysicalMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n\t#ifndef STANDARD\\n\t#endif\\n};\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_template.glsl\n\nTHREE.ShaderChunk[ 'lights_template' ] = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_fragment' ] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_particle_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_particle_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'metalnessmap_fragment' ] = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'metalnessmap_pars_fragment' ] = \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\nTHREE.ShaderChunk[ 'morphnormal_vertex' ] = \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\nTHREE.ShaderChunk[ 'morphtarget_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\n\nTHREE.ShaderChunk[ 'normal_fragment' ] = \"#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal );\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'normalmap_pars_fragment' ] = \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/packing.glsl\n\nTHREE.ShaderChunk[ 'packing' ] = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthoDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat OrthoDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\n\nTHREE.ShaderChunk[ 'premultiplied_alpha_fragment' ] = \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\n\nTHREE.ShaderChunk[ 'project_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'roughnessmap_fragment' ] = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'roughnessmap_pars_fragment' ] = \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'shadowmask_pars_fragment' ] = \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinbase_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinning_pars_vertex' ] = \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinning_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinnormal_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'specularmap_fragment' ] = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'specularmap_pars_fragment' ] = \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\n\nTHREE.ShaderChunk[ 'tonemapping_fragment' ] = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'tonemapping_pars_fragment' ] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'uv2_pars_fragment' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'uv2_pars_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\n\nTHREE.ShaderChunk[ 'uv2_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'uv_pars_fragment' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'uv_pars_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\n\nTHREE.ShaderChunk[ 'uv_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\nTHREE.ShaderChunk[ 'worldpos_vertex' ] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\";\n\n// File:src/renderers/shaders/UniformsUtils.js\n\n/**\n * Uniform Utilities\n */\n\nTHREE.UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n// File:src/renderers/shaders/UniformsLib.js\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nTHREE.UniformsLib = {\n\n\tcommon: {\n\n\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\n\t\t\"opacity\": { type: \"1f\", value: 1.0 },\n\n\t\t\"map\": { type: \"t\", value: null },\n\t\t\"offsetRepeat\": { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\n\n\t\t\"specularMap\": { type: \"t\", value: null },\n\t\t\"alphaMap\": { type: \"t\", value: null },\n\n\t\t\"envMap\": { type: \"t\", value: null },\n\t\t\"flipEnvMap\": { type: \"1f\", value: - 1 },\n\t\t\"reflectivity\": { type: \"1f\", value: 1.0 },\n\t\t\"refractionRatio\": { type: \"1f\", value: 0.98 }\n\n\t},\n\n\taomap: {\n\n\t\t\"aoMap\": { type: \"t\", value: null },\n\t\t\"aoMapIntensity\": { type: \"1f\", value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\t\"lightMap\": { type: \"t\", value: null },\n\t\t\"lightMapIntensity\": { type: \"1f\", value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\t\"emissiveMap\": { type: \"t\", value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\t\"bumpMap\": { type: \"t\", value: null },\n\t\t\"bumpScale\": { type: \"1f\", value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\t\"normalMap\": { type: \"t\", value: null },\n\t\t\"normalScale\": { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\t\"displacementMap\": { type: \"t\", value: null },\n\t\t\"displacementScale\": { type: \"1f\", value: 1 },\n\t\t\"displacementBias\": { type: \"1f\", value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\t\"roughnessMap\": { type: \"t\", value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\t\"metalnessMap\": { type: \"t\", value: null }\n\n\t},\n\n\tfog: {\n\n\t\t\"fogDensity\": { type: \"1f\", value: 0.00025 },\n\t\t\"fogNear\": { type: \"1f\", value: 1 },\n\t\t\"fogFar\": { type: \"1f\", value: 2000 },\n\t\t\"fogColor\": { type: \"c\", value: new THREE.Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\t\"ambientLightColor\": { type: \"3fv\", value: [] },\n\n\t\t\"directionalLights\": { type: \"sa\", value: [], properties: {\n\t\t\t\"direction\": { type: \"v3\" },\n\t\t\t\"color\": { type: \"c\" },\n\n\t\t\t\"shadow\": { type: \"1i\" },\n\t\t\t\"shadowBias\": { type: \"1f\" },\n\t\t\t\"shadowRadius\": { type: \"1f\" },\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\n\t\t} },\n\n\t\t\"directionalShadowMap\": { type: \"tv\", value: [] },\n\t\t\"directionalShadowMatrix\": { type: \"m4v\", value: [] },\n\n\t\t\"spotLights\": { type: \"sa\", value: [], properties: {\n\t\t\t\"color\": { type: \"c\" },\n\t\t\t\"position\": { type: \"v3\" },\n\t\t\t\"direction\": { type: \"v3\" },\n\t\t\t\"distance\": { type: \"1f\" },\n\t\t\t\"coneCos\": { type: \"1f\" },\n\t\t\t\"penumbraCos\": { type: \"1f\" },\n\t\t\t\"decay\": { type: \"1f\" },\n\n\t\t\t\"shadow\": { type: \"1i\" },\n\t\t\t\"shadowBias\": { type: \"1f\" },\n\t\t\t\"shadowRadius\": { type: \"1f\" },\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\n\t\t} },\n\n\t\t\"spotShadowMap\": { type: \"tv\", value: [] },\n\t\t\"spotShadowMatrix\": { type: \"m4v\", value: [] },\n\n\t\t\"pointLights\": { type: \"sa\", value: [], properties: {\n\t\t\t\"color\": { type: \"c\" },\n\t\t\t\"position\": { type: \"v3\" },\n\t\t\t\"decay\": { type: \"1f\" },\n\t\t\t\"distance\": { type: \"1f\" },\n\n\t\t\t\"shadow\": { type: \"1i\" },\n\t\t\t\"shadowBias\": { type: \"1f\" },\n\t\t\t\"shadowRadius\": { type: \"1f\" },\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\n\t\t} },\n\n\t\t\"pointShadowMap\": { type: \"tv\", value: [] },\n\t\t\"pointShadowMatrix\": { type: \"m4v\", value: [] },\n\n\t\t\"hemisphereLights\": { type: \"sa\", value: [], properties: {\n\t\t\t\"direction\": { type: \"v3\" },\n\t\t\t\"skyColor\": { type: \"c\" },\n\t\t\t\"groundColor\": { type: \"c\" }\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\n\t\t\"opacity\": { type: \"1f\", value: 1.0 },\n\t\t\"size\": { type: \"1f\", value: 1.0 },\n\t\t\"scale\": { type: \"1f\", value: 1.0 },\n\t\t\"map\": { type: \"t\", value: null },\n\t\t\"offsetRepeat\": { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) }\n\n\t}\n\n};\n\n// File:src/renderers/shaders/ShaderLib/cube_frag.glsl\n\nTHREE.ShaderChunk[ 'cube_frag' ] = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/cube_vert.glsl\n\nTHREE.ShaderChunk[ 'cube_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/depth_frag.glsl\n\nTHREE.ShaderChunk[ 'depth_frag' ] = \"#if DEPTH_PACKING == 3200\\n\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#if DEPTH_PACKING == 3200\\n\t\tdiffuseColor.a = opacity;\\n\t#endif\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#if DEPTH_PACKING == 3200\\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\t#elif DEPTH_PACKING == 3201\\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\t#endif\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/depth_vert.glsl\n\nTHREE.ShaderChunk[ 'depth_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\n\nTHREE.ShaderChunk[ 'distanceRGBA_frag' ] = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\n\nTHREE.ShaderChunk[ 'distanceRGBA_vert' ] = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvWorldPosition = worldPosition;\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\n\nTHREE.ShaderChunk[ 'equirect_frag' ] = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 direction = normalize( vWorldPosition );\\n\tvec2 sampleUV;\\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\n\nTHREE.ShaderChunk[ 'equirect_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\n\nTHREE.ShaderChunk[ 'linedashed_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\n\nTHREE.ShaderChunk[ 'linedashed_vert' ] = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\n\nTHREE.ShaderChunk[ 'meshbasic_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight;\\n\treflectedLight.directDiffuse = vec3( 0.0 );\\n\treflectedLight.directSpecular = vec3( 0.0 );\\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\n\nTHREE.ShaderChunk[ 'meshbasic_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_ENVMAP\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <envmap_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\n\nTHREE.ShaderChunk[ 'meshlambert_frag' ] = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\n\nTHREE.ShaderChunk[ 'meshlambert_vert' ] = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\n\nTHREE.ShaderChunk[ 'meshphong_frag' ] = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\n\nTHREE.ShaderChunk[ 'meshphong_vert' ] = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/meshphysical_frag.glsl\n\nTHREE.ShaderChunk[ 'meshphysical_frag' ] = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_physical_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/meshphysical_vert.glsl\n\nTHREE.ShaderChunk[ 'meshphysical_vert' ] = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/normal_frag.glsl\n\nTHREE.ShaderChunk[ 'normal_frag' ] = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/normal_vert.glsl\n\nTHREE.ShaderChunk[ 'normal_vert' ] = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvNormal = normalize( normalMatrix * normal );\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/points_frag.glsl\n\nTHREE.ShaderChunk[ 'points_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/points_vert.glsl\n\nTHREE.ShaderChunk[ 'points_vert' ] = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/shadow_frag.glsl\n\nTHREE.ShaderChunk[ 'shadow_frag' ] = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib/shadow_vert.glsl\n\nTHREE.ShaderChunk[ 'shadow_vert' ] = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n// File:src/renderers/shaders/ShaderLib.js\n\n/**\n * Webgl Shader Library for three.js\n *\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\n\nTHREE.ShaderLib = {\n\n\t'basic': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\tTHREE.UniformsLib[ 'fog' ]\n\n\t\t] ),\n\n\t\tvertexShader: THREE.ShaderChunk[ 'meshbasic_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshbasic_frag' ]\n\n\t},\n\n\t'lambert': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\tTHREE.UniformsLib[ 'lightmap' ],\n\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\n\t\t\tTHREE.UniformsLib[ 'fog' ],\n\t\t\tTHREE.UniformsLib[ 'lights' ],\n\n\t\t\t{\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: THREE.ShaderChunk[ 'meshlambert_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshlambert_frag' ]\n\n\t},\n\n\t'phong': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\tTHREE.UniformsLib[ 'lightmap' ],\n\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\n\t\t\tTHREE.UniformsLib[ 'bumpmap' ],\n\t\t\tTHREE.UniformsLib[ 'normalmap' ],\n\t\t\tTHREE.UniformsLib[ 'displacementmap' ],\n\t\t\tTHREE.UniformsLib[ 'fog' ],\n\t\t\tTHREE.UniformsLib[ 'lights' ],\n\n\t\t\t{\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\n\t\t\t\t\"shininess\": { type: \"1f\", value: 30 }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: THREE.ShaderChunk[ 'meshphong_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshphong_frag' ]\n\n\t},\n\n\t'standard': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\tTHREE.UniformsLib[ 'lightmap' ],\n\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\n\t\t\tTHREE.UniformsLib[ 'bumpmap' ],\n\t\t\tTHREE.UniformsLib[ 'normalmap' ],\n\t\t\tTHREE.UniformsLib[ 'displacementmap' ],\n\t\t\tTHREE.UniformsLib[ 'roughnessmap' ],\n\t\t\tTHREE.UniformsLib[ 'metalnessmap' ],\n\t\t\tTHREE.UniformsLib[ 'fog' ],\n\t\t\tTHREE.UniformsLib[ 'lights' ],\n\n\t\t\t{\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\n\t\t\t\t\"roughness\": { type: \"1f\", value: 0.5 },\n\t\t\t\t\"metalness\": { type: \"1f\", value: 0 },\n\t\t\t\t\"envMapIntensity\" : { type: \"1f\", value: 1 } // temporary\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\n\n\t},\n\n\t'points': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ 'points' ],\n\t\t\tTHREE.UniformsLib[ 'fog' ]\n\n\t\t] ),\n\n\t\tvertexShader: THREE.ShaderChunk[ 'points_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'points_frag' ]\n\n\t},\n\n\t'dashed': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\tTHREE.UniformsLib[ 'fog' ],\n\n\t\t\t{\n\t\t\t\t\"scale\"    : { type: \"1f\", value: 1 },\n\t\t\t\t\"dashSize\" : { type: \"1f\", value: 1 },\n\t\t\t\t\"totalSize\": { type: \"1f\", value: 2 }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: THREE.ShaderChunk[ 'linedashed_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'linedashed_frag' ]\n\n\t},\n\n\t'depth': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\tTHREE.UniformsLib[ 'displacementmap' ]\n\n\t\t] ),\n\n\t\tvertexShader: THREE.ShaderChunk[ 'depth_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'depth_frag' ]\n\n\t},\n\n\t'normal': {\n\n\t\tuniforms: {\n\n\t\t\t\"opacity\" : { type: \"1f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: THREE.ShaderChunk[ 'normal_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'normal_frag' ]\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\t'cube': {\n\n\t\tuniforms: {\n\t\t\t\"tCube\": { type: \"t\", value: null },\n\t\t\t\"tFlip\": { type: \"1f\", value: - 1 }\n\t\t},\n\n\t\tvertexShader: THREE.ShaderChunk[ 'cube_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'cube_frag' ]\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\t'equirect': {\n\n\t\tuniforms: {\n\t\t\t\"tEquirect\": { type: \"t\", value: null },\n\t\t\t\"tFlip\": { type: \"1f\", value: - 1 }\n\t\t},\n\n\t\tvertexShader: THREE.ShaderChunk[ 'equirect_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'equirect_frag' ]\n\n\t},\n\n\t'distanceRGBA': {\n\n\t\tuniforms: {\n\n\t\t\t\"lightPos\": { type: \"v3\", value: new THREE.Vector3() }\n\n\t\t},\n\n\t\tvertexShader: THREE.ShaderChunk[ 'distanceRGBA_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'distanceRGBA_frag' ]\n\n\t}\n\n};\n\nTHREE.ShaderLib[ 'physical' ] = {\n\n\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\tTHREE.ShaderLib[ 'standard' ].uniforms,\n\n\t\t{\n\t\t\t// future\n\t\t}\n\n\t] ),\n\n\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\n\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\n\n};\n\n\n// File:src/renderers/WebGLRenderer.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nTHREE.WebGLRenderer = function ( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\n\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\tvar lights = [];\n\n\tvar opaqueObjects = [];\n\tvar opaqueObjectsLastIndex = - 1;\n\tvar transparentObjects = [];\n\tvar transparentObjectsLastIndex = - 1;\n\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tvar sprites = [];\n\tvar lensFlares = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = THREE.LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// flags\n\n\tthis.autoScaleCubemaps = true;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t// internal state cache\n\n\t_currentProgram = null,\n\t_currentRenderTarget = null,\n\t_currentFramebuffer = null,\n\t_currentMaterialId = - 1,\n\t_currentGeometryProgram = '',\n\t_currentCamera = null,\n\n\t_currentScissor = new THREE.Vector4(),\n\t_currentScissorTest = null,\n\n\t_currentViewport = new THREE.Vector4(),\n\n\t//\n\n\t_usedTextureUnits = 0,\n\n\t//\n\n\t_clearColor = new THREE.Color( 0x000000 ),\n\t_clearAlpha = 0,\n\n\t_width = _canvas.width,\n\t_height = _canvas.height,\n\n\t_pixelRatio = 1,\n\n\t_scissor = new THREE.Vector4( 0, 0, _width, _height ),\n\t_scissorTest = false,\n\n\t_viewport = new THREE.Vector4( 0, 0, _width, _height ),\n\n\t// frustum\n\n\t_frustum = new THREE.Frustum(),\n\n\t// clipping\n\n\t_clipping = new THREE.WebGLClipping(),\n\t_clippingEnabled = false,\n\t_localClippingEnabled = false,\n\n\t_sphere = new THREE.Sphere(),\n\n\t// camera matrices cache\n\n\t_projScreenMatrix = new THREE.Matrix4(),\n\n\t_vector3 = new THREE.Vector3(),\n\n\t// light arrays cache\n\n\t_lights = {\n\n\t\thash: '',\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\n\t\tshadows: []\n\n\t},\n\n\t// info\n\n\t_infoMemory = {\n\n\t\tgeometries: 0,\n\t\ttextures: 0\n\n\t},\n\n\t_infoRender = {\n\n\t\tcalls: 0,\n\t\tvertices: 0,\n\t\tfaces: 0,\n\t\tpoints: 0\n\n\t};\n\n\tthis.info = {\n\n\t\trender: _infoRender,\n\t\tmemory: _infoMemory,\n\t\tprograms: null\n\n\t};\n\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar attributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t};\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t}\n\n\tvar _isWebGL2 = (typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext);\n\tvar extensions = new THREE.WebGLExtensions( _gl );\n\n\textensions.get( 'WEBGL_depth_texture' );\n\textensions.get( 'OES_texture_float' );\n\textensions.get( 'OES_texture_float_linear' );\n\textensions.get( 'OES_texture_half_float' );\n\textensions.get( 'OES_texture_half_float_linear' );\n\textensions.get( 'OES_standard_derivatives' );\n\textensions.get( 'ANGLE_instanced_arrays' );\n\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\n\n\t}\n\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\n\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\n\tvar properties = new THREE.WebGLProperties();\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\n\tvar lightCache = new THREE.WebGLLights();\n\n\tthis.info.programs = programCache.programs;\n\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t//\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\tfunction glClearColor( r, g, b, a ) {\n\n\t\tif ( _premultipliedAlpha === true ) {\n\n\t\t\tr *= a; g *= a; b *= a;\n\n\t\t}\n\n\t\tstate.clearColor( r, g, b, a );\n\n\t}\n\n\tfunction setDefaultGLState() {\n\n\t\tstate.init();\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t}\n\n\tfunction resetGLState() {\n\n\t\t_currentProgram = null;\n\t\t_currentCamera = null;\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\n\t\tstate.reset();\n\n\t}\n\n\tsetDefaultGLState();\n\n\tthis.context = _gl;\n\tthis.capabilities = capabilities;\n\tthis.extensions = extensions;\n\tthis.properties = properties;\n\tthis.state = state;\n\n\t// shadow map\n\n\tvar shadowMap = new THREE.WebGLShadowMap( this, _lights, objects );\n\n\tthis.shadowMap = shadowMap;\n\n\n\t// Plugins\n\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\n\n\t};\n\n\tthis.getMaxAnisotropy = ( function () {\n\n\t\tvar value;\n\n\t\treturn function getMaxAnisotropy() {\n\n\t\t\tif ( value !== undefined ) return value;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tvalue = 0;\n\n\t\t\t}\n\n\t\t\treturn value;\n\n\t\t};\n\n\t} )();\n\n\tthis.getPrecision = function () {\n\n\t\treturn capabilities.precision;\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _viewport.z, _viewport.w, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tstate.viewport( _viewport.set( x, y, width, height ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tstate.scissor( _scissor.set( x, y, width, height ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn _clearColor;\n\n\t};\n\n\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t_clearColor.set( color );\n\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn _clearAlpha;\n\n\t};\n\n\tthis.setClearAlpha = function ( alpha ) {\n\n\t\t_clearAlpha = alpha;\n\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t// Reset\n\n\tthis.resetGLState = resetGLState;\n\n\tthis.dispose = function() {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tresetGLState();\n\t\tsetDefaultGLState();\n\n\t\tproperties.clear();\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\t_infoMemory.textures --;\n\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t_infoMemory.textures --;\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.delete( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.delete( renderTarget.texture );\n\t\tproperties.delete( renderTarget );\n\n\t}\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.delete( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar attributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( attributes.position );\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.type !== 'MeshPhysicalMaterial' && material.shading === THREE.FlatShading ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( attributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( attributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( attributes.color );\n\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tsetMaterial( material );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\tvar updateBuffers = false;\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphTargetInfluences !== undefined ) {\n\n\t\t\tvar activeInfluences = [];\n\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\n\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\n\n\t\t\t}\n\n\t\t\tactiveInfluences.sort( absNumericalSort );\n\n\t\t\tif ( activeInfluences.length > 8 ) {\n\n\t\t\t\tactiveInfluences.length = 8;\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\n\n\t\t\t\tvar influence = activeInfluences[ i ];\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\n\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\n\n\t\t\t\t\tvar index = influence[ 1 ];\n\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprogram.getUniforms().setValue(\n\t\t\t\t\t_gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = objects.getWireframeAttribute( geometry );\n\n\t\t}\n\n\t\tvar renderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( index );\n\n\t\t} else {\n\n\t\t\trenderer = bufferRenderer;\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataStart = 0;\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start;\n\t\tvar rangeCount = geometry.drawRange.count;\n\n\t\tvar groupStart = group !== null ? group.start : 0;\n\t\tvar groupCount = group !== null ? group.count : Infinity;\n\n\t\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t//\n\n\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase THREE.TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object instanceof THREE.LineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object instanceof THREE.Points ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\tvar extension;\n\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar type = _gl.FLOAT;\n\t\t\t\t\tvar array = geometryAttribute.array;\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\n\t\t\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\t\t\ttype = _gl.FLOAT;\n\n\t\t\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\t\t\tconsole.warn(\"Unsupported data buffer format: Float64Array\");\n\n\t\t\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\n\t\t\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\t\t\ttype = _gl.SHORT;\n\n\t\t\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\t\t\ttype = _gl.UNSIGNED_INT;\n\n\t\t\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\t\t\ttype = _gl.INT;\n\n\t\t\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\t\t\ttype = _gl.BYTE;\n\n\t\t\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\t\t\ttype = _gl.UNSIGNED_BYTE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\n\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Sorting\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\n\n\t}\n\n\tfunction painterSortStable ( a, b ) {\n\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable ( a, b ) {\n\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t} if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( camera instanceof THREE.Camera === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar fog = scene.fog;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\tlights.length = 0;\n\n\t\topaqueObjectsLastIndex = - 1;\n\t\ttransparentObjectsLastIndex = - 1;\n\n\t\tsprites.length = 0;\n\t\tlensFlares.length = 0;\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init(\n\t\t\t\tthis.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tprojectObject( scene, camera );\n\n\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\topaqueObjects.sort( painterSortStable );\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tsetupShadows( lights );\n\n\t\tshadowMap.render( scene, camera );\n\n\t\tsetupLights( lights, camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\t_infoRender.calls = 0;\n\t\t_infoRender.vertices = 0;\n\t\t_infoRender.faces = 0;\n\t\t_infoRender.points = 0;\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\tif ( this.autoClear || forceClear ) {\n\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\n\t\t\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tstate.setBlending( THREE.NoBlending );\n\t\t\trenderObjects( opaqueObjects, camera, fog );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\trenderObjects( transparentObjects, camera, fog );\n\n\t\t}\n\n\t\t// custom render plugins (post pass)\n\n\t\tspritePlugin.render( scene, camera );\n\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\n\t\t\t\t\ttexture.minFilter !== THREE.NearestFilter &&\n\t\t\t\t\ttexture.minFilter !== THREE.LinearFilter ) {\n\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.setDepthTest( true );\n\t\tstate.setDepthWrite( true );\n\t\tstate.setColorWrite( true );\n\n\t\t// _gl.finish();\n\n\t};\n\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\n\n\t\tvar array, index;\n\n\t\t// allocate the next position in the appropriate array\n\n\t\tif ( material.transparent ) {\n\n\t\t\tarray = transparentObjects;\n\t\t\tindex = ++ transparentObjectsLastIndex;\n\n\t\t} else {\n\n\t\t\tarray = opaqueObjects;\n\t\t\tindex = ++ opaqueObjectsLastIndex;\n\n\t\t}\n\n\t\t// recycle existing render item or grow the array\n\n\t\tvar renderItem = array[ index ];\n\n\t\tif ( renderItem !== undefined ) {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.z = _vector3.z;\n\t\t\trenderItem.group = group;\n\n\t\t} else {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tz: _vector3.z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\t// assert( index === array.length );\n\t\t\tarray.push( renderItem );\n\n\t\t}\n\n\t}\n\n\t// TODO Duplicated code (Frustum)\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\n\tfunction projectObject( object, camera ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t\tlights.push( object );\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\n\n\t\t\t\t\tsprites.push( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\n\n\t\t\t\tlensFlares.push( object );\n\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\n\n\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\n\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\n\t\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( object instanceof THREE.ImmediateRenderObject ) {\n\n\t\t\t\tsetMaterial( material );\n\n\t\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\t\t_currentGeometryProgram = '';\n\n\t\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t\t\t} );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\n\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar attributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.__webglShader.uniforms;\n\n\t\tif ( ! ( material instanceof THREE.ShaderMaterial ) &&\n\t\t\t\t! ( material instanceof THREE.RawShaderMaterial ) ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tif ( material.lights ) {\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.lightsHash = _lights.hash;\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\n\t\t\tuniforms.directionalLights.value = _lights.directional;\n\t\t\tuniforms.spotLights.value = _lights.spot;\n\t\t\tuniforms.pointLights.value = _lights.point;\n\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\t\tTHREE.WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\t\tmaterialProperties.dynamicUniforms =\n\t\t\t\tTHREE.WebGLUniforms.splitDynamic( uniformsList, uniforms );\n\n\t}\n\n\tfunction setMaterial( material ) {\n\n\t\tif ( material.side !== THREE.DoubleSide )\n\t\t\tstate.enable( _gl.CULL_FACE );\n\t\telse\n\t\t\tstate.disable( _gl.CULL_FACE );\n\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\n\n\t\tif ( material.transparent === true ) {\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\t} else {\n\n\t\t\tstate.setBlending( THREE.NoBlending );\n\n\t\t}\n\n\t\tstate.setDepthFunc( material.depthFunc );\n\t\tstate.setDepthTest( material.depthTest );\n\t\tstate.setDepthWrite( material.depthWrite );\n\t\tstate.setColorWrite( material.colorWrite );\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t\tif ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\tmaterialProperties.numClippingPlanes !== _clipping.numPlanes ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\tmaterial.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( materialProperties.lightsHash !== undefined &&\n\t\t\tmaterialProperties.lightsHash !== _lights.hash ) {\n\n\t\t\tmaterial.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\n\n\t\tif ( program.id !== _currentProgram ) {\n\n\t\t\t_gl.useProgram( program.program );\n\t\t\t_currentProgram = program.id;\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\n\t\t\tif ( camera !== _currentCamera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\n\t\t\t\t material.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\n\t\t\t\t material.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\n\t\t\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\n\n\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\n\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\n\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\n\t\t\t\t material instanceof THREE.MeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t}\n\n\t\t\t// refresh single material specific uniforms\n\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.MeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.MeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\n\n\t\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\t}\n\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\tTHREE.WebGLUniforms.upload(\n\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\n\t\t// common matrices\n\n\t\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\n\t\tp_uniforms.set( _gl, object, 'normalMatrix' );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\n\t\t// dynamic uniforms\n\n\t\tvar dynUniforms = materialProperties.dynamicUniforms;\n\n\t\tif ( dynUniforms !== null ) {\n\n\t\t\tTHREE.WebGLUniforms.evalDynamic(\n\t\t\t\t\tdynUniforms, m_uniforms, object, camera );\n\n\t\t\tTHREE.WebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon ( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tuniforms.diffuse.value = material.color;\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tuniforms.map.value = material.map;\n\t\tuniforms.specularMap.value = material.specularMap;\n\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tvar offset = uvScaleMap.offset;\n\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t}\n\n\t\tuniforms.envMap.value = material.envMap;\n\n\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap instanceof THREE.CubeTexture ) ) ? 1 : - 1;\n\n\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t}\n\n\tfunction refreshUniformsLine ( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash ( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints ( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _canvas.clientHeight * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tvar offset = material.map.offset;\n\t\t\tvar repeat = material.map.repeat;\n\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog ( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog instanceof THREE.Fog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert ( uniforms, material ) {\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong ( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard ( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical ( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Lighting\n\n\tfunction setupShadows ( lights ) {\n\n\t\tvar lightShadowsLength = 0;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t_lights.shadows[ lightShadowsLength ++ ] = light;\n\n\t\t\t}\n\n\t\t}\n\n\t\t_lights.shadows.length = lightShadowsLength;\n\n\t}\n\n\tfunction setupLights ( lights, camera ) {\n\n\t\tvar l, ll, light,\n\t\tr = 0, g = 0, b = 0,\n\t\tcolor,\n\t\tintensity,\n\t\tdistance,\n\t\tshadowMap,\n\n\t\tviewMatrix = camera.matrixWorldInverse,\n\n\t\tdirectionalLength = 0,\n\t\tpointLength = 0,\n\t\tspotLength = 0,\n\t\themiLength = 0;\n\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\tlight = lights[ l ];\n\n\t\t\tcolor = light.color;\n\t\t\tintensity = light.intensity;\n\t\t\tdistance = light.distance;\n\n\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\n\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\n\n\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\n\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\n\n\t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\n\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new THREE.Matrix4();\n\n\t\t\t\t}\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\n\t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\n\n\t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\n\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\n\n\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\n\n\t\t\t}\n\n\t\t}\n\n\t\t_lights.ambient[ 0 ] = r;\n\t\t_lights.ambient[ 1 ] = g;\n\t\t_lights.ambient[ 2 ] = b;\n\n\t\t_lights.directional.length = directionalLength;\n\t\t_lights.spot.length = spotLength;\n\t\t_lights.point.length = pointLength;\n\t\t_lights.hemi.length = hemiLength;\n\n\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\n\n\t}\n\n\t// GL state setting\n\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\tstate.setCullFace( cullFace );\n\t\tstate.setFlipSided( frontFaceDirection === THREE.FrontFaceDirectionCW );\n\n\t};\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction setTextureParameters ( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t_infoMemory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\tglFormat = paramThreeToGL( texture.format ),\n\t\tglType = paramThreeToGL( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture instanceof THREE.DepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === THREE.FloatType ) {\n\n\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture instanceof THREE.DataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t}\n\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction clampToMaxSize ( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElement( 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\n\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\tvar canvas = document.createElement( 'canvas' );\n\t\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\n\t\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction setTextureCube ( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\n\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic ( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t//this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function() {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function( texture, slot ) {\n\n\t\t\tif ( texture instanceof THREE.WebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function() {\n\n\t\tvar warned = false;\n\n\t\treturn function( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\t_this.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function() {\n\n\t\tvar warned = false;\n\n\t\treturn function( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture instanceof THREE.WebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( texture instanceof THREE.CubeTexture ||\n\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\tsetTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture ( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\n\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage ( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture ( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( !( renderTarget.depthTexture instanceof THREE.DepthTexture ) ) {\n\n\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t}\n\n\t\t_this.setTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t_infoMemory.textures ++;\n\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tthis.getCurrentRenderTarget = function() {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\tsetupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\t\tvar framebuffer;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\n\t\t} else {\n\n\t\t\tframebuffer = null;\n\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tstate.viewport( _currentViewport );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.type !== THREE.UnsignedByteType &&\n\t\t\t\t     paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) &&\n\t\t\t\t     ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) ) &&\n\t\t\t\t     ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\tvar texture = properties.get( renderTarget.texture ).__webglTexture;\n\n\t\tstate.bindTexture( target, texture );\n\t\t_gl.generateMipmap( target );\n\t\tstate.bindTexture( target, null );\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback ( f ) {\n\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t// Map three.js constants to WebGL constants\n\n\tfunction paramThreeToGL ( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n\t\tif ( p === THREE.IntType ) return _gl.INT;\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\n\n\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\t\tif ( p === THREE.DepthFormat ) return _gl.DEPTH_COMPONENT;\n\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t}\n\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t}\n\n\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tif ( p === THREE.RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n};\n\n// File:src/renderers/WebGLRenderTarget.js\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new THREE.Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new THREE.Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\n\n\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = null;\n\n};\n\nObject.assign( THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n// File:src/renderers/WebGLRenderTargetCube.js\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\n\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n};\n\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\n\n// File:src/renderers/webgl/WebGLBufferRenderer.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\t_gl.drawArrays( mode, start, count );\n\n\t\t_infoRender.calls ++;\n\t\t_infoRender.vertices += count;\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\n\n\t}\n\n\tfunction renderInstances( geometry ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar position = geometry.attributes.position;\n\n\t\tvar count = 0;\n\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\tcount = position.data.count;\n\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t} else {\n\n\t\t\tcount = position.count;\n\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\t_infoRender.calls ++;\n\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t}\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n};\n\n// File:src/renderers/webgl/WebGLClipping.js\n\nTHREE.WebGLClipping = function() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new THREE.Plane(),\n\t\tviewNormalMatrix = new THREE.Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\n\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function() {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function() {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function( planes, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled ||\n\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\treturn dstArray;\n\n\t}\n\n};\n\n\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, size;\n\n\tfunction setIndex( index ) {\n\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\ttype = _gl.UNSIGNED_INT;\n\t\t\tsize = 4;\n\n\t\t} else {\n\n\t\t\ttype = _gl.UNSIGNED_SHORT;\n\t\t\tsize = 2;\n\n\t\t}\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\t_gl.drawElements( mode, count, type, start * size );\n\n\t\t_infoRender.calls ++;\n\t\t_infoRender.vertices += count;\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\n\n\t\t_infoRender.calls ++;\n\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t}\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n};\n\n// File:src/renderers/webgl/WebGLExtensions.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\nTHREE.WebGLExtensions = function ( gl ) {\n\n\tvar extensions = {};\n\n\tthis.get = function ( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tvar extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t};\n\n};\n\n// File:src/renderers/webgl/WebGLCapabilities.js\n\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tthis.getMaxPrecision = getMaxPrecision;\n\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\n\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tthis.vertexTextures = this.maxVertexTextures > 0;\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n\n\tvar _maxPrecision = getMaxPrecision( this.precision );\n\n\tif ( _maxPrecision !== this.precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\n\t\tthis.precision = _maxPrecision;\n\n\t}\n\n\tif ( this.logarithmicDepthBuffer ) {\n\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\n\n\t}\n\n};\n\n// File:src/renderers/webgl/WebGLGeometries.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\n\n\tvar geometries = {};\n\n\tfunction get( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\n\n\t\t\treturn geometries[ geometry.id ];\n\n\t\t}\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tvar buffergeometry;\n\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tdeleteAttribute( buffergeometry.index );\n\n\t\t}\n\n\t\tdeleteAttributes( buffergeometry.attributes );\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO\n\n\t\tvar property = properties.get( geometry );\n\n\t\tif ( property.wireframe ) {\n\n\t\t\tdeleteAttribute( property.wireframe );\n\n\t\t}\n\n\t\tproperties.delete( geometry );\n\n\t\tvar bufferproperty = properties.get( buffergeometry );\n\n\t\tif ( bufferproperty.wireframe ) {\n\n\t\t\tdeleteAttribute( bufferproperty.wireframe );\n\n\t\t}\n\n\t\tproperties.delete( buffergeometry );\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction getAttributeBuffer( attribute ) {\n\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t}\n\n\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t}\n\n\tfunction deleteAttribute( attribute ) {\n\n\t\tvar buffer = getAttributeBuffer( attribute );\n\n\t\tif ( buffer !== undefined ) {\n\n\t\t\tgl.deleteBuffer( buffer );\n\t\t\tremoveAttributeBuffer( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction deleteAttributes( attributes ) {\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tdeleteAttribute( attributes[ name ] );\n\n\t\t}\n\n\t}\n\n\tfunction removeAttributeBuffer( attribute ) {\n\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\tproperties.delete( attribute.data );\n\n\t\t} else {\n\n\t\t\tproperties.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tthis.get = get;\n\n};\n\n// File:src/renderers/webgl/WebGLLights.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\nTHREE.WebGLLights = function () {\n\n\tvar lights = {};\n\n\tthis.get = function ( light ) {\n\n\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\treturn lights[ light.id ];\n\n\t\t}\n\n\t\tvar uniforms;\n\n\t\tswitch ( light.type ) {\n\n\t\t\tcase 'DirectionalLight':\n\t\t\t\tuniforms = {\n\t\t\t\t\tdirection: new THREE.Vector3(),\n\t\t\t\t\tcolor: new THREE.Color(),\n\n\t\t\t\t\tshadow: false,\n\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\n\t\t\t\t};\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\t\t\t\tuniforms = {\n\t\t\t\t\tposition: new THREE.Vector3(),\n\t\t\t\t\tdirection: new THREE.Vector3(),\n\t\t\t\t\tcolor: new THREE.Color(),\n\t\t\t\t\tdistance: 0,\n\t\t\t\t\tconeCos: 0,\n\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\tshadow: false,\n\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\n\t\t\t\t};\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\t\t\t\tuniforms = {\n\t\t\t\t\tposition: new THREE.Vector3(),\n\t\t\t\t\tcolor: new THREE.Color(),\n\t\t\t\t\tdistance: 0,\n\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\tshadow: false,\n\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\n\t\t\t\t};\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\t\t\t\tuniforms = {\n\t\t\t\t\tdirection: new THREE.Vector3(),\n\t\t\t\t\tskyColor: new THREE.Color(),\n\t\t\t\t\tgroundColor: new THREE.Color()\n\t\t\t\t};\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tlights[ light.id ] = uniforms;\n\n\t\treturn uniforms;\n\n\t};\n\n};\n\n// File:src/renderers/webgl/WebGLObjects.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\nTHREE.WebGLObjects = function ( gl, properties, info ) {\n\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\n\n\t//\n\n\tfunction update( object ) {\n\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n\n\t\tvar geometry = geometries.get( object );\n\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\n\n\t\t\tgeometry.updateFromObject( object );\n\n\t\t}\n\n\t\tvar index = geometry.index;\n\t\tvar attributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction updateAttribute( attribute, bufferType ) {\n\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\n\n\t\tvar attributeProperties = properties.get( data );\n\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\n\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\n\n\t\t} else if ( attributeProperties.version !== data.version ) {\n\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\n\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tgl.bufferData( bufferType, data.array, usage );\n\n\t\tattributeProperties.version = data.version;\n\n\t}\n\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\n\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\n\n\t\t} else if ( data.updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\n\n\t\t\tdata.updateRange.count = 0; // reset range\n\n\t\t}\n\n\t\tattributeProperties.version = data.version;\n\n\t}\n\n\tfunction getAttributeBuffer( attribute ) {\n\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t}\n\n\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar property = properties.get( geometry );\n\n\t\tif ( property.wireframe !== undefined ) {\n\n\t\t\treturn property.wireframe;\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tvar index = geometry.index;\n\t\tvar attributes = geometry.attributes;\n\t\tvar position = attributes.position;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar edges = {};\n\t\t\tvar array = index.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = attributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\n\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\tproperty.wireframe = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\tfunction checkEdge( edges, a, b ) {\n\n\t\tif ( a > b ) {\n\n\t\t\tvar tmp = a;\n\t\t\ta = b;\n\t\t\tb = tmp;\n\n\t\t}\n\n\t\tvar list = edges[ a ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\tedges[ a ] = [ b ];\n\t\t\treturn true;\n\n\t\t} else if ( list.indexOf( b ) === -1 ) {\n\n\t\t\tlist.push( b );\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tthis.getAttributeBuffer = getAttributeBuffer;\n\tthis.getWireframeAttribute = getWireframeAttribute;\n\n\tthis.update = update;\n\n};\n\n// File:src/renderers/webgl/WebGLProgram.js\n\nTHREE.WebGLProgram = ( function () {\n\n\tvar programIdCount = 0;\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase THREE.LinearEncoding:\n\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\tcase THREE.sRGBEncoding:\n\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\tcase THREE.RGBEEncoding:\n\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\tcase THREE.RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\tcase THREE.RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\tcase THREE.RGBDEncoding:\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\tcase THREE.GammaEncoding:\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase THREE.LinearToneMapping:\n\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\tbreak;\n\n\t\t\tcase THREE.ReinhardToneMapping:\n\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\tbreak;\n\n\t\t\tcase THREE.Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\tbreak;\n\n\t\t\tcase THREE.CineonToneMapping:\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t}\n\n\tfunction parseIncludes( string ) {\n\n\t\tvar pattern = /#include +<([\\w\\d.]+)>/g;\n\n\t\tfunction replace( match, include ) {\n\n\t\t\tvar replace = THREE.ShaderChunk[ include ];\n\n\t\t\tif ( replace === undefined ) {\n\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t}\n\n\t\t\treturn parseIncludes( replace );\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\tfunction unrollLoops( string ) {\n\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\tvar unroll = '';\n\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t}\n\n\t\t\treturn unroll;\n\n\t\t}\n\n\t\treturn string.replace( pattern, replace );\n\n\t}\n\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\n\n\t\tvar gl = renderer.context;\n\n\t\tvar extensions = material.extensions;\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = material.__webglShader.vertexShader;\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t}\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase THREE.CubeReflectionMapping:\n\t\t\t\tcase THREE.CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.CubeUVReflectionMapping:\n\t\t\t\tcase THREE.CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\tcase THREE.CubeRefractionMapping:\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tswitch ( material.combine ) {\n\n\t\t\t\tcase THREE.MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t// console.log( 'building new program ' );\n\n\t\t//\n\n\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\n\n\t\t\tprefixVertex = '';\n\t\t\tprefixFragment = '';\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? THREE.ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? THREE.ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = parseIncludes( vertexShader, parameters );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\t\tfragmentShader = parseIncludes( fragmentShader, parameters );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\t\tif ( material instanceof THREE.ShaderMaterial === false ) {\n\n\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function() {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms =\n\t\t\t\t\t\tnew THREE.WebGLUniforms( gl, program, renderer );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function() {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function() {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tuniforms: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tattributes: {\n\t\t\t\tget: function() {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\n\t\t//\n\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t};\n\n} )();\n\n// File:src/renderers/webgl/WebGLPrograms.js\n\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"depthPacking\"\n\t];\n\n\n\tfunction allocateBones ( object ) {\n\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = nVertexMatrices;\n\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\n\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\n\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = THREE.LinearEncoding;\n\n\t\t} else if ( map instanceof THREE.Texture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map instanceof THREE.WebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === THREE.LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = THREE.GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, fog, nClipPlanes, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = allocateBones( object );\n\t\tvar precision = renderer.getPrecision();\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === THREE.CubeUVReflectionMapping ) || ( material.envMap.mapping === THREE.CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\n\n\t\t\tflatShading: material.shading === THREE.FlatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\n\t\t\tflipSided: material.side === THREE.BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n};\n\n// File:src/renderers/webgl/WebGLProperties.js\n\n/**\n* @author fordacious / fordacious.github.io\n*/\n\nTHREE.WebGLProperties = function () {\n\n\tvar properties = {};\n\n\tthis.get = function ( object ) {\n\n\t\tvar uuid = object.uuid;\n\t\tvar map = properties[ uuid ];\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties[ uuid ] = map;\n\n\t\t}\n\n\t\treturn map;\n\n\t};\n\n\tthis.delete = function ( object ) {\n\n\t\tdelete properties[ object.uuid ];\n\n\t};\n\n\tthis.clear = function () {\n\n\t\tproperties = {};\n\n\t};\n\n};\n\n// File:src/renderers/webgl/WebGLShader.js\n\nTHREE.WebGLShader = ( function () {\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\treturn function WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t}\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn shader;\n\n\t};\n\n} )();\n\n// File:src/renderers/webgl/WebGLShadowMap.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\n\n\tvar _gl = _renderer.context,\n\t_state = _renderer.state,\n\t_frustum = new THREE.Frustum(),\n\t_projScreenMatrix = new THREE.Matrix4(),\n\n\t_lightShadows = _lights.shadows,\n\n\t_shadowMapSize = new THREE.Vector2(),\n\n\t_lookTarget = new THREE.Vector3(),\n\t_lightPositionWorld = new THREE.Vector3(),\n\n\t_renderList = [],\n\n\t_MorphingFlag = 1,\n\t_SkinningFlag = 2,\n\n\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t_materialCache = {};\n\n\tvar cubeDirections = [\n\t\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\n\t\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\n\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\tnew THREE.Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\n\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\n\t];\n\n\t// init\n\n\tvar depthMaterialTemplate = new THREE.MeshDepthMaterial();\n\tdepthMaterialTemplate.depthPacking = THREE.RGBADepthPacking;\n\tdepthMaterialTemplate.clipping = true;\n\n\tvar distanceShader = THREE.ShaderLib[ \"distanceRGBA\" ];\n\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = depthMaterialTemplate.clone();\n\t\tdepthMaterial.morphTargets = useMorphing;\n\t\tdepthMaterial.skinning = useSkinning;\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\tvar distanceMaterial = new THREE.ShaderMaterial( {\n\t\t\tdefines: {\n\t\t\t\t'USE_SHADOWMAP': ''\n\t\t\t},\n\t\t\tuniforms: distanceUniforms,\n\t\t\tvertexShader: distanceShader.vertexShader,\n\t\t\tfragmentShader: distanceShader.fragmentShader,\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning,\n\t\t\tclipping: true\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = THREE.PCFShadowMap;\n\n\tthis.renderReverseSided = true;\n\tthis.renderSingleSided = true;\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( _lightShadows.length === 0 ) return;\n\n\t\t// Set GL state for depth map.\n\t\t_state.clearColor( 1, 1, 1, 1 );\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.setDepthTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount, isPointLight;\n\n\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\n\n\t\t\tvar light = _lightShadows[ i ];\n\t\t\tvar shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tif ( light instanceof THREE.PointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\t\t\t\tisPointLight = true;\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\t\t\t\tisPointLight = false;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\n\n\t\t\t\tshadow.map = new THREE.WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow instanceof THREE.SpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t}\n\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t_renderList.length = 0;\n\n\t\t\t\tprojectObject( scene, camera, shadowCamera );\n\n\t\t\t\t// render shadow map\n\t\t\t\t// render regular objects\n\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar object = _renderList[ j ];\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Restore GL state.\n\t\tvar clearColor = _renderer.getClearColor(),\n\t\tclearAlpha = _renderer.getClearAlpha();\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined &&\n\t\t\t\t\tgeometry.morphTargets.length > 0 && material.morphTargets;\n\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t material.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tvar side = material.side;\n\n\t\tif ( scope.renderSingleSided && side == THREE.DoubleSide ) {\n\n\t\t\tside = THREE.FrontSide;\n\n\t\t}\n\n\t\tif ( scope.renderReverseSided ) {\n\n\t\t\tif ( side === THREE.FrontSide ) side = THREE.BackSide;\n\t\t\telse if ( side === THREE.BackSide ) side = THREE.FrontSide;\n\n\t\t}\n\n\t\tresult.side = side;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\n\n\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction projectObject( object, camera, shadowCamera ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tif ( object.layers.test( camera.layers ) && ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) ) {\n\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\n\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\t\t_renderList.push( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, shadowCamera );\n\n\t\t}\n\n\t}\n\n};\n\n// File:src/renderers/webgl/WebGLState.js\n\n/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\n\n\tvar _this = this;\n\n\tthis.buffers = {\n\t\tcolor: new THREE.WebGLColorBuffer( gl, this ),\n\t\tdepth: new THREE.WebGLDepthBuffer( gl, this ),\n\t\tstencil: new THREE.WebGLStencilBuffer( gl, this )\n\t};\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar currentScissorTest = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new THREE.Vector4();\n\tvar currentViewport = new THREE.Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 3 );\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t//\n\n\tthis.init = function () {\n\n\t\tthis.clearColor( 0, 0, 0, 1 );\n\t\tthis.clearDepth( 1 );\n\t\tthis.clearStencil( 0 );\n\n\t\tthis.enable( gl.DEPTH_TEST );\n\t\tthis.setDepthFunc( THREE.LessEqualDepth );\n\n\t\tthis.setFlipSided( false );\n\t\tthis.setCullFace( THREE.CullFaceBack );\n\t\tthis.enable( gl.CULL_FACE );\n\n\t\tthis.enable( gl.BLEND );\n\t\tthis.setBlending( THREE.NormalBlending );\n\n\t};\n\n\tthis.initAttributes = function () {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t};\n\n\tthis.enableAttribute = function ( attribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t}\n\n\t};\n\n\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t};\n\n\tthis.disableUnusedAttributes = function () {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.enable = function ( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t};\n\n\tthis.disable = function ( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t};\n\n\tthis.getCompressedTextureFormats = function () {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t};\n\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== THREE.NoBlending ) {\n\n\t\t\tthis.enable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tthis.disable( gl.BLEND );\n\t\t\tcurrentBlending = blending; // no blending, that is\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\tif ( blending === THREE.AdditiveBlending ) {\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t}\n\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t}\n\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t}\n\n\t\tif ( blending === THREE.CustomBlending ) {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t}\n\n\t};\n\n\t// TODO Deprecate\n\n\tthis.setColorWrite = function ( colorWrite ) {\n\n\t\tthis.buffers.color.setMask( colorWrite );\n\n\t};\n\n\tthis.setDepthTest = function ( depthTest ) {\n\n\t\tthis.buffers.depth.setTest( depthTest );\n\n\t};\n\n\tthis.setDepthWrite = function ( depthWrite ) {\n\n\t\tthis.buffers.depth.setMask( depthWrite );\n\n\t};\n\n\tthis.setDepthFunc = function ( depthFunc ) {\n\n\t\tthis.buffers.depth.setFunc( depthFunc );\n\n\t};\n\n\tthis.setStencilTest = function ( stencilTest ) {\n\n\t\tthis.buffers.stencil.setTest( stencilTest );\n\n\t};\n\n\tthis.setStencilWrite = function ( stencilWrite ) {\n\n\t\tthis.buffers.stencil.setMask( stencilWrite );\n\n\t};\n\n\tthis.setStencilFunc = function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\tthis.buffers.stencil.setFunc( stencilFunc, stencilRef, stencilMask );\n\n\t};\n\n\tthis.setStencilOp = function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\tthis.buffers.stencil.setOp( stencilFail, stencilZFail, stencilZPass );\n\n\t};\n\n\t//\n\n\tthis.setFlipSided = function ( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t};\n\n\tthis.setCullFace = function ( cullFace ) {\n\n\t\tif ( cullFace !== THREE.CullFaceNone ) {\n\n\t\t\tthis.enable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.disable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t};\n\n\tthis.setLineWidth = function ( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tgl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t};\n\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn currentScissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( scissorTest ) {\n\n\t\tcurrentScissorTest = scissorTest;\n\n\t\tif ( scissorTest ) {\n\n\t\t\tthis.enable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tthis.disable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t};\n\n\t// texture\n\n\tthis.activeTexture = function ( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t};\n\n\tthis.bindTexture = function ( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t_this.activeTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t};\n\n\tthis.compressedTexImage2D = function () {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( error );\n\n\t\t}\n\n\t};\n\n\tthis.texImage2D = function () {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( error );\n\n\t\t}\n\n\t};\n\n\t// TODO Deprecate\n\n\tthis.clearColor = function ( r, g, b, a ) {\n\n\t\tthis.buffers.color.setClear( r, g, b, a );\n\n\t};\n\n\tthis.clearDepth = function ( depth ) {\n\n\t\tthis.buffers.depth.setClear( depth );\n\n\t};\n\n\tthis.clearStencil = function ( stencil ) {\n\n\t\tthis.buffers.stencil.setClear( stencil );\n\n\t};\n\n\t//\n\n\tthis.scissor = function ( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t};\n\n\tthis.viewport = function ( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tthis.reset = function () {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tthis.buffers.color.reset();\n\t\tthis.buffers.depth.reset();\n\t\tthis.buffers.stencil.reset();\n\n\t};\n\n};\n\nTHREE.WebGLColorBuffer = function ( gl, state ) {\n\n\tvar locked = false;\n\n\tvar color = new THREE.Vector4();\n\tvar currentColorMask = null;\n\tvar currentColorClear = new THREE.Vector4();\n\n\tthis.setMask = function ( colorMask ) {\n\n\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\tcurrentColorMask = colorMask;\n\n\t\t}\n\n\t};\n\n\tthis.setLocked = function ( lock ) {\n\n\t\tlocked = lock;\n\n\t};\n\n\tthis.setClear = function ( r, g, b, a ) {\n\n\t\tcolor.set( r, g, b, a );\n\n\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\tgl.clearColor( r, g, b, a );\n\t\t\tcurrentColorClear.copy( color );\n\n\t\t}\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tlocked = false;\n\n\t\tcurrentColorMask = null;\n\t\tcurrentColorClear = new THREE.Vector4();\n\n\t};\n\n};\n\nTHREE.WebGLDepthBuffer = function( gl, state ) {\n\n\tvar locked = false;\n\n\tvar currentDepthMask = null;\n\tvar currentDepthFunc = null;\n\tvar currentDepthClear = null;\n\n\tthis.setTest = function ( depthTest ) {\n\n\t\tif ( depthTest ) {\n\n\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t} else {\n\n\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t}\n\n\t};\n\n\tthis.setMask = function( depthMask ){\n\n\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\tgl.depthMask( depthMask );\n\t\t\tcurrentDepthMask = depthMask;\n\n\t\t}\n\n\t};\n\n\tthis.setFunc = function ( depthFunc ) {\n\n\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\tif ( depthFunc ) {\n\n\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\tcase THREE.NeverDepth:\n\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.AlwaysDepth:\n\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.LessDepth:\n\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.LessEqualDepth:\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.EqualDepth:\n\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\n\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.GreaterDepth:\n\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.NotEqualDepth:\n\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t}\n\n\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t}\n\n\t};\n\n\tthis.setLocked = function ( lock ) {\n\n\t\tlocked = lock;\n\n\t};\n\n\tthis.setClear = function ( depth ) {\n\n\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\tgl.clearDepth( depth );\n\t\t\tcurrentDepthClear = depth;\n\n\t\t}\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tlocked = false;\n\n\t\tcurrentDepthMask = null;\n\t\tcurrentDepthFunc = null;\n\t\tcurrentDepthClear = null;\n\n\t};\n\n};\n\nTHREE.WebGLStencilBuffer = function ( gl, state ) {\n\n\tvar locked = false;\n\n\tvar currentStencilMask = null;\n\tvar currentStencilFunc = null;\n\tvar currentStencilRef = null;\n\tvar currentStencilFuncMask = null;\n\tvar currentStencilFail  = null;\n\tvar currentStencilZFail = null;\n\tvar currentStencilZPass = null;\n\tvar currentStencilClear = null;\n\n\tthis.setTest = function ( stencilTest ) {\n\n\t\tif ( stencilTest ) {\n\n\t\t\tstate.enable( gl.STENCIL_TEST );\n\n\t\t} else {\n\n\t\t\tstate.disable( gl.STENCIL_TEST );\n\n\t\t}\n\n\t};\n\n\tthis.setMask = function ( stencilMask ) {\n\n\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\tgl.stencilMask( stencilMask );\n\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t}\n\n\t};\n\n\tthis.setFunc = function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\n\n\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\tcurrentStencilRef  = stencilRef;\n\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t}\n\n\t};\n\n\tthis.setOp\t = function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t     currentStencilZFail !== stencilZFail ||\n\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\n\n\t\t\tcurrentStencilFail  = stencilFail;\n\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t}\n\n\t};\n\n\tthis.setLocked = function ( lock ) {\n\n\t\tlocked = lock;\n\n\t};\n\n\tthis.setClear = function ( stencil ) {\n\n\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\tgl.clearStencil( stencil );\n\t\t\tcurrentStencilClear = stencil;\n\n\t\t}\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tlocked = false;\n\n\t\tcurrentStencilMask = null;\n\t\tcurrentStencilFunc = null;\n\t\tcurrentStencilRef = null;\n\t\tcurrentStencilFuncMask = null;\n\t\tcurrentStencilFail = null;\n\t\tcurrentStencilZFail = null;\n\t\tcurrentStencilZPass = null;\n\t\tcurrentStencilClear = null;\n\n\t};\n\n};\n\n// File:src/renderers/webgl/WebGLUniforms.js\n\n/**\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n * .splitDynamic( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with dynamic entry and removes them from 'seq'\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n *\n * @author tschw\n *\n */\n\nTHREE.WebGLUniforms = ( function() { // scope\n\n\t// --- Base for inner nodes (including the root) ---\n\n\tvar UniformContainer = function() {\n\n\t\t\tthis.seq = [];\n\t\t\tthis.map = {};\n\n\t\t},\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\t\tarrayCacheF32 = [],\n\t\tarrayCacheI32 = [],\n\n\t\tuncacheTemporaryArrays = function() {\n\n\t\t\tarrayCacheF32.length = 0;\n\t\t\tarrayCacheI32.length = 0;\n\n\t\t},\n\n\t// Flattening for arrays of vectors and matrices\n\n\t\tflatten = function( array, nBlocks, blockSize ) {\n\n\t\t\tvar firstElem = array[ 0 ];\n\n\t\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t\t// unoptimized: ! isNaN( firstElem )\n\t\t\t// see http://jacksondunstan.com/articles/983\n\n\t\t\tvar n = nBlocks * blockSize,\n\t\t\t\tr = arrayCacheF32[ n ];\n\n\t\t\tif ( r === undefined ) {\n\n\t\t\t\tr = new Float32Array( n );\n\t\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t\t}\n\n\t\t\tif ( nBlocks !== 0 ) {\n\n\t\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\t\toffset += blockSize;\n\t\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn r;\n\n\t\t},\n\n\t// Texture unit allocation\n\n\t\tallocTexUnits = function( renderer, n ) {\n\n\t\t\tvar r = arrayCacheI32[ n ];\n\n\t\t\tif ( r === undefined ) {\n\n\t\t\t\tr = new Int32Array( n );\n\t\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\t\treturn r;\n\n\t\t},\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t\t// Single scalar\n\n\t\tsetValue1f = function( gl, v ) { gl.uniform1f( this.addr, v ); },\n\t\tsetValue1i = function( gl, v ) { gl.uniform1i( this.addr, v ); },\n\n\t\t// Single float vector (from flat array or THREE.VectorN)\n\n\t\tsetValue2fv = function( gl, v ) {\n\n\t\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\n\t\t},\n\n\t\tsetValue3fv = function( gl, v ) {\n\n\t\t\tif ( v.x !== undefined )\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\t\telse if ( v.r !== undefined )\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\t\telse\n\t\t\t\tgl.uniform3fv( this.addr, v );\n\n\t\t},\n\n\t\tsetValue4fv = function( gl, v ) {\n\n\t\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t},\n\n\t\t// Single matrix (from flat array or MatrixN)\n\n\t\tsetValue2fm = function( gl, v ) {\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n\t\t},\n\n\t\tsetValue3fm = function( gl, v ) {\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\n\n\t\t},\n\n\t\tsetValue4fm = function( gl, v ) {\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\n\n\t\t},\n\n\t\t// Single texture (2D / Cube)\n\n\t\tsetValueT1 = function( gl, v, renderer ) {\n\n\t\t\tvar unit = renderer.allocTextureUnit();\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tif ( v ) renderer.setTexture2D( v, unit );\n\n\t\t},\n\n\t\tsetValueT6 = function( gl, v, renderer ) {\n\n\t\t\tvar unit = renderer.allocTextureUnit();\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tif ( v ) renderer.setTextureCube( v, unit );\n\n\t\t},\n\n\t\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\t\tsetValue2iv = function( gl, v ) { gl.uniform2iv( this.addr, v ); },\n\t\tsetValue3iv = function( gl, v ) { gl.uniform3iv( this.addr, v ); },\n\t\tsetValue4iv = function( gl, v ) { gl.uniform4iv( this.addr, v ); },\n\n\t\t// Helper to pick the right setter for the singular case\n\n\t\tgetSingularSetter = function( type ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\t\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\n\t\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Array of scalars\n\n\t\tsetValue1fv = function( gl, v ) { gl.uniform1fv( this.addr, v ); },\n\t\tsetValue1iv = function( gl, v ) { gl.uniform1iv( this.addr, v ); },\n\n\t\t// Array of vectors (flat or from THREE classes)\n\n\t\tsetValueV2a = function( gl, v ) {\n\n\t\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n\t\t},\n\n\t\tsetValueV3a = function( gl, v ) {\n\n\t\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n\t\t},\n\n\t\tsetValueV4a = function( gl, v ) {\n\n\t\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n\t\t},\n\n\t\t// Array of matrices (flat or from THREE clases)\n\n\t\tsetValueM2a = function( gl, v ) {\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n\t\t},\n\n\t\tsetValueM3a = function( gl, v ) {\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n\t\t},\n\n\t\tsetValueM4a = function( gl, v ) {\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n\t\t},\n\n\t\t// Array of textures (2D / Cube)\n\n\t\tsetValueT1a = function( gl, v, renderer ) {\n\n\t\t\tvar n = v.length,\n\t\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\t\tgl.uniform1iv( this.addr, units );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\tvar tex = v[ i ];\n\t\t\t\tif ( tex ) renderer.setTexture2D( tex, units[ i ] );\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetValueT6a = function( gl, v, renderer ) {\n\n\t\t\tvar n = v.length,\n\t\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\t\tgl.uniform1iv( this.addr, units );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\tvar tex = v[ i ];\n\t\t\t\tif ( tex ) renderer.setTextureCube( tex, units[ i ] );\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\t\tgetPureArraySetter = function( type ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t\t}\n\n\t\t},\n\n\t// --- Uniform Classes ---\n\n\t\tSingleUniform = function SingleUniform( id, activeInfo, addr ) {\n\n\t\t\tthis.id = id;\n\t\t\tthis.addr = addr;\n\t\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t\t// this.path = activeInfo.name; // DEBUG\n\n\t\t},\n\n\t\tPureArrayUniform = function( id, activeInfo, addr ) {\n\n\t\t\tthis.id = id;\n\t\t\tthis.addr = addr;\n\t\t\tthis.size = activeInfo.size;\n\t\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t\t// this.path = activeInfo.name; // DEBUG\n\n\t\t},\n\n\t\tStructuredUniform = function( id ) {\n\n\t\t\tthis.id = id;\n\n\t\t\tUniformContainer.call( this ); // mix-in\n\n\t\t};\n\n\tStructuredUniform.prototype.setValue = function( gl, value ) {\n\n\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t// are not allowed in structured uniforms.\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ] );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g,\n\t\t// extracts\n\t\t// \t- the identifier (member name or array index)\n\t\t//  - followed by an optional right bracket (found when array index)\n\t\t//  - followed by an optional left bracket or dot (type of subscript)\n\t\t//\n\t\t// Note: These portions can be read in a non-overlapping fashion and\n\t\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t\t// in the uniform names.\n\n\t\taddUniform = function( container, uniformObject ) {\n\n\t\t\tcontainer.seq.push( uniformObject );\n\t\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t\t},\n\n\t\tparseUniform = function( activeInfo, addr, container ) {\n\n\t\t\tvar path = activeInfo.name,\n\t\t\t\tpathLength = path.length;\n\n\t\t\t// reset RegExp object, because of the early exit of a previous run\n\t\t\tRePathPart.lastIndex = 0;\n\n\t\t\tfor (; ;) {\n\n\t\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\t\tid = match[ 1 ],\n\t\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\t\tif ( subscript === undefined ||\n\t\t\t\t\t\tsubscript === '[' && matchEnd + 2 === pathLength ) {\n\t\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t} else {\n\t\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\t\tvar map = container.map,\n\t\t\t\t\t\tnext = map[ id ];\n\n\t\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontainer = next;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t// Root Container\n\n\t\tWebGLUniforms = function WebGLUniforms( gl, program, renderer ) {\n\n\t\t\tUniformContainer.call( this );\n\n\t\t\tthis.renderer = renderer;\n\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\t\tpath = info.name,\n\t\t\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\t\t\tparseUniform( info, addr, this );\n\n\t\t\t}\n\n\t\t};\n\n\n\tWebGLUniforms.prototype.setValue = function( gl, name, value ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.set = function( gl, object, name ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function( gl, seq, values, renderer ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\n\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\tWebGLUniforms.splitDynamic = function( seq, values ) {\n\n\t\tvar r = null,\n\t\t\tn = seq.length,\n\t\t\tw = 0;\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v && v.dynamic === true ) {\n\n\t\t\t\tif ( r === null ) r = [];\n\t\t\t\tr.push( u );\n\n\t\t\t} else {\n\n\t\t\t\t// in-place compact 'seq', removing the matches\n\t\t\t\tif ( w < i ) seq[ w ] = u;\n\t\t\t\t++ w;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( w < n ) seq.length = w;\n\n\t\treturn r;\n\n\t};\n\n\tWebGLUniforms.evalDynamic = function( seq, values, object, camera ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar v = values[ seq[ i ].id ],\n\t\t\t\tf = v.onUpdateCallback;\n\n\t\t\tif ( f !== undefined ) f.call( v, object, camera );\n\n\t\t}\n\n\t};\n\n\treturn WebGLUniforms;\n\n} )();\n\n\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\n\n\tvar gl = renderer.context;\n\tvar state = renderer.state;\n\n\tvar vertexBuffer, elementBuffer;\n\tvar shader, program, attributes, uniforms;\n\n\tvar tempTexture, occlusionTexture;\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 1, - 1,  0, 0,\n\t\t\t 1, - 1,  1, 0,\n\t\t\t 1,  1,  1, 1,\n\t\t\t- 1,  1,  0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\t// buffers\n\n\t\tvertexBuffer     = gl.createBuffer();\n\t\telementBuffer    = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t// textures\n\n\t\ttempTexture      = gl.createTexture();\n\t\tocclusionTexture = gl.createTexture();\n\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\tshader = {\n\n\t\t\tvertexShader: [\n\n\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( \"\\n\" ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t// pink square\n\n\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t// restore\n\n\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t// flare\n\n\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( \"\\n\" )\n\n\t\t};\n\n\t\tprogram = createProgram( shader );\n\n\t\tattributes = {\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t};\n\n\t\tuniforms = {\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t};\n\n\t}\n\n\t/*\n\t * Render lens flares\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t *         reads these back and calculates occlusion.\n\t */\n\n\tthis.render = function ( scene, camera, viewport ) {\n\n\t\tif ( flares.length === 0 ) return;\n\n\t\tvar tempPosition = new THREE.Vector3();\n\n\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\tvar size = 16 / viewport.w,\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\n\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\n\n\t\tvar validArea = new THREE.Box2();\n\n\t\tvalidArea.min.set( 0, 0 );\n\t\tvalidArea.max.set( viewport.z - 16, viewport.w - 16 );\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tgl.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.vertex );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\t// loop through all lens flares to update their occlusion and positions\n\t\t// setup gl and common used attribs/uniforms\n\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.setDepthWrite( false );\n\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\tsize = 16 / viewport.w;\n\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t// calc object screen position\n\n\t\t\tvar flare = flares[ i ];\n\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\n\n\t\t\t// setup arrays for gl programs\n\n\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t// screen cull\n\n\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t// render pink quad\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t// restore graphics\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t// update object positions\n\n\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t}\n\n\t\t\t\t// render flares\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\t\tstate.enable( gl.DEPTH_TEST );\n\t\tstate.setDepthWrite( true );\n\n\t\trenderer.resetGLState();\n\n\t};\n\n\tfunction createProgram ( shader ) {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\tgl.compileShader( fragmentShader );\n\t\tgl.compileShader( vertexShader );\n\n\t\tgl.attachShader( program, fragmentShader );\n\t\tgl.attachShader( program, vertexShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n};\n\n// File:src/renderers/webgl/plugins/SpritePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SpritePlugin = function ( renderer, sprites ) {\n\n\tvar gl = renderer.context;\n\tvar state = renderer.state;\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new THREE.Vector3();\n\tvar spriteRotation = new THREE.Quaternion();\n\tvar spriteScale = new THREE.Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t- 0.5,   0.5,  0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer  = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new THREE.Texture( canvas );\n\t\ttexture.needsUpdate = true;\n\n\t}\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tgl.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog instanceof THREE.Fog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\tstate.setDepthWrite( material.depthWrite );\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\trenderer.setTexture2D( material.map, 0 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\trenderer.resetGLState();\n\n\t};\n\n\tfunction createProgram () {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'void main() {',\n\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'void main() {',\n\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t'}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable ( a, b ) {\n\t\t\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n};\n\n// File:src/Three.Legacy.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nObject.assign( THREE, {\n\tFace4: function ( a, b, c, d, normal, color, materialIndex ) {\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\n\t},\n\tLineStrip: 0,\n\tLinePieces: 1,\n\tMeshFaceMaterial: THREE.MultiMaterial,\n\tPointCloud: function ( geometry, material ) {\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new THREE.Points( geometry, material );\n\t},\n\tParticle: THREE.Sprite,\n\tParticleSystem: function ( geometry, material ) {\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new THREE.Points( geometry, material );\n\t},\n\tPointCloudMaterial: function ( parameters ) {\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new THREE.PointsMaterial( parameters );\n\t},\n\tParticleBasicMaterial: function ( parameters ) {\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new THREE.PointsMaterial( parameters );\n\t},\n\tParticleSystemMaterial: function ( parameters ) {\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new THREE.PointsMaterial( parameters );\n\t},\n\tVertex: function ( x, y, z ) {\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new THREE.Vector3( x, y, z );\n\t}\n} );\n\n//\n\nObject.assign( THREE.Box2.prototype, {\n\tempty: function () {\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\t},\n\tisIntersectionBox: function ( box ) {\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\t}\n} );\n\nObject.assign( THREE.Box3.prototype, {\n\tempty: function () {\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\t},\n\tisIntersectionBox: function ( box ) {\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\t}\n} );\n\nObject.assign( THREE.Matrix3.prototype, {\n\tmultiplyVector3: function ( vector ) {\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\t},\n\tmultiplyVector3Array: function ( a ) {\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\treturn this.applyToVector3Array( a );\n\t}\n} );\n\nObject.assign( THREE.Matrix4.prototype, {\n\textractPosition: function ( m ) {\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\t},\n\tsetRotationFromQuaternion: function ( q ) {\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\t},\n\tmultiplyVector3: function ( vector ) {\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\n\t\treturn vector.applyProjection( this );\n\t},\n\tmultiplyVector4: function ( vector ) {\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\t},\n\tmultiplyVector3Array: function ( a ) {\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\treturn this.applyToVector3Array( a );\n\t},\n\trotateAxis: function ( v ) {\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\t},\n\tcrossVector: function ( vector ) {\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\t},\n\ttranslate: function ( v ) {\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\t},\n\trotateX: function ( angle ) {\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\t},\n\trotateY: function ( angle ) {\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\t},\n\trotateZ: function ( angle ) {\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\t},\n\trotateByAxis: function ( axis, angle ) {\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\t}\n} );\n\nObject.assign( THREE.Plane.prototype, {\n\tisIntersectionLine: function ( line ) {\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\t}\n} );\n\nObject.assign( THREE.Quaternion.prototype, {\n\tmultiplyVector3: function ( vector ) {\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\t}\n} );\n\nObject.assign( THREE.Ray.prototype, {\n\tisIntersectionBox: function ( box ) {\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\t}\n} );\n\nObject.assign( THREE.Vector3.prototype, {\n\tsetEulerFromRotationMatrix: function () {\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\t},\n\tsetEulerFromQuaternion: function () {\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\t}\n} );\n\n//\n\nObject.assign( THREE.Object3D.prototype, {\n\tgetChildByName: function ( name ) {\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\t},\n\trenderDepth: function ( value ) {\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\t},\n\ttranslate: function ( distance, axis ) {\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\t}\n} );\n\nObject.defineProperties( THREE.Object3D.prototype, {\n\teulerOrder: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t}\n\t}\n} );\n\nObject.defineProperties( THREE.LOD.prototype, {\n\tobjects: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\t\t}\n\t}\n} );\n\n//\n\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( THREE.Light.prototype, {\n\tonlyShadow: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( THREE.BufferAttribute.prototype, {\n\tlength: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\n\t\t\treturn this.array.length;\n\t\t}\n\t}\n} );\n\nObject.assign( THREE.BufferGeometry.prototype, {\n\taddIndex: function ( index ) {\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\t\tif ( indexOffset !== undefined ) {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\t},\n\tclearDrawCalls: function () {\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\t},\n\tcomputeTangents: function () {\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\t},\n\tcomputeOffsets: function () {\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\t}\n} );\n\nObject.defineProperties( THREE.BufferGeometry.prototype, {\n\tdrawcalls: {\n\t\tget: function () {\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( THREE.Material.prototype, {\n\twrapAround: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\n\t\t\treturn new THREE.Color();\n\t\t}\n\t}\n} );\n\nObject.defineProperties( THREE.MeshPhongMaterial.prototype, {\n\tmetal: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\t\t}\n\t}\n} );\n\nObject.defineProperties( THREE.ShaderMaterial.prototype, {\n\tderivatives: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\t\t}\n\t}\n} );\n\n//\n\nTHREE.EventDispatcher.prototype = Object.assign( Object.create( {\n\n\t// Note: Extra base ensures these properties are not 'assign'ed.\n\n\tconstructor: THREE.EventDispatcher,\n\n\tapply: function ( target ) {\n\n\t\tconsole.warn( \"THREE.EventDispatcher: .apply is deprecated, \" +\n\t\t\t\t\"just inherit or Object.assign the prototype to mix-in.\" );\n\n\t\tObject.assign( target, this );\n\n\t}\n\n} ), THREE.EventDispatcher.prototype );\n\n//\n\nObject.assign( THREE.WebGLRenderer.prototype, {\n\tsupportsFloatTextures: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\t},\n\tsupportsHalfFloatTextures: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\t},\n\tsupportsStandardDerivatives: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\t},\n\tsupportsBlendMinMax: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\t},\n\tsupportsVertexTextures: function () {\n\t\treturn this.capabilities.vertexTextures;\n\t},\n\tsupportsInstancedArrays: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\t},\n\tenableScissorTest: function ( boolean ) {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\t},\n\tinitMaterial: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\t},\n\taddPrePlugin: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\t},\n\taddPostPlugin: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\t},\n\tupdateShadowMap: function () {\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\t}\n} );\n\nObject.defineProperties( THREE.WebGLRenderer.prototype, {\n\tshadowMapEnabled: {\n\t\tget: function () {\n\t\t\treturn this.shadowMap.enabled;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\t\t\treturn this.shadowMap.type;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\t\t\treturn this.shadowMap.cullFace;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\tthis.shadowMap.cullFace = value;\n\t\t}\n\t}\n} );\n\nObject.defineProperties( THREE.WebGLShadowMap.prototype, {\n\tcullFace: {\n\t\tget: function () {\n\t\t\treturn this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack;\n\t\t},\n\t\tset: function ( cullFace ) {\n\t\t\tvar value = ( cullFace !== THREE.CullFaceBack );\n\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\tthis.renderReverseSided = value;\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( THREE.WebGLRenderTarget.prototype, {\n\twrapS: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\t\t},\n\t\tset: function ( value ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\t\t}\n\t}\n} );\n\n//\n\nObject.assign( THREE.Audio.prototype, {\n\tload: function ( file ) {\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\n\t\tvar scope = this;\n\t\tvar audioLoader = new THREE.AudioLoader();\n\t\taudioLoader.load( file, function ( buffer ) {\n\t\t\tscope.setBuffer( buffer );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\nObject.assign( THREE.AudioAnalyser.prototype, {\n\tgetData: function ( file ) {\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\t}\n} );\n\n//\n\nTHREE.GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\n\t\tvar matrix;\n\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nTHREE.ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new THREE.TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new THREE.CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t}\n\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function ( vector, camera ) {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n};\n\n//\n\nTHREE.CanvasRenderer = function () {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElement( 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n};\n\n// File:src/extras/CurveUtils.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nTHREE.CurveUtils = {\n\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\n\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\n\n\t},\n\n\t// Puay Bing, thanks for helping with this derivative!\n\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\n\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\n\t\t\t3 * t * t * p3;\n\n\t},\n\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\n\n\t\t// To check if my formulas are correct\n\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\n\n\t\treturn h00 + h10 + h01 + h11;\n\n\t},\n\n\t// Catmull-Rom\n\n\tinterpolate: function( p0, p1, p2, p3, t ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n};\n\n// File:src/extras/SceneUtils.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\tvar group = new THREE.Group();\n\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\n\n\t\t}\n\n\t\treturn group;\n\n\t},\n\n\tdetach: function ( child, parent, scene ) {\n\n\t\tchild.applyMatrix( parent.matrixWorld );\n\t\tparent.remove( child );\n\t\tscene.add( child );\n\n\t},\n\n\tattach: function ( child, scene, parent ) {\n\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\t\tchild.applyMatrix( matrixWorldInverse );\n\n\t\tscene.remove( child );\n\t\tparent.add( child );\n\n\t}\n\n};\n\n// File:src/extras/ShapeUtils.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nTHREE.ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\ttriangulate: ( function () {\n\n\t\t/**\n\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t * See original code and more information here:\n\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t *\n\t\t * ported to actionscript by Zevan Rosser\n\t\t * www.actionsnippet.com\n\t\t *\n\t\t * ported to javascript by Joshua Koo\n\t\t * http://www.lab4games.net/zz85/blog\n\t\t *\n\t\t */\n\n\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\tvar p;\n\t\t\tvar ax, ay, bx, by;\n\t\t\tvar cx, cy, px, py;\n\n\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\n\n\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// takes in an contour array and returns\n\n\t\treturn function ( contour, indices ) {\n\n\t\t\tvar n = contour.length;\n\n\t\t\tif ( n < 3 ) return null;\n\n\t\t\tvar result = [],\n\t\t\t\tverts = [],\n\t\t\t\tvertIndices = [];\n\n\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\tvar u, v, w;\n\n\t\t\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t} else {\n\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t}\n\n\t\t\tvar nv = n;\n\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t//return null;\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\treturn result;\n\n\t\t\t\t}\n\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnv --;\n\n\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( indices ) return vertIndices;\n\t\t\treturn result;\n\n\t\t}\n\n\t} )(),\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t// not parallel\n\n\t\t\t\tvar perpSeg2;\n\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t}\n\n\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t}\n\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t}\n\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t// return real intersection point\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t} else {\n\n\t\t\t\t// parallel or collinear\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t// they are collinear or degenerate\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t// both segments are points\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t}\n\t\t\t\t// segment#1  is a single point\n\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t}\n\t\t\t\t// segment#2  is a single point\n\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t}\n\n\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t// The order of legs is important\n\n\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t// angle != 180 deg.\n\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// angle == 180 deg.\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\tvar hole;\n\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\treturn\ttrue;\n\n\t\t\t}\n\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t// checks for intersections with shape edges\n\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\treturn\tfalse;\n\n\t\t\t}\n\n\t\t\tvar indepHoles = [];\n\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t// checks for intersections with hole edges\n\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\treturn\tfalse;\n\n\t\t\t}\n\n\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\tshapePt, holePt,\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tindepHoles.push( h );\n\n\t\t\t}\n\n\t\t\tvar minShapeIndex = 0;\n\t\t\tvar counter = indepHoles.length * 2;\n\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\tcounter --;\n\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t// which can be connected without intersections\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t}\n\n\n\t\tvar i, il, f, face,\n\t\t\tkey, index,\n\t\t\tallPointsMap = {};\n\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\tvar allpoints = contour.concat();\n\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t}\n\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t// prepare all points map\n\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\n\n\t\t\t}\n\n\t\t\tallPointsMap[ key ] = i;\n\n\t\t}\n\n\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t// check all face vertices against all points map\n\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\tface = triangles[ i ];\n\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn triangles.concat();\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn THREE.ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\t// Bezier Curves formulas obtained from\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n\t// Quad Bezier Functions\n\n\tb2: ( function () {\n\n\t\tfunction b2p0( t, p ) {\n\n\t\t\tvar k = 1 - t;\n\t\t\treturn k * k * p;\n\n\t\t}\n\n\t\tfunction b2p1( t, p ) {\n\n\t\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t\t}\n\n\t\tfunction b2p2( t, p ) {\n\n\t\t\treturn t * t * p;\n\n\t\t}\n\n\t\treturn function ( t, p0, p1, p2 ) {\n\n\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\n\n\t\t};\n\n\t} )(),\n\n\t// Cubic Bezier Functions\n\n\tb3: ( function () {\n\n\t\tfunction b3p0( t, p ) {\n\n\t\t\tvar k = 1 - t;\n\t\t\treturn k * k * k * p;\n\n\t\t}\n\n\t\tfunction b3p1( t, p ) {\n\n\t\t\tvar k = 1 - t;\n\t\t\treturn 3 * k * k * t * p;\n\n\t\t}\n\n\t\tfunction b3p2( t, p ) {\n\n\t\t\tvar k = 1 - t;\n\t\t\treturn 3 * k * t * t * p;\n\n\t\t}\n\n\t\tfunction b3p3( t, p ) {\n\n\t\t\treturn t * t * t * p;\n\n\t\t}\n\n\t\treturn function ( t, p0, p1, p2, p3 ) {\n\n\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\n\n\t\t};\n\n\t} )()\n\n};\n\n// File:src/extras/core/Curve.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of Curve methods\n * .getPoint(t), getTangent(t)\n * .getPointAt(u), getTagentAt(u)\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following classes subclasses THREE.Curve:\n *\n * -- 2d classes --\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.CubicBezierCurve\n * THREE.SplineCurve\n * THREE.ArcCurve\n * THREE.EllipseCurve\n *\n * -- 3d classes --\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n * THREE.CubicBezierCurve3\n * THREE.SplineCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nTHREE.Curve = function () {\n\n};\n\nTHREE.Curve.prototype = {\n\n\tconstructor: THREE.Curve,\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( t ) {\n\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( ! divisions ) divisions = 5;\n\n\t\tvar d, pts = [];\n\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpts.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn pts;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( ! divisions ) divisions = 5;\n\n\t\tvar d, pts = [];\n\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn pts;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\n\n\t\tif ( this.cacheArcLengths\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\n\t\t\t&& ! this.needsUpdate ) {\n\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint ( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t//var time = Date.now();\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\t//console.log('b' , i, low, high, Date.now()- time);\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\tvar t = i / ( il - 1 );\n\t\t\treturn t;\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t}\n\n};\n\n// TODO: Transformation for Curves?\n\n/**************************************************************\n *\t3D Curves\n **************************************************************/\n\n// A Factory method for creating new curve subclasses\n\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\n\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\n\tconstructor.prototype.constructor = constructor;\n\tconstructor.prototype.getPoint = getPointFunc;\n\n\treturn constructor;\n\n};\n\n// File:src/extras/core/CurvePath.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nTHREE.CurvePath = function () {\n\n\tthis.curves = [];\n\n\tthis.autoClose = false; // Automatically closes the path\n\n};\n\nTHREE.CurvePath.prototype = Object.assign( Object.create( THREE.Curve.prototype ), {\n\n\tconstructor: THREE.CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// TODO Test\n\t\t// and verify for vector3 (needs to implement equals)\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar u = 1 - diff / curve.getLength();\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\t/**************************************************************\n\t *\tCreate Geometries Helpers\n\t **************************************************************/\n\n\t/// Generate geometry from path points (for Line or Points objects)\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\t// Generate geometry from equidistant sampling along the path\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tvar geometry = new THREE.Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n// File:src/extras/core/Font.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Font = function ( data ) {\n\n\tthis.data = data;\n\n};\n\nObject.assign( THREE.Font.prototype, {\n\n\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\tfunction createPaths( text ) {\n\n\t\t\tvar chars = String( text ).split( '' );\n\t\t\tvar scale = size / data.resolution;\n\t\t\tvar offset = 0;\n\n\t\t\tvar paths = [];\n\n\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\n\t\t\t\toffset += ret.offset;\n\n\t\t\t\tpaths.push( ret.path );\n\n\t\t\t}\n\n\t\t\treturn paths;\n\n\t\t}\n\n\t\tfunction createPath( c, scale, offset ) {\n\n\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\tif ( ! glyph ) return;\n\n\t\t\tvar path = new THREE.Path();\n\n\t\t\tvar pts = [], b2 = THREE.ShapeUtils.b2, b3 = THREE.ShapeUtils.b3;\n\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\tif ( glyph.o ) {\n\n\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn { offset: glyph.ha * scale, path: path };\n\n\t\t}\n\n\t\t//\n\n\t\tif ( size === undefined ) size = 100;\n\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\tvar data = this.data;\n\n\t\tvar paths = createPaths( text );\n\t\tvar shapes = [];\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n// File:src/extras/core/Path.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n *\n **/\n\nTHREE.Path = function ( points ) {\n\n\tTHREE.CurvePath.call( this );\n\n\tthis.actions = [];\n\n\tif ( points ) {\n\n\t\tthis.fromPoints( points );\n\n\t}\n\n};\n\nTHREE.Path.prototype = Object.assign( Object.create( THREE.CurvePath.prototype ), {\n\n\tconstructor: THREE.Path,\n\n\t// TODO Clean up PATH API\n\n\t// Create path using straight lines to connect all points\n\t// - vectors: array of Vector2\n\n\tfromPoints: function ( vectors ) {\n\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.actions.push( { action: 'moveTo', args: [ x, y ] } );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\n\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.actions.push( { action: 'lineTo', args: [ x, y ] } );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\n\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\t\tvar curve = new THREE.QuadraticBezierCurve(\n\t\t\tnew THREE.Vector2( x0, y0 ),\n\t\t\tnew THREE.Vector2( aCPx, aCPy ),\n\t\t\tnew THREE.Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.actions.push( { action: 'quadraticCurveTo', args: [ aCPx, aCPy, aX, aY ] } );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\n\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\t\tvar curve = new THREE.CubicBezierCurve(\n\t\t\tnew THREE.Vector2( x0, y0 ),\n\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\n\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\n\t\t\tnew THREE.Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.actions.push( { action: 'bezierCurveTo', args: [ aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ] } );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar args = Array.prototype.slice.call( arguments );\n\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\n\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\n\t\tArray.prototype.push.apply( npts, pts );\n\n\t\tvar curve = new THREE.SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.actions.push( { action: 'splineThru', args: args } );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar args = [\n\t\t\taX, aY,\n\t\t\txRadius, yRadius,\n\t\t\taStartAngle, aEndAngle,\n\t\t\taClockwise,\n\t\t\taRotation || 0 // aRotation is optional.\n\t\t];\n\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\targs.push( lastPoint.x );\n\t\targs.push( lastPoint.y );\n\n\t\tthis.actions.push( { action: 'ellipse', args: args } );\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( ! divisions ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t//if ( !this.getPoint( i / divisions ) ) throw \"DIE\";\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar b2 = THREE.ShapeUtils.b2;\n\t\tvar b3 = THREE.ShapeUtils.b3;\n\n\t\tvar points = [];\n\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\n\t\t\tlaste, tx, ty;\n\n\t\tfor ( var i = 0, l = this.actions.length; i < l; i ++ ) {\n\n\t\t\tvar item = this.actions[ i ];\n\n\t\t\tvar action = item.action;\n\t\t\tvar args = item.args;\n\n\t\t\tswitch ( action ) {\n\n\t\t\tcase 'moveTo':\n\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'lineTo':\n\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'quadraticCurveTo':\n\n\t\t\t\tcpx  = args[ 2 ];\n\t\t\t\tcpy  = args[ 3 ];\n\n\t\t\t\tcpx1 = args[ 0 ];\n\t\t\t\tcpy1 = args[ 1 ];\n\n\t\t\t\tif ( points.length > 0 ) {\n\n\t\t\t\t\tlaste = points[ points.length - 1 ];\n\n\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\n\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\n\n\t\t\t\t\tvar t = j / divisions;\n\n\t\t\t\t\ttx = b2( t, cpx0, cpx1, cpx );\n\t\t\t\t\tty = b2( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'bezierCurveTo':\n\n\t\t\t\tcpx  = args[ 4 ];\n\t\t\t\tcpy  = args[ 5 ];\n\n\t\t\t\tcpx1 = args[ 0 ];\n\t\t\t\tcpy1 = args[ 1 ];\n\n\t\t\t\tcpx2 = args[ 2 ];\n\t\t\t\tcpy2 = args[ 3 ];\n\n\t\t\t\tif ( points.length > 0 ) {\n\n\t\t\t\t\tlaste = points[ points.length - 1 ];\n\n\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\n\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\n\n\t\t\t\t}\n\n\n\t\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\n\n\t\t\t\t\tvar t = j / divisions;\n\n\t\t\t\t\ttx = b3( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\tty = b3( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'splineThru':\n\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\n\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\n\t\t\t\tvar spts = [ last ];\n\n\t\t\t\tvar n = divisions * args[ 0 ].length;\n\n\t\t\t\tspts = spts.concat( args[ 0 ] );\n\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\n\n\t\t\t\tfor ( var j = 1; j <= n; j ++ ) {\n\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'arc':\n\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\n\t\t\t\t\taRadius = args[ 2 ],\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\n\t\t\t\t\taClockwise = !! args[ 5 ];\n\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\n\t\t\t\tvar angle;\n\t\t\t\tvar tdivisions = divisions * 2;\n\n\t\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\n\n\t\t\t\t\tvar t = j / tdivisions;\n\n\t\t\t\t\tif ( ! aClockwise ) {\n\n\t\t\t\t\t\tt = 1 - t;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\n\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\n\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\n\n\t\t\t\t}\n\n\t\t\t\t//console.log(points);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ellipse':\n\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\n\t\t\t\t\txRadius = args[ 2 ],\n\t\t\t\t\tyRadius = args[ 3 ],\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\n\t\t\t\t\taClockwise = !! args[ 6 ],\n\t\t\t\t\taRotation = args[ 7 ];\n\n\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\n\t\t\t\tvar angle;\n\t\t\t\tvar tdivisions = divisions * 2;\n\n\t\t\t\tvar cos, sin;\n\t\t\t\tif ( aRotation !== 0 ) {\n\n\t\t\t\t\tcos = Math.cos( aRotation );\n\t\t\t\t\tsin = Math.sin( aRotation );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\n\n\t\t\t\t\tvar t = j / tdivisions;\n\n\t\t\t\t\tif ( ! aClockwise ) {\n\n\t\t\t\t\t\tt = 1 - t;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\n\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\n\n\t\t\t\t\tif ( aRotation !== 0 ) {\n\n\t\t\t\t\t\tvar x = tx, y = ty;\n\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\n\n\t\t\t\t}\n\n\t\t\t\t//console.log(points);\n\n\t\t\t\tbreak;\n\n\t\t\t} // end switch\n\n\t\t}\n\n\n\n\t\t// Normalize to remove the closing point by default.\n\t\tvar lastPoint = points[ points.length - 1 ];\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < Number.EPSILON &&\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < Number.EPSILON )\n\t\t\tpoints.splice( points.length - 1, 1 );\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction extractSubpaths( inActions ) {\n\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\n\n\t\t\tfor ( var i = 0, l = inActions.length; i < l; i ++ ) {\n\n\t\t\t\tvar item = inActions[ i ];\n\n\t\t\t\tvar args = item.args;\n\t\t\t\tvar action = item.action;\n\n\t\t\t\tif ( action === 'moveTo' ) {\n\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\n\n\t\t\t\t\t\tsubPaths.push( lastPath );\n\t\t\t\t\t\tlastPath = new THREE.Path();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\n\n\t\t\t}\n\n\t\t\tif ( lastPath.actions.length !== 0 ) {\n\n\t\t\t\tsubPaths.push( lastPath );\n\n\t\t\t}\n\n\t\t\t// console.log(subPaths);\n\n\t\t\treturn\tsubPaths;\n\n\t\t}\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new THREE.Shape();\n\t\t\t\ttmpShape.actions = tmpPath.actions;\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = THREE.ShapeUtils.isClockWise;\n\n\t\tvar subPaths = extractSubpaths( this.actions );\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new THREE.Shape();\n\t\t\ttmpShape.actions = tmpPath.actions;\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n// File:src/extras/core/Shape.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nTHREE.Shape = function () {\n\n\tTHREE.Path.apply( this, arguments );\n\n\tthis.holes = [];\n\n};\n\nTHREE.Shape.prototype = Object.assign( Object.create( THREE.Path.prototype ), {\n\n\tconstructor: THREE.Shape,\n\n\t// Convenience method to return ExtrudeGeometry\n\n\textrude: function ( options ) {\n\n\t\treturn new THREE.ExtrudeGeometry( this, options );\n\n\t},\n\n\t// Convenience method to return ShapeGeometry\n\n\tmakeGeometry: function ( options ) {\n\n\t\treturn new THREE.ShapeGeometry( this, options );\n\n\t},\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\textractAllPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn this.extractAllPoints( divisions );\n\n\t}\n\n} );\n\n// File:src/extras/curves/LineCurve.js\n\n/**************************************************************\n *\tLine\n **************************************************************/\n\nTHREE.LineCurve = function ( v1, v2 ) {\n\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n};\n\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\n\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\n\n\tvar point = this.v2.clone().sub( this.v1 );\n\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\n\n\treturn this.getPoint( u );\n\n};\n\nTHREE.LineCurve.prototype.getTangent = function( t ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\n// File:src/extras/curves/QuadraticBezierCurve.js\n\n/**************************************************************\n *\tQuadratic Bezier curve\n **************************************************************/\n\n\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n};\n\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\n\n\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\tvar b2 = THREE.ShapeUtils.b2;\n\n\treturn new THREE.Vector2(\n\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\n\t);\n\n};\n\n\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\n\n\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\n\n\treturn new THREE.Vector2(\n\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\n\t).normalize();\n\n};\n\n// File:src/extras/curves/CubicBezierCurve.js\n\n/**************************************************************\n *\tCubic Bezier curve\n **************************************************************/\n\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\tthis.v3 = v3;\n\n};\n\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\n\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\tvar b3 = THREE.ShapeUtils.b3;\n\n\treturn new THREE.Vector2( \n\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t);\n\n};\n\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\n\n\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\n\n\treturn new THREE.Vector2( \n\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t).normalize();\n\n};\n\n// File:src/extras/curves/SplineCurve.js\n\n/**************************************************************\n *\tSpline curve\n **************************************************************/\n\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\n\n\tthis.points = ( points == undefined ) ? [] : points;\n\n};\n\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\n\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\n\n\tvar points = this.points;\n\tvar point = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( point );\n\tvar weight = point - intPoint;\n\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar point1 = points[ intPoint ];\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tvar interpolate = THREE.CurveUtils.interpolate;\n\n\treturn new THREE.Vector2(\n\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\n\t);\n\n};\n\n// File:src/extras/curves/EllipseCurve.js\n\n/**************************************************************\n *\tEllipse curve\n **************************************************************/\n\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tthis.aX = aX;\n\tthis.aY = aY;\n\n\tthis.xRadius = xRadius;\n\tthis.yRadius = yRadius;\n\n\tthis.aStartAngle = aStartAngle;\n\tthis.aEndAngle = aEndAngle;\n\n\tthis.aClockwise = aClockwise;\n\t\n\tthis.aRotation = aRotation || 0;\n\n};\n\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\n\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\n\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\n\n\tvar angle;\n\n\tif ( this.aClockwise === true ) {\n\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\n\n\t} else {\n\n\t\tangle = this.aStartAngle + t * deltaAngle;\n\n\t}\n\t\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x, ty = y;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\n\n\t}\n\n\treturn new THREE.Vector2( x, y );\n\n};\n\n// File:src/extras/curves/ArcCurve.js\n\n/**************************************************************\n *\tArc curve\n **************************************************************/\n\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n};\n\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\n\n// File:src/extras/curves/LineCurve3.js\n\n/**************************************************************\n *\tLine3D\n **************************************************************/\n\nTHREE.LineCurve3 = THREE.Curve.create(\n\n\tfunction ( v1, v2 ) {\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t},\n\n\tfunction ( t ) {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\tvector.multiplyScalar( t );\n\t\tvector.add( this.v1 );\n\n\t\treturn vector;\n\n\t}\n\n);\n\n// File:src/extras/curves/QuadraticBezierCurve3.js\n\n/**************************************************************\n *\tQuadratic Bezier 3D curve\n **************************************************************/\n\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\n\n\tfunction ( v0, v1, v2 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t},\n\n\tfunction ( t ) {\n\n\t\tvar b2 = THREE.ShapeUtils.b2;\t\t\n\n\t\treturn new THREE.Vector3(\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\n\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\n\t\t);\n\n\t}\n\n);\n\n// File:src/extras/curves/CubicBezierCurve3.js\n\n/**************************************************************\n *\tCubic Bezier 3D curve\n **************************************************************/\n\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\n\n\tfunction ( v0, v1, v2, v3 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t},\n\n\tfunction ( t ) {\n\n\t\tvar b3 = THREE.ShapeUtils.b3;\n\n\t\treturn new THREE.Vector3(\n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\n\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\n\t\t);\n\n\t}\n\n);\n\n// File:src/extras/curves/SplineCurve3.js\n\n/**************************************************************\n *\tSpline 3D curve\n **************************************************************/\n\n\nTHREE.SplineCurve3 = THREE.Curve.create(\n\n\tfunction ( points /* array of Vector3 */ ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\n\t\tthis.points = ( points == undefined ) ? [] : points;\n\n\t},\n\n\tfunction ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tvar interpolate = THREE.CurveUtils.interpolate;\n\n\t\treturn new THREE.Vector3(\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\n\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\n\t\t);\n\n\t}\n\n);\n\n// File:src/extras/curves/CatmullRomCurve3.js\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\nTHREE.CatmullRomCurve3 = ( function() {\n\n\tvar\n\t\ttmp = new THREE.Vector3(),\n\t\tpx = new CubicPoly(),\n\t\tpy = new CubicPoly(),\n\t\tpz = new CubicPoly();\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t}\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\n\n\t\tthis.c0 = x0;\n\t\tthis.c1 = t0;\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t};\n\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t// compute tangents when parameterized in [t1,t2]\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t// rescale tangents for parametrization in [0,1]\n\t\tt1 *= dt1;\n\t\tt2 *= dt1;\n\n\t\t// initCubicPoly\n\t\tthis.init( x1, x2, t1, t2 );\n\n\t};\n\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\n\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t};\n\n\tCubicPoly.prototype.calc = function( t ) {\n\n\t\tvar t2 = t * t;\n\t\tvar t3 = t2 * t;\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n\n\t};\n\n\t// Subclass Three.js curve\n\treturn THREE.Curve.create(\n\n\t\tfunction ( p /* array of Vector3 */ ) {\n\n\t\t\tthis.points = p || [];\n\t\t\tthis.closed = false;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar points = this.points,\n\t\t\t\tpoint, intPoint, weight, l;\n\n\t\t\tl = points.length;\n\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\n\n\t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\t\tintPoint = Math.floor( point );\n\t\t\tweight = point - intPoint;\n\n\t\t\tif ( this.closed ) {\n\n\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\t\tintPoint = l - 2;\n\t\t\t\tweight = 1;\n\n\t\t\t}\n\n\t\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t\t} else {\n\n\t\t\t\t// extrapolate first point\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\t\tp0 = tmp;\n\n\t\t\t}\n\n\t\t\tp1 = points[ intPoint % l ];\n\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t\t} else {\n\n\t\t\t\t// extrapolate last point\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\t\tp3 = tmp;\n\n\t\t\t}\n\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t\t// safety check for repeated points\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t\t} else if ( this.type === 'catmullrom' ) {\n\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t\t\t}\n\n\t\t\tvar v = new THREE.Vector3(\n\t\t\t\tpx.calc( weight ),\n\t\t\t\tpy.calc( weight ),\n\t\t\t\tpz.calc( weight )\n\t\t\t);\n\n\t\t\treturn v;\n\n\t\t}\n\n\t);\n\n} )();\n\n// File:src/extras/curves/ClosedSplineCurve3.js\n\n/**************************************************************\n *\tClosed Spline 3D curve\n **************************************************************/\n\n\nTHREE.ClosedSplineCurve3 = function ( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\n\n\tTHREE.CatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n};\n\nTHREE.ClosedSplineCurve3.prototype = Object.create( THREE.CatmullRomCurve3.prototype );\n\n// File:src/extras/geometries/BoxGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n */\n\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new THREE.BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n};\n\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\n\nTHREE.CubeGeometry = THREE.BoxGeometry;\n\n// File:src/extras/geometries/BoxBufferGeometry.js\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nTHREE.BoxBufferGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\t// segments\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// these are used to calculate buffer length\n\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\n\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\n\n\t// buffers\n\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\tvar vertices = new Float32Array( vertexCount * 3 );\n\tvar normals = new Float32Array( vertexCount * 3 );\n\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t// offset variables\n\tvar vertexBufferOffset = 0;\n\tvar uvBufferOffset = 0;\n\tvar indexBufferOffset = 0;\n\tvar numberOfVertices = 0;\n\n\t// group variables\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\t// helper functions\n\n\tfunction calculateVertexCount ( w, h, d ) {\n\n\t\tvar vertices = 0;\n\n\t\t// calculate the amount of vertices for each side (plane)\n\t\tvertices += (w + 1) * (h + 1) * 2; // xy\n\t\tvertices += (w + 1) * (d + 1) * 2; // xz\n\t\tvertices += (d + 1) * (h + 1) * 2; // zy\n\n\t\treturn vertices;\n\n\t}\n\n\tfunction calculateIndexCount ( w, h, d ) {\n\n\t\tvar index = 0;\n\n\t\t// calculate the amount of squares for each side\n\t\tindex += w * h * 2; // xy\n\t\tindex += w * d * 2; // xz\n\t\tindex += d * h * 2; // zy\n\n\t\treturn index * 6; // two triangles per square => six vertices per square\n\n\t}\n\n\tfunction buildPlane ( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth\t= width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\n\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t// set values to correct vector component\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\n\t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t// uvs\n\t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\n\t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\t// update offsets and counters\n\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\tuvBufferOffset += 2;\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// face one\n\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t// face two\n\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t// update offsets and counters\n\t\t\t\tindexBufferOffset += 6;\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n};\n\nTHREE.BoxBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry;\n\n// File:src/extras/geometries/CircleGeometry.js\n\n/**\n * @author hughes\n */\n\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\n};\n\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\n\n// File:src/extras/geometries/CircleBufferGeometry.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tvar vertices = segments + 2;\n\n\tvar positions = new Float32Array( vertices * 3 );\n\tvar normals = new Float32Array( vertices * 3 );\n\tvar uvs = new Float32Array( vertices * 2 );\n\n\t// center data is already zero, but need to set a few extras\n\tnormals[ 2 ] = 1.0;\n\tuvs[ 0 ] = 0.5;\n\tuvs[ 1 ] = 0.5;\n\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\tpositions[ i ] = radius * Math.cos( segment );\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\n\n\t\tnormals[ i + 2 ] = 1; // normal z\n\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\n\n\t}\n\n\tvar indices = [];\n\n\tfor ( var i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\n\n// File:src/extras/geometries/CylinderBufferGeometry.js\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nTHREE.CylinderBufferGeometry = function( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\theight = height !== undefined ? height : 100;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t// used to calculate buffer length\n\n\tvar nbCap = 0;\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) nbCap ++;\n\t\tif ( radiusBottom > 0 ) nbCap ++;\n\n\t}\n\n\tvar vertexCount = calculateVertexCount();\n\tvar indexCount = calculateIndexCount();\n\n\t// buffers\n\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t// helper variables\n\n\tvar index = 0,\n\t    indexOffset = 0,\n\t    indexArray = [],\n\t    halfHeight = height / 2;\n\n\t// group variables\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', vertices );\n\tthis.addAttribute( 'normal', normals );\n\tthis.addAttribute( 'uv', uvs );\n\n\t// helper functions\n\n\tfunction calculateVertexCount() {\n\n\t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\n\n\t\t}\n\n\t\treturn count;\n\n\t}\n\n\tfunction calculateIndexCount() {\n\n\t\tvar count = radialSegments * heightSegments * 2 * 3;\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tcount += radialSegments * nbCap * 3;\n\n\t\t}\n\n\t\treturn count;\n\n\t}\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new THREE.Vector3();\n\t\tvar vertex = new THREE.Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormal.copy( vertex );\n\n\t\t\t\t// handle special case if radiusTop/radiusBottom is zero\n\n\t\t\t\tif ( ( radiusTop === 0 && y === 0 ) || ( radiusBottom === 0 && y === heightSegments ) ) {\n\n\t\t\t\t\tnormal.x = Math.sin( u * thetaLength + thetaStart );\n\t\t\t\t\tnormal.z = Math.cos( u * thetaLength + thetaStart );\n\n\t\t\t\t}\n\n\t\t\t\tnormal.setY( Math.sqrt( normal.x * normal.x + normal.z * normal.z ) * tanTheta ).normalize();\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\t\t\t\tindexRow.push( index );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\tvar i1 = indexArray[ y ][ x ];\n\t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, i1 ); indexOffset ++;\n\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\tindices.setX( indexOffset, i3 ); indexOffset ++;\n\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t// update counters\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new THREE.Vector2();\n\t\tvar vertex = new THREE.Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t// uv\n\t\t\tuv.x = 0.5;\n\t\t\tuv.y = 0.5;\n\n\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t// increase index\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t// uv\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t// increase index\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t}\n\n\t\t\t// update counters\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\t\tgroupStart += groupCount;\n\n\t}\n\n};\n\nTHREE.CylinderBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry;\n\n// File:src/extras/geometries/CylinderGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new THREE.CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n};\n\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\n\n// File:src/extras/geometries/ConeBufferGeometry.js\n\n/*\n * @author: abelnation / http://github.com/abelnation\n */\n\nTHREE.ConeBufferGeometry = function (\n\tradius, height,\n\tradialSegments, heightSegments,\n\topenEnded, thetaStart, thetaLength ) {\n\n\tTHREE.CylinderBufferGeometry.call( this,\n\t\t0, radius, height,\n\t\tradialSegments, heightSegments,\n\t\topenEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n};\n\nTHREE.ConeBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry;\n\n// File:src/extras/geometries/ConeGeometry.js\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nTHREE.ConeGeometry = function (\n\tradius, height,\n\tradialSegments, heightSegments,\n\topenEnded, thetaStart, thetaLength ) {\n\n\tTHREE.CylinderGeometry.call( this,\n\t\t0, radius, height,\n\t\tradialSegments, heightSegments,\n\t\topenEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n};\n\nTHREE.ConeGeometry.prototype = Object.create( THREE.CylinderGeometry.prototype );\nTHREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry;\n\n// File:src/extras/geometries/EdgesGeometry.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\tvar thresholdDot = Math.cos( THREE.Math.DEG2RAD * thresholdAngle );\n\n\tvar edge = [ 0, 0 ], hash = {};\n\n\tfunction sortFunction( a, b ) {\n\n\t\treturn a - b;\n\n\t}\n\n\tvar keys = [ 'a', 'b', 'c' ];\n\n\tvar geometry2;\n\n\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\tgeometry2 = new THREE.Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar vertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge.sort( sortFunction );\n\n\t\t\tvar key = edge.toString();\n\n\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\thash[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvar coords = [];\n\n\tfor ( var key in hash ) {\n\n\t\tvar h = hash[ key ];\n\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = vertices[ h.vert1 ];\n\t\t\tcoords.push( vertex.x );\n\t\t\tcoords.push( vertex.y );\n\t\t\tcoords.push( vertex.z );\n\n\t\t\tvertex = vertices[ h.vert2 ];\n\t\t\tcoords.push( vertex.x );\n\t\t\tcoords.push( vertex.y );\n\t\t\tcoords.push( vertex.z );\n\n\t\t}\n\n\t}\n\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\n\n};\n\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\n\n// File:src/extras/geometries/ExtrudeGeometry.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\n *\n *  uvGenerator: <Object> // object that provides UV generator functions\n *\n * }\n **/\n\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\n\n\tif ( typeof( shapes ) === \"undefined\" ) {\n\n\t\tshapes = [];\n\t\treturn;\n\n\t}\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tthis.addShapeList( shapes, options );\n\n\tthis.computeFaceNormals();\n\n\t// can't really use automatic vertex normals\n\t// as then front and back sides get smoothed too\n\t// should do separate smoothing just for sides\n\n\t//this.computeVertexNormals();\n\n\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n};\n\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\n\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\tvar sl = shapes.length;\n\n\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\tvar shape = shapes[ s ];\n\t\tthis.addShape( shape, options );\n\n\t}\n\n};\n\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\n\n\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\tvar extrudePath = options.extrudePath;\n\tvar extrudePts, extrudeByPath = false;\n\n\t// Use default WorldUVGenerator if no UV generators are specified.\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\n\n\tvar splineTube, binormal, normal, position2;\n\tif ( extrudePath ) {\n\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\textrudeByPath = true;\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t// SETUP TNB variables\n\n\t\t// Reuse TNB from TubeGeomtry for now.\n\t\t// TODO1 - have a .isClosed in spline?\n\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\n\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\tbinormal = new THREE.Vector3();\n\t\tnormal = new THREE.Vector3();\n\t\tposition2 = new THREE.Vector3();\n\n\t}\n\n\t// Safeguards if bevels are not enabled\n\n\tif ( ! bevelEnabled ) {\n\n\t\tbevelSegments = 0;\n\t\tbevelThickness = 0;\n\t\tbevelSize = 0;\n\n\t}\n\n\t// Variables initialization\n\n\tvar ahole, h, hl; // looping of holes\n\tvar scope = this;\n\n\tvar shapesOffset = this.vertices.length;\n\n\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\tvar vertices = shapePoints.shape;\n\tvar holes = shapePoints.holes;\n\n\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\n\n\tif ( reverse ) {\n\n\t\tvertices = vertices.reverse();\n\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n\n\t}\n\n\n\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\n\n\t/* Vertices */\n\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\tvertices = vertices.concat( ahole );\n\n\t}\n\n\n\tfunction scalePt2 ( pt, vec, size ) {\n\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t}\n\n\tvar b, bs, t, z,\n\t\tvert, vlen = vertices.length,\n\t\tface, flen = faces.length;\n\n\n\t// Find directions for point movement\n\n\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t//\n\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\n\n\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\n\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t// check for collinear edges\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t// not collinear\n\n\t\t\t// length of vectors for normalizing\n\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t// vector from inPt to intersection point\n\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t//  but prevent crazy spikes\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\n\n\t\t\t} else {\n\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// handle special case of collinear edges\n\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\n\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( direction_eq ) {\n\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\tv_trans_y =  v_prev_x;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t} else {\n\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t}\n\n\n\tvar contourMovements = [];\n\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\tif ( j === il ) j = 0;\n\t\tif ( k === il ) k = 0;\n\n\t\t//  (j)---(i)---(k)\n\t\t// console.log('i,j,k', i, j , k)\n\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t}\n\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\toneHoleMovements = [];\n\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t}\n\n\t\tholesMovements.push( oneHoleMovements );\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t}\n\n\n\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * ( 1 - t );\n\n\t\t//z = bevelThickness * t;\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\n\t\t//bs = bevelSize * t; // linear\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbs = bevelSize;\n\n\t// Back facing vertices\n\n\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\tif ( ! extrudeByPath ) {\n\n\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t} else {\n\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t}\n\n\t}\n\n\t// Add stepped vertices...\n\t// Including front facing vertices\n\n\tvar s;\n\n\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\t// Add bevel segments planes\n\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * ( 1 - t );\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* Faces */\n\n\t// Top and bottom faces\n\n\tbuildLidFaces();\n\n\t// Sides faces\n\n\tbuildSideFaces();\n\n\n\t/////  Internal functions\n\n\tfunction buildLidFaces() {\n\n\t\tif ( bevelEnabled ) {\n\n\t\t\tvar layer = 0; // steps + 1\n\t\t\tvar offset = vlen * layer;\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t}\n\n\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\toffset = vlen * layer;\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t}\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Create faces for the z-sides of the shape\n\n\tfunction buildSideFaces() {\n\n\t\tvar layeroffset = 0;\n\t\tsidewalls( contour, layeroffset );\n\t\tlayeroffset += contour.length;\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t//, true\n\t\t\tlayeroffset += ahole.length;\n\n\t\t}\n\n\t}\n\n\tfunction sidewalls( contour, layeroffset ) {\n\n\t\tvar j, k;\n\t\ti = contour.length;\n\n\t\twhile ( -- i >= 0 ) {\n\n\t\t\tj = i;\n\t\t\tk = i - 1;\n\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\n\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\tfunction v( x, y, z ) {\n\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\n\n\t}\n\n\tfunction f3( a, b, c ) {\n\n\t\ta += shapesOffset;\n\t\tb += shapesOffset;\n\t\tc += shapesOffset;\n\n\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\n\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\n\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\n\n\t}\n\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\ta += shapesOffset;\n\t\tb += shapesOffset;\n\t\tc += shapesOffset;\n\t\td += shapesOffset;\n\n\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\n\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\n\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\n\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\n\n\t}\n\n};\n\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\n\n\t\tvar vertices = geometry.vertices;\n\n\t\tvar a = vertices[ indexA ];\n\t\tvar b = vertices[ indexB ];\n\t\tvar c = vertices[ indexC ];\n\n\t\treturn [\n\t\t\tnew THREE.Vector2( a.x, a.y ),\n\t\t\tnew THREE.Vector2( b.x, b.y ),\n\t\t\tnew THREE.Vector2( c.x, c.y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\n\n\t\tvar vertices = geometry.vertices;\n\n\t\tvar a = vertices[ indexA ];\n\t\tvar b = vertices[ indexB ];\n\t\tvar c = vertices[ indexC ];\n\t\tvar d = vertices[ indexD ];\n\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\n// File:src/extras/geometries/ShapeGeometry.js\n\n/**\n * @author jonobr1 / http://jonobr1.com\n *\n * Creates a one-sided polygonal geometry from a path shape. Similar to\n * ExtrudeGeometry.\n *\n * parameters = {\n *\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n *\n *\tmaterial: <int> // material index for front and back faces\n *\tuvGenerator: <Object> // object that provides UV generator functions\n *\n * }\n **/\n\nTHREE.ShapeGeometry = function ( shapes, options ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\n\n\tthis.addShapeList( shapes, options );\n\n\tthis.computeFaceNormals();\n\n};\n\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\n\n/**\n * Add an array of shapes to THREE.ShapeGeometry.\n */\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tthis.addShape( shapes[ i ], options );\n\n\t}\n\n\treturn this;\n\n};\n\n/**\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n */\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\n\n\tif ( options === undefined ) options = {};\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\tvar material = options.material;\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\n\n\t//\n\n\tvar i, l, hole;\n\n\tvar shapesOffset = this.vertices.length;\n\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\tvar vertices = shapePoints.shape;\n\tvar holes = shapePoints.holes;\n\n\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\n\n\tif ( reverse ) {\n\n\t\tvertices = vertices.reverse();\n\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\thole = holes[ i ];\n\n\t\t\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\n\n\t\t\t\tholes[ i ] = hole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\treverse = false;\n\n\t}\n\n\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\n\n\t// Vertices\n\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\thole = holes[ i ];\n\t\tvertices = vertices.concat( hole );\n\n\t}\n\n\t//\n\n\tvar vert, vlen = vertices.length;\n\tvar face, flen = faces.length;\n\n\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\tvert = vertices[ i ];\n\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\n\n\t}\n\n\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\tface = faces[ i ];\n\n\t\tvar a = face[ 0 ] + shapesOffset;\n\t\tvar b = face[ 1 ] + shapesOffset;\n\t\tvar c = face[ 2 ] + shapesOffset;\n\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\n\n\t}\n\n};\n\n// File:src/extras/geometries/LatheBufferGeometry.js\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n // points - to create a closed torus, one must use a set of points\n //    like so: [ a, b, c, d, a ], see first is the same as last.\n // segments - the number of circumference segments to create\n // phiStart - the starting radian\n // phiLength - the radian (0 to 2PI) range of the lathed section\n //    2PI is a closed lathe, less than 2PI is a portion.\n\nTHREE.LatheBufferGeometry = function ( points, segments, phiStart, phiLength ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\tphiLength = THREE.Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\t// these are used to calculate buffer length\n\tvar vertexCount = ( segments + 1 ) * points.length;\n\tvar indexCount = segments * points.length * 2 * 3;\n\n\t// buffers\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t// helper variables\n\tvar index = 0, indexOffset = 0, base;\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new THREE.Vector3();\n\tvar uv = new THREE.Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t// increase index\n\t\t\tindex ++;\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\t// indices\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// face one\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t// face two\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', vertices );\n\tthis.addAttribute( 'uv', uvs );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new THREE.Vector3();\n\t\tvar n2 = new THREE.Vector3();\n\t\tvar n = new THREE.Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\t\tbase = segments * points.length * 3;\n\n\t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t} // next row\n\n\t}\n\n};\n\nTHREE.LatheBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry;\n\n// File:src/extras/geometries/LatheGeometry.js\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n */\n\n// points - to create a closed torus, one must use a set of points\n//    like so: [ a, b, c, d, a ], see first is the same as last.\n// segments - the number of circumference segments to create\n// phiStart - the starting radian\n// phiLength - the radian (0 to 2PI) range of the lathed section\n//    2PI is a closed lathe, less than 2PI is a portion.\n\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new THREE.LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n};\n\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\n\n// File:src/extras/geometries/PlaneGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n */\n\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\n};\n\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\n\n// File:src/extras/geometries/PlaneBufferGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n */\n\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\n\n\tvar offset = 0;\n\tvar offset2 = 0;\n\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices[ offset ] = x;\n\t\t\tvertices[ offset + 1 ] = - y;\n\n\t\t\tnormals[ offset + 2 ] = 1;\n\n\t\t\tuvs[ offset2 ] = ix / gridX;\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\n\n\t\t\toffset += 3;\n\t\t\toffset2 += 2;\n\n\t\t}\n\n\t}\n\n\toffset = 0;\n\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\n\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\tindices[ offset ] = a;\n\t\t\tindices[ offset + 1 ] = b;\n\t\t\tindices[ offset + 2 ] = d;\n\n\t\t\tindices[ offset + 3 ] = b;\n\t\t\tindices[ offset + 4 ] = c;\n\t\t\tindices[ offset + 5 ] = d;\n\n\t\t\toffset += 6;\n\n\t\t}\n\n\t}\n\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n};\n\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\n\n// File:src/extras/geometries/RingBufferGeometry.js\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nTHREE.RingBufferGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 20;\n\touterRadius = outerRadius || 50;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// these are used to calculate buffer length\n\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\n\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\n\n\t// buffers\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t// some helper variables\n\tvar index = 0, indexOffset = 0, segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new THREE.Vector3();\n\tvar uv = new THREE.Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\t// values are generate from the inside of the ring to the outside\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\t\t\tnormals.setXYZ( index, 0, 0, 1 );\n\n\t\t\t// uv\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t// increase index\n\t\t\tindex++;\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\t\tradius += radiusStep;\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t// indices\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// face one\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\n\t\t\t// face two\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', vertices );\n\tthis.addAttribute( 'normal', normals );\n\tthis.addAttribute( 'uv', uvs );\n\n};\n\nTHREE.RingBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry;\n\n// File:src/extras/geometries/RingGeometry.js\n\n/**\n * @author Kaleb Murphy\n */\n\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new THREE.RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\n};\n\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\n\n// File:src/extras/geometries/SphereGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\n};\n\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\n\n// File:src/extras/geometries/SphereBufferGeometry.js\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * based on THREE.SphereGeometry\n */\n\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\n\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\n\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = y / heightSegments;\n\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\n\n\t\t\tvar u = x / widthSegments;\n\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tnormal.set( px, py, pz ).normalize();\n\n\t\t\tpositions.setXYZ( index, px, py, pz );\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\tverticesRow.push( index );\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\tvertices.push( verticesRow );\n\n\t}\n\n\tvar indices = [];\n\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\n\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\n\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\n\t\t\tvar v2 = vertices[ y ][ x ];\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\n\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\n\n\t\t}\n\n\t}\n\n\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\n\tthis.addAttribute( 'position', positions );\n\tthis.addAttribute( 'normal', normals );\n\tthis.addAttribute( 'uv', uvs );\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\n\n// File:src/extras/geometries/TextGeometry.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\nTHREE.TextGeometry = function ( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( font instanceof THREE.Font === false ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new THREE.Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tTHREE.ExtrudeGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextGeometry';\n\n};\n\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\n\n// File:src/extras/geometries/TorusBufferGeometry.js\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nTHREE.TorusBufferGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 100;\n\ttube = tube || 40;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// used to calculate buffer length\n\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t// buffers\n\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\tvar vertices = new Float32Array( vertexCount * 3 );\n\tvar normals = new Float32Array( vertexCount * 3 );\n\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t// offset variables\n\tvar vertexBufferOffset = 0;\n\tvar uvBufferOffset = 0;\n\tvar indexBufferOffset = 0;\n\n\t// helper variables\n\tvar center = new THREE.Vector3();\n\tvar vertex = new THREE.Vector3();\n\tvar normal = new THREE.Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices[ vertexBufferOffset ] = vertex.x;\n\t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\n\t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\n\n\t\t\t// this vector is used to calculate the normal\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\n\t\t\t// normal\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals[ vertexBufferOffset ] = normal.x;\n\t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\n\t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\n\n\t\t\t// uv\n\t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\n\t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\n\n\t\t\t// update offsets\n\t\t\tvertexBufferOffset += 3;\n\t\t\tuvBufferOffset += 2;\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// face one\n\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t// face two\n\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t// update offset\n\t\t\tindexBufferOffset += 6;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n};\n\nTHREE.TorusBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry;\n\n// File:src/extras/geometries/TorusGeometry.js\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n */\n\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new THREE.TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\n};\n\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\n\n// File:src/extras/geometries/TorusKnotBufferGeometry.js\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * see: http://www.blackpawn.com/texts/pqtorus/\n */\nTHREE.TorusKnotBufferGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 100;\n\ttube = tube || 40;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// used to calculate buffer length\n\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t// buffers\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t// helper variables\n\tvar i, j, index = 0, indexOffset = 0;\n\n\tvar vertex = new THREE.Vector3();\n\tvar normal = new THREE.Vector3();\n\tvar uv = new THREE.Vector2();\n\n\tvar P1 = new THREE.Vector3();\n\tvar P2 = new THREE.Vector3();\n\n\tvar B = new THREE.Vector3();\n\tvar T = new THREE.Vector3();\n\tvar N = new THREE.Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t// vertex\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\t\t\tuv.x = i / tubularSegments;\n\t\t\tuv.y = j / radialSegments;\n\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t// increase index\n\t\t\tindex ++;\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// face one\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t// face two\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', vertices );\n\tthis.addAttribute( 'normal', normals );\n\tthis.addAttribute( 'uv', uvs );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n};\n\nTHREE.TorusKnotBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry;\n\n// File:src/extras/geometries/TorusKnotGeometry.js\n\n/**\n * @author oosmoxiecode\n */\n\nTHREE.TorusKnotGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n};\n\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\n\n// File:src/extras/geometries/TubeGeometry.js\n\n/**\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n *\n * Modified from the TorusKnotGeometry by @oosmoxiecode\n *\n * Creates a tube which extrudes along a 3d spline\n *\n * Uses parallel transport frames as described in\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n */\n\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\tsegments: segments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed,\n\t\ttaper: taper\n\t};\n\n\tsegments = segments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\n\n\tvar grid = [];\n\n\tvar scope = this,\n\n\t\ttangent,\n\t\tnormal,\n\t\tbinormal,\n\n\t\tnumpoints = segments + 1,\n\n\t\tu, v, r,\n\n\t\tcx, cy,\n\t\tpos, pos2 = new THREE.Vector3(),\n\t\ti, j,\n\t\tip, jp,\n\t\ta, b, c, d,\n\t\tuva, uvb, uvc, uvd;\n\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\n\t\ttangents = frames.tangents,\n\t\tnormals = frames.normals,\n\t\tbinormals = frames.binormals;\n\n\t// proxy internals\n\tthis.tangents = tangents;\n\tthis.normals = normals;\n\tthis.binormals = binormals;\n\n\tfunction vert( x, y, z ) {\n\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\n\n\t}\n\n\t// construct the grid\n\n\tfor ( i = 0; i < numpoints; i ++ ) {\n\n\t\tgrid[ i ] = [];\n\n\t\tu = i / ( numpoints - 1 );\n\n\t\tpos = path.getPointAt( u );\n\n\t\ttangent = tangents[ i ];\n\t\tnormal = normals[ i ];\n\t\tbinormal = binormals[ i ];\n\n\t\tr = radius * taper( u );\n\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\n\n\t\t\tv = j / radialSegments * 2 * Math.PI;\n\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\n\t\t\tcy = r * Math.sin( v );\n\n\t\t\tpos2.copy( pos );\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\n\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\n\n\t\t}\n\n\t}\n\n\n\t// construct the mesh\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\n\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\n\t\t\tjp = ( j + 1 ) % radialSegments;\n\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\n\t\t\tb = grid[ ip ][ j ];\n\t\t\tc = grid[ ip ][ jp ];\n\t\t\td = grid[ i ][ jp ];\n\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\n\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n\t\t}\n\n\t}\n\n\tthis.computeFaceNormals();\n\tthis.computeVertexNormals();\n\n};\n\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\n\nTHREE.TubeGeometry.NoTaper = function ( u ) {\n\n\treturn 1;\n\n};\n\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\n\n\treturn Math.sin( Math.PI * u );\n\n};\n\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\n\n\tvar\tnormal = new THREE.Vector3(),\n\n\t\ttangents = [],\n\t\tnormals = [],\n\t\tbinormals = [],\n\n\t\tvec = new THREE.Vector3(),\n\t\tmat = new THREE.Matrix4(),\n\n\t\tnumpoints = segments + 1,\n\t\ttheta,\n\t\tsmallest,\n\n\t\ttx, ty, tz,\n\t\ti, u;\n\n\n\t// expose internals\n\tthis.tangents = tangents;\n\tthis.normals = normals;\n\tthis.binormals = binormals;\n\n\t// compute the tangent vectors for each segment on the path\n\n\tfor ( i = 0; i < numpoints; i ++ ) {\n\n\t\tu = i / ( numpoints - 1 );\n\n\t\ttangents[ i ] = path.getTangentAt( u );\n\t\ttangents[ i ].normalize();\n\n\t}\n\n\tinitialNormal3();\n\n\t/*\n\tfunction initialNormal1(lastBinormal) {\n\t\t// fixed start binormal. Has dangers of 0 vectors\n\t\tnormals[ 0 ] = new THREE.Vector3();\n\t\tbinormals[ 0 ] = new THREE.Vector3();\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\t}\n\n\tfunction initialNormal2() {\n\n\t\t// This uses the Frenet-Serret formula for deriving binormal\n\t\tvar t2 = path.getTangentAt( epsilon );\n\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\n\t}\n\t*/\n\n\tfunction initialNormal3() {\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the smallest tangent xyz component\n\n\t\tnormals[ 0 ] = new THREE.Vector3();\n\t\tbinormals[ 0 ] = new THREE.Vector3();\n\t\tsmallest = Number.MAX_VALUE;\n\t\ttx = Math.abs( tangents[ 0 ].x );\n\t\tty = Math.abs( tangents[ 0 ].y );\n\t\ttz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= smallest ) {\n\n\t\t\tsmallest = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= smallest ) {\n\n\t\t\tsmallest = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= smallest ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\t}\n\n\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\n\n\tfor ( i = 1; i < numpoints; i ++ ) {\n\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\tvec.normalize();\n\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t}\n\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t}\n\n\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\tif ( closed ) {\n\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\n\t\ttheta /= ( numpoints - 1 );\n\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\n\n\t\t\ttheta = - theta;\n\n\t\t}\n\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\n\n\t\t\t// twist a little...\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t}\n\n};\n\n// File:src/extras/geometries/PolyhedronGeometry.js\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\tvar that = this;\n\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\n\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\n\n\t}\n\n\tvar p = this.vertices;\n\n\tvar faces = [];\n\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\n\n\t\tvar v1 = p[ indices[ i ] ];\n\t\tvar v2 = p[ indices[ i + 1 ] ];\n\t\tvar v3 = p[ indices[ i + 2 ] ];\n\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\n\n\t}\n\n\tvar centroid = new THREE.Vector3();\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tsubdivide( faces[ i ], detail );\n\n\t}\n\n\n\t// Handle case when face straddles the seam\n\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\n\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\tvar x0 = uvs[ 0 ].x;\n\t\tvar x1 = uvs[ 1 ].x;\n\t\tvar x2 = uvs[ 2 ].x;\n\n\t\tvar max = Math.max( x0, x1, x2 );\n\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\n\n\t\t}\n\n\t}\n\n\n\t// Apply radius\n\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\tthis.vertices[ i ].multiplyScalar( radius );\n\n\t}\n\n\n\t// Merge vertices\n\n\tthis.mergeVertices();\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\n\t// Project vector onto sphere's surface\n\n\tfunction prepare( vector ) {\n\n\t\tvar vertex = vector.normalize().clone();\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\n\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\n\n\t\treturn vertex;\n\n\t}\n\n\n\t// Approximate a curved face with recursively sub-divided triangles.\n\n\tfunction make( v1, v2, v3, materialIndex ) {\n\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\n\t\tthat.faces.push( face );\n\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\n\n\t\tvar azi = azimuth( centroid );\n\n\t\tthat.faceVertexUvs[ 0 ].push( [\n\t\t\tcorrectUV( v1.uv, v1, azi ),\n\t\t\tcorrectUV( v2.uv, v2, azi ),\n\t\t\tcorrectUV( v3.uv, v3, azi )\n\t\t] );\n\n\t}\n\n\n\t// Analytically subdivide a face to the required detail level.\n\n\tfunction subdivide( face, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\t\tvar a = prepare( that.vertices[ face.a ] );\n\t\tvar b = prepare( that.vertices[ face.b ] );\n\t\tvar c = prepare( that.vertices[ face.c ] );\n\t\tvar v = [];\n\n\t\tvar materialIndex = face.materialIndex;\n\n\t\t// Construct all of the vertices for this subdivision.\n\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Construct all of the faces.\n\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\n\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tmake(\n\t\t\t\t\t\tv[ i ][ k + 1 ],\n\t\t\t\t\t\tv[ i + 1 ][ k ],\n\t\t\t\t\t\tv[ i ][ k ],\n\t\t\t\t\t\tmaterialIndex\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmake(\n\t\t\t\t\t\tv[ i ][ k + 1 ],\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\n\t\t\t\t\t\tv[ i + 1 ][ k ],\n\t\t\t\t\t\tmaterialIndex\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n\n\t// Texture fixing helper. Spheres have some odd behaviours.\n\n\tfunction correctUV( uv, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\n\t\treturn uv.clone();\n\n\t}\n\n\n};\n\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\n\n// File:src/extras/geometries/DodecahedronGeometry.js\n\n/**\n * @author Abe Pazos / https://hamoid.com\n */\n\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t 1, - 1, - 1,     1, - 1,  1,\n\t\t 1,  1, - 1,     1,  1,  1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t,     0, - r,  t,\n\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t,  0,    - r,  t,  0,\n\t\t r, - t,  0,     r,  t,  0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t,  0, - r,     t,  0, - r,\n\t\t- t,  0,  r,     t,  0,  r\n\t];\n\n\tvar indices = [\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t];\n\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n};\n\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\n\n// File:src/extras/geometries/IcosahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t];\n\n\tvar indices = [\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t];\n\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n};\n\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\n\n// File:src/extras/geometries/OctahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.OctahedronGeometry = function ( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t];\n\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n};\n\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\n\n// File:src/extras/geometries/TetrahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\n\n\tvar vertices = [\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t];\n\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n};\n\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\n\n// File:src/extras/geometries/ParametricGeometry.js\n\n/**\n * @author zz85 / https://github.com/zz85\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n *\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\n *\n */\n\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tvar verts = this.vertices;\n\tvar faces = this.faces;\n\tvar uvs = this.faceVertexUvs[ 0 ];\n\n\tvar i, j, p;\n\tvar u, v;\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tv = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tu = j / slices;\n\n\t\t\tp = func( u, v );\n\t\t\tverts.push( p );\n\n\t\t}\n\n\t}\n\n\tvar a, b, c, d;\n\tvar uva, uvb, uvc, uvd;\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\ta = i * sliceCount + j;\n\t\t\tb = i * sliceCount + j + 1;\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\n\t\t\td = ( i + 1 ) * sliceCount + j;\n\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\n\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\n\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n\t\t}\n\n\t}\n\n\t// console.log(this);\n\n\t// magic bullet\n\t// var diff = this.mergeVertices();\n\t// console.log('removed ', diff, ' vertices by merging');\n\n\tthis.computeFaceNormals();\n\tthis.computeVertexNormals();\n\n};\n\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\n\n// File:src/extras/geometries/WireframeGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.WireframeGeometry = function ( geometry ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tvar edge = [ 0, 0 ], hash = {};\n\n\tfunction sortFunction( a, b ) {\n\n\t\treturn a - b;\n\n\t}\n\n\tvar keys = [ 'a', 'b', 'c' ];\n\n\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\tvar vertices = geometry.vertices;\n\t\tvar faces = geometry.faces;\n\t\tvar numEdges = 0;\n\n\t\t// allocate maximal size\n\t\tvar edges = new Uint32Array( 6 * faces.length );\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\tvar key = edge.toString();\n\n\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\n\n\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// Indexed BufferGeometry\n\n\t\t\tvar indices = geometry.index.array;\n\t\t\tvar vertices = geometry.attributes.position;\n\t\t\tvar groups = geometry.groups;\n\t\t\tvar numEdges = 0;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgeometry.addGroup( 0, indices.length );\n\n\t\t\t}\n\n\t\t\t// allocate maximal size\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\n\n\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\n\t\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\n\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tvar vertices = geometry.attributes.position.array;\n\t\t\tvar numEdges = vertices.length / 3;\n\t\t\tvar numTris = numEdges / 3;\n\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tvar index = 18 * i + 6 * j;\n\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\n\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t\t}\n\n\t}\n\n};\n\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\n\n// File:src/extras/helpers/AxisHelper.js\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.AxisHelper = function ( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = new Float32Array( [\n\t\t0, 0, 0,  size, 0, 0,\n\t\t0, 0, 0,  0, size, 0,\n\t\t0, 0, 0,  0, 0, size\n\t] );\n\n\tvar colors = new Float32Array( [\n\t\t1, 0, 0,  1, 0.6, 0,\n\t\t0, 1, 0,  0.6, 1, 0,\n\t\t0, 0, 1,  0, 0.6, 1\n\t] );\n\n\tvar geometry = new THREE.BufferGeometry();\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n\n\tTHREE.LineSegments.call( this, geometry, material );\n\n};\n\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\n\n// File:src/extras/helpers/ArrowHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nTHREE.ArrowHelper = ( function () {\n\n\tvar lineGeometry = new THREE.BufferGeometry();\n\tlineGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\tvar coneGeometry = new THREE.CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t};\n\n}() );\n\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\n\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new THREE.Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n// File:src/extras/helpers/BoxHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BoxHelper = function ( object ) {\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new THREE.BufferGeometry();\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\n\n\tif ( object !== undefined ) {\n\n\t\tthis.update( object );\n\n\t}\n\n};\n\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\n\nTHREE.BoxHelper.prototype.update = ( function () {\n\n\tvar box = new THREE.Box3();\n\n\treturn function ( object ) {\n\n\t\tif ( object instanceof THREE.Box3 ) {\n\n\t\t\tbox.copy( object );\n\n\t\t} else {\n\n\t\t\tbox.setFromObject( object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\n// File:src/extras/helpers/BoundingBoxHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\n// a helper to show the world-axis-aligned bounding box for an object\n\nTHREE.BoundingBoxHelper = function ( object, hex ) {\n\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\n\n\tthis.object = object;\n\n\tthis.box = new THREE.Box3();\n\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\n\n};\n\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\n\nTHREE.BoundingBoxHelper.prototype.update = function () {\n\n\tthis.box.setFromObject( this.object );\n\n\tthis.box.size( this.scale );\n\n\tthis.box.center( this.position );\n\n};\n\n// File:src/extras/helpers/CameraHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nTHREE.CameraHelper = function ( camera ) {\n\n\tvar geometry = new THREE.Geometry();\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar hexFrustum = 0xffaa00;\n\tvar hexCone = 0xff0000;\n\tvar hexUp = 0x00aaff;\n\tvar hexTarget = 0xffffff;\n\tvar hexCross = 0x333333;\n\n\t// near\n\n\taddLine( \"n1\", \"n2\", hexFrustum );\n\taddLine( \"n2\", \"n4\", hexFrustum );\n\taddLine( \"n4\", \"n3\", hexFrustum );\n\taddLine( \"n3\", \"n1\", hexFrustum );\n\n\t// far\n\n\taddLine( \"f1\", \"f2\", hexFrustum );\n\taddLine( \"f2\", \"f4\", hexFrustum );\n\taddLine( \"f4\", \"f3\", hexFrustum );\n\taddLine( \"f3\", \"f1\", hexFrustum );\n\n\t// sides\n\n\taddLine( \"n1\", \"f1\", hexFrustum );\n\taddLine( \"n2\", \"f2\", hexFrustum );\n\taddLine( \"n3\", \"f3\", hexFrustum );\n\taddLine( \"n4\", \"f4\", hexFrustum );\n\n\t// cone\n\n\taddLine( \"p\", \"n1\", hexCone );\n\taddLine( \"p\", \"n2\", hexCone );\n\taddLine( \"p\", \"n3\", hexCone );\n\taddLine( \"p\", \"n4\", hexCone );\n\n\t// up\n\n\taddLine( \"u1\", \"u2\", hexUp );\n\taddLine( \"u2\", \"u3\", hexUp );\n\taddLine( \"u3\", \"u1\", hexUp );\n\n\t// target\n\n\taddLine( \"c\", \"t\", hexTarget );\n\taddLine( \"p\", \"c\", hexCross );\n\n\t// cross\n\n\taddLine( \"cn1\", \"cn2\", hexCross );\n\taddLine( \"cn3\", \"cn4\", hexCross );\n\n\taddLine( \"cf1\", \"cf2\", hexCross );\n\taddLine( \"cf3\", \"cf4\", hexCross );\n\n\tfunction addLine( a, b, hex ) {\n\n\t\taddPoint( a, hex );\n\t\taddPoint( b, hex );\n\n\t}\n\n\tfunction addPoint( id, hex ) {\n\n\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\n\n\t}\n\n\tTHREE.LineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tthis.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n};\n\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\n\nTHREE.CameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new THREE.Vector3();\n\tvar camera = new THREE.Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function () {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t// near\n\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t};\n\n}();\n\n// File:src/extras/helpers/DirectionalLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.DirectionalLightHelper = function ( light, size ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new THREE.BufferGeometry();\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [\n\t\t- size,   size, 0,\n\t\t  size,   size, 0,\n\t\t  size, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size,   size, 0\n\t], 3 ) );\n\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\n\n\tthis.add( new THREE.Line( geometry, material ) );\n\n\tgeometry = new THREE.BufferGeometry();\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.add( new THREE.Line( geometry, material ));\n\n\tthis.update();\n\n};\n\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\n\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\n\n\tvar lightPlane = this.children[ 0 ];\n\tvar targetLine = this.children[ 1 ];\n\n\tlightPlane.geometry.dispose();\n\tlightPlane.material.dispose();\n\ttargetLine.geometry.dispose();\n\ttargetLine.material.dispose();\n\n};\n\nTHREE.DirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new THREE.Vector3();\n\tvar v2 = new THREE.Vector3();\n\tvar v3 = new THREE.Vector3();\n\n\treturn function () {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tvar lightPlane = this.children[ 0 ];\n\t\tvar targetLine = this.children[ 1 ];\n\n\t\tlightPlane.lookAt( v3 );\n\t\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\ttargetLine.lookAt( v3 );\n\t\ttargetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n// File:src/extras/helpers/EdgesHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @param object THREE.Mesh whose geometry will be used\n * @param hex line color\n * @param thresholdAngle the minimum angle (in degrees),\n * between the face normals of adjacent faces,\n * that is required to render an edge. A value of 10 means\n * an edge is only rendered if the angle is at least 10 degrees.\n */\n\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\n\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n};\n\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\n\n// File:src/extras/helpers/FaceNormalsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry instanceof THREE.Geometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new THREE.BufferGeometry();\n\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n};\n\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\n\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new THREE.Vector3();\n\tvar v2 = new THREE.Vector3();\n\tvar normalMatrix = new THREE.Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t\treturn this;\n\n\t};\n\n}() );\n\n// File:src/extras/helpers/GridHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.GridHelper = function ( size, step, color1, color2 ) {\n\n\tcolor1 = new THREE.Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new THREE.Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tfor ( var i = - size, j = 0; i <= size; i += step ) {\n\n\t\tvertices.push( - size, 0, i, size, 0, i );\n\t\tvertices.push( i, 0, - size, i, 0, size );\n\n\t\tvar color = i === 0 ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new THREE.BufferGeometry();\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new THREE.Float32Attribute( colors, 3 ) );\n\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n\n\tTHREE.LineSegments.call( this, geometry, material );\n\n};\n\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\n\nTHREE.GridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\n// File:src/extras/helpers/HemisphereLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\n\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\n\tgeometry.rotateX( - Math.PI / 2 );\n\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\n\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\n\n\t}\n\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\n\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\n\tthis.add( this.lightSphere );\n\n\tthis.update();\n\n};\n\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\n\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.lightSphere.geometry.dispose();\n\tthis.lightSphere.material.dispose();\n\n};\n\nTHREE.HemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new THREE.Vector3();\n\n\treturn function () {\n\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\n\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\n\n\t};\n\n}();\n\n// File:src/extras/helpers/PointLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.PointLightHelper = function ( light, sphereSize ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tvar geometry = new THREE.SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n};\n\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\n\nTHREE.PointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nTHREE.PointLightHelper.prototype.update = function () {\n\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n// File:src/extras/helpers/SkeletonHelper.js\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n */\n\nTHREE.SkeletonHelper = function ( object ) {\n\n\tthis.bones = this.getBoneList( object );\n\n\tvar geometry = new THREE.Geometry();\n\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\tvar bone = this.bones[ i ];\n\n\t\tif ( bone.parent instanceof THREE.Bone ) {\n\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dynamic = true;\n\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tTHREE.LineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n};\n\n\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\n\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\n\n\tvar boneList = [];\n\n\tif ( object instanceof THREE.Bone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n};\n\nTHREE.SkeletonHelper.prototype.update = function () {\n\n\tvar geometry = this.geometry;\n\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\n\n\tvar boneMatrix = new THREE.Matrix4();\n\n\tvar j = 0;\n\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\tvar bone = this.bones[ i ];\n\n\t\tif ( bone.parent instanceof THREE.Bone ) {\n\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\n\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\n\n\t\t\tj += 2;\n\n\t\t}\n\n\t}\n\n\tgeometry.verticesNeedUpdate = true;\n\n\tgeometry.computeBoundingSphere();\n\n};\n\n// File:src/extras/helpers/SpotLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.SpotLightHelper = function ( light ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tvar geometry = new THREE.BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0,   0,   0,   1,\n\t\t0, 0, 0,   1,   0,   1,\n\t\t0, 0, 0, - 1,   0,   1,\n\t\t0, 0, 0,   0,   1,   1,\n\t\t0, 0, 0,   0, - 1,   1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( positions, 3 ) );\n\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new THREE.LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n};\n\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\n\nTHREE.SpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nTHREE.SpotLightHelper.prototype.update = function () {\n\n\tvar vector = new THREE.Vector3();\n\tvar vector2 = new THREE.Vector3();\n\n\treturn function () {\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t};\n\n}();\n\n// File:src/extras/helpers/VertexNormalsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry instanceof THREE.Geometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new THREE.BufferGeometry();\n\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n};\n\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\n\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new THREE.Vector3();\n\tvar v2 = new THREE.Vector3();\n\tvar normalMatrix = new THREE.Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t\treturn this;\n\n\t};\n\n}() );\n\n// File:src/extras/helpers/WireframeHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.WireframeHelper = function ( object, hex ) {\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\n\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n};\n\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\n\n// File:src/extras/objects/ImmediateRenderObject.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ImmediateRenderObject = function ( material ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( renderCallback ) {};\n\n};\n\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\n\n// File:src/extras/objects/MorphBlendMesh.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MorphBlendMesh = function( geometry, material ) {\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.animationsMap = {};\n\tthis.animationsList = [];\n\n\t// prepare default animation\n\t// (all frames played together in 1 second)\n\n\tvar numFrames = this.geometry.morphTargets.length;\n\n\tvar name = \"__default\";\n\n\tvar startFrame = 0;\n\tvar endFrame = numFrames - 1;\n\n\tvar fps = numFrames / 1;\n\n\tthis.createAnimation( name, startFrame, endFrame, fps );\n\tthis.setAnimationWeight( name, 1 );\n\n};\n\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\n\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\n\n\tvar animation = {\n\n\t\tstart: start,\n\t\tend: end,\n\n\t\tlength: end - start + 1,\n\n\t\tfps: fps,\n\t\tduration: ( end - start ) / fps,\n\n\t\tlastFrame: 0,\n\t\tcurrentFrame: 0,\n\n\t\tactive: false,\n\n\t\ttime: 0,\n\t\tdirection: 1,\n\t\tweight: 1,\n\n\t\tdirectionBackwards: false,\n\t\tmirroredLoop: false\n\n\t};\n\n\tthis.animationsMap[ name ] = animation;\n\tthis.animationsList.push( animation );\n\n};\n\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\n\n\tvar pattern = /([a-z]+)_?(\\d+)/i;\n\n\tvar firstAnimation, frameRanges = {};\n\n\tvar geometry = this.geometry;\n\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\n\n\t\tvar morph = geometry.morphTargets[ i ];\n\t\tvar chunks = morph.name.match( pattern );\n\n\t\tif ( chunks && chunks.length > 1 ) {\n\n\t\t\tvar name = chunks[ 1 ];\n\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\n\n\t\t\tvar range = frameRanges[ name ];\n\n\t\t\tif ( i < range.start ) range.start = i;\n\t\t\tif ( i > range.end ) range.end = i;\n\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\n\n\t\t}\n\n\t}\n\n\tfor ( var name in frameRanges ) {\n\n\t\tvar range = frameRanges[ name ];\n\t\tthis.createAnimation( name, range.start, range.end, fps );\n\n\t}\n\n\tthis.firstAnimation = firstAnimation;\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.direction = 1;\n\t\tanimation.directionBackwards = false;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.direction = - 1;\n\t\tanimation.directionBackwards = true;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.fps = fps;\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.duration = duration;\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.weight = weight;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.time = time;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\n\n\tvar time = 0;\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\ttime = animation.time;\n\n\t}\n\n\treturn time;\n\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\n\n\tvar duration = - 1;\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tduration = animation.duration;\n\n\t}\n\n\treturn duration;\n\n};\n\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.time = 0;\n\t\tanimation.active = true;\n\n\t} else {\n\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.active = false;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\n\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\n\n\t\tvar animation = this.animationsList[ i ];\n\n\t\tif ( ! animation.active ) continue;\n\n\t\tvar frameTime = animation.duration / animation.length;\n\n\t\tanimation.time += animation.direction * delta;\n\n\t\tif ( animation.mirroredLoop ) {\n\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\n\n\t\t\t\tanimation.direction *= - 1;\n\n\t\t\t\tif ( animation.time > animation.duration ) {\n\n\t\t\t\t\tanimation.time = animation.duration;\n\t\t\t\t\tanimation.directionBackwards = true;\n\n\t\t\t\t}\n\n\t\t\t\tif ( animation.time < 0 ) {\n\n\t\t\t\t\tanimation.time = 0;\n\t\t\t\t\tanimation.directionBackwards = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tanimation.time = animation.time % animation.duration;\n\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\n\n\t\t}\n\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\n\t\tvar weight = animation.weight;\n\n\t\tif ( keyframe !== animation.currentFrame ) {\n\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\n\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\n\n\t\t\tanimation.lastFrame = animation.currentFrame;\n\t\t\tanimation.currentFrame = keyframe;\n\n\t\t}\n\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\n\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\n\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\n\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\n\n\t\t} else {\n\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\n\n\t\t}\n\n\t}\n\n};\n\n"],
  "mappings": "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",
  "names": ["point", "intPoint", "THREE", "animationKeys", "times", "values", "i", "bone", "scale", "data", "image", "index", "ray", "attributes", "object", "parameters", "lights", "shadowMap", "replace", "depthMaterial", "useMorphing", "useSkinning", "SingleUniform", "WebGLUniforms", "shader", "program", "contour", "holes", "h", "hl", "h2", "text", "paths", "subPaths", "l", "shapes", "tmpPath", "tmpShape", "vertices", "width", "height", "depth", "j", "k", "s", "b", "z", "u", "p", "q", "radius", "v1", "v2", "v3", "detail", "azimuth"]
}
